[
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.CompositeMapTest(java.lang.String)",
    "snippet": "public CompositeMapTest(final String testName) {\n        super(testName);\n    }",
    "begin_line": 33,
    "end_line": 35,
    "comment": "",
    "child_ranges": [
      "(line 34,col 9)-(line 34,col 24)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.setUp()",
    "snippet": "@Override\n    public void setUp() throws Exception {\n        super.setUp();\n        this.pass \u003d false;\n    }",
    "begin_line": 38,
    "end_line": 41,
    "comment": "",
    "child_ranges": [
      "(line 39,col 9)-(line 39,col 22)",
      "(line 40,col 9)-(line 40,col 26)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.makeObject()",
    "snippet": "@Override\n    public CompositeMap\u003cK, V\u003e makeObject() {\n        final CompositeMap\u003cK, V\u003e map \u003d new CompositeMap\u003c\u003e();\n        map.addComposited(new HashMap\u003cK, V\u003e());\n        map.setMutator( new EmptyMapMutator\u003cK, V\u003e() );\n        return map;\n    }",
    "begin_line": 44,
    "end_line": 49,
    "comment": "",
    "child_ranges": [
      "(line 45,col 9)-(line 45,col 60)",
      "(line 46,col 9)-(line 46,col 47)",
      "(line 47,col 9)-(line 47,col 54)",
      "(line 48,col 9)-(line 48,col 19)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.buildOne()",
    "snippet": "@SuppressWarnings(\"unchecked\")\n    private Map\u003cK, V\u003e buildOne() {\n        final HashMap\u003cK, V\u003e map \u003d new HashMap\u003c\u003e();\n        map.put((K) \"1\", (V) \"one\");\n        map.put((K) \"2\", (V) \"two\");\n        return map;\n    }",
    "begin_line": 52,
    "end_line": 57,
    "comment": "",
    "child_ranges": [
      "(line 53,col 9)-(line 53,col 50)",
      "(line 54,col 9)-(line 54,col 36)",
      "(line 55,col 9)-(line 55,col 36)",
      "(line 56,col 9)-(line 56,col 19)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.buildTwo()",
    "snippet": "@SuppressWarnings(\"unchecked\")\n    public Map\u003cK, V\u003e buildTwo() {\n        final HashMap\u003cK, V\u003e map \u003d new HashMap\u003c\u003e();\n        map.put((K) \"3\", (V) \"three\");\n        map.put((K) \"4\", (V) \"four\");\n        return map;\n    }",
    "begin_line": 60,
    "end_line": 65,
    "comment": "",
    "child_ranges": [
      "(line 61,col 9)-(line 61,col 50)",
      "(line 62,col 9)-(line 62,col 38)",
      "(line 63,col 9)-(line 63,col 37)",
      "(line 64,col 9)-(line 64,col 19)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.testGet()",
    "snippet": "public void testGet() {\n        final CompositeMap\u003cK, V\u003e map \u003d new CompositeMap\u003c\u003e(buildOne(), buildTwo());\n        assertEquals(\"one\", map.get(\"1\"));\n        assertEquals(\"four\", map.get(\"4\"));\n    }",
    "begin_line": 67,
    "end_line": 71,
    "comment": "",
    "child_ranges": [
      "(line 68,col 9)-(line 68,col 82)",
      "(line 69,col 9)-(line 69,col 42)",
      "(line 70,col 9)-(line 70,col 43)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.testAddComposited()",
    "snippet": "@SuppressWarnings(\"unchecked\")\n    public void testAddComposited() {\n        final CompositeMap\u003cK, V\u003e map \u003d new CompositeMap\u003c\u003e(buildOne(), buildTwo());\n        final HashMap\u003cK, V\u003e three \u003d new HashMap\u003c\u003e();\n        three.put((K) \"5\", (V) \"five\");\n        map.addComposited(null);\n        map.addComposited(three);\n        assertTrue(map.containsKey(\"5\"));\n        try {\n            map.addComposited(three);\n            fail(\"Expecting IllegalArgumentException.\");\n        } catch (final IllegalArgumentException ex) {\n            // expected\n        }\n    }",
    "begin_line": 74,
    "end_line": 87,
    "comment": "",
    "child_ranges": [
      "(line 75,col 9)-(line 75,col 82)",
      "(line 76,col 9)-(line 76,col 52)",
      "(line 77,col 9)-(line 77,col 39)",
      "(line 78,col 9)-(line 78,col 32)",
      "(line 79,col 9)-(line 79,col 33)",
      "(line 80,col 9)-(line 80,col 41)",
      "(line 81,col 9)-(line 86,col 9)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited()",
    "snippet": "@SuppressWarnings(\"unchecked\")\n    public void testRemoveComposited() {\n        final CompositeMap\u003cK, V\u003e map \u003d new CompositeMap\u003c\u003e(buildOne(), buildTwo());\n        final HashMap\u003cK, V\u003e three \u003d new HashMap\u003c\u003e();\n        three.put((K) \"5\", (V) \"five\");\n        map.addComposited(null);\n        map.addComposited(three);\n        assertTrue(map.containsKey(\"5\"));\n\n        map.removeComposited(three);\n        assertFalse(map.containsKey(\"5\"));\n\n        map.removeComposited(buildOne());\n        assertFalse(map.containsKey(\"2\"));\n\n    }",
    "begin_line": 90,
    "end_line": 104,
    "comment": "",
    "child_ranges": [
      "(line 91,col 9)-(line 91,col 82)",
      "(line 92,col 9)-(line 92,col 52)",
      "(line 93,col 9)-(line 93,col 39)",
      "(line 94,col 9)-(line 94,col 32)",
      "(line 95,col 9)-(line 95,col 33)",
      "(line 96,col 9)-(line 96,col 41)",
      "(line 98,col 9)-(line 98,col 36)",
      "(line 99,col 9)-(line 99,col 42)",
      "(line 101,col 9)-(line 101,col 41)",
      "(line 102,col 9)-(line 102,col 42)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying()",
    "snippet": "@SuppressWarnings(\"unchecked\")\n    public void testRemoveFromUnderlying() {\n        final CompositeMap\u003cK, V\u003e map \u003d new CompositeMap\u003c\u003e(buildOne(), buildTwo());\n        final HashMap\u003cK, V\u003e three \u003d new HashMap\u003c\u003e();\n        three.put((K) \"5\", (V) \"five\");\n        map.addComposited(null);\n        map.addComposited(three);\n        assertTrue(map.containsKey(\"5\"));\n\n        //Now remove \"5\"\n        three.remove(\"5\");\n        assertFalse(map.containsKey(\"5\"));\n    }",
    "begin_line": 107,
    "end_line": 118,
    "comment": "",
    "child_ranges": [
      "(line 108,col 9)-(line 108,col 82)",
      "(line 109,col 9)-(line 109,col 52)",
      "(line 110,col 9)-(line 110,col 39)",
      "(line 111,col 9)-(line 111,col 32)",
      "(line 112,col 9)-(line 112,col 33)",
      "(line 113,col 9)-(line 113,col 41)",
      "(line 116,col 9)-(line 116,col 26)",
      "(line 117,col 9)-(line 117,col 42)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited()",
    "snippet": "@SuppressWarnings(\"unchecked\")\n    public void testRemoveFromComposited() {\n        final CompositeMap\u003cK, V\u003e map \u003d new CompositeMap\u003c\u003e(buildOne(), buildTwo());\n        final HashMap\u003cK, V\u003e three \u003d new HashMap\u003c\u003e();\n        three.put((K) \"5\", (V) \"five\");\n        map.addComposited(null);\n        map.addComposited(three);\n        assertTrue(map.containsKey(\"5\"));\n\n        //Now remove \"5\"\n        map.remove(\"5\");\n        assertFalse(three.containsKey(\"5\"));\n    }",
    "begin_line": 121,
    "end_line": 132,
    "comment": "",
    "child_ranges": [
      "(line 122,col 9)-(line 122,col 82)",
      "(line 123,col 9)-(line 123,col 52)",
      "(line 124,col 9)-(line 124,col 39)",
      "(line 125,col 9)-(line 125,col 32)",
      "(line 126,col 9)-(line 126,col 33)",
      "(line 127,col 9)-(line 127,col 41)",
      "(line 130,col 9)-(line 130,col 24)",
      "(line 131,col 9)-(line 131,col 44)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision()",
    "snippet": "public void testResolveCollision() {\n        final CompositeMap\u003cK, V\u003e map \u003d new CompositeMap\u003c\u003e(buildOne(), buildTwo(),\n            new CompositeMap.MapMutator\u003cK, V\u003e() {\n            private static final long serialVersionUID \u003d 1L;\n\n            @Override\n            public void resolveCollision(final CompositeMap\u003cK, V\u003e composite,\n            final Map\u003cK, V\u003e existing,\n            final Map\u003cK, V\u003e added,\n            final Collection\u003cK\u003e intersect) {\n                pass \u003d true;\n            }\n\n            @Override\n            public V put(final CompositeMap\u003cK, V\u003e map, final Map\u003cK, V\u003e[] composited, final K key,\n                final V value) {\n                throw new UnsupportedOperationException();\n            }\n\n            @Override\n            public void putAll(final CompositeMap\u003cK, V\u003e map, final Map\u003cK, V\u003e[] composited, final Map\u003c? extends K, ? extends V\u003e t) {\n                throw new UnsupportedOperationException();\n            }\n        });\n\n        map.addComposited(buildOne());\n        assertTrue(pass);\n    }",
    "begin_line": 134,
    "end_line": 161,
    "comment": "",
    "child_ranges": [
      "(line 135,col 9)-(line 157,col 11)",
      "(line 159,col 9)-(line 159,col 38)",
      "(line 160,col 9)-(line 160,col 25)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.resolveCollision(CompositeMap\u003cK,V\u003e, Map\u003cK,V\u003e, Map\u003cK,V\u003e, Collection\u003cK\u003e)",
    "snippet": "@Override\n            public void resolveCollision(final CompositeMap\u003cK, V\u003e composite,\n            final Map\u003cK, V\u003e existing,\n            final Map\u003cK, V\u003e added,\n            final Collection\u003cK\u003e intersect) {\n                pass \u003d true;\n            }",
    "begin_line": 140,
    "end_line": 145,
    "comment": "",
    "child_ranges": [
      "(line 144,col 17)-(line 144,col 28)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.put(CompositeMap\u003cK,V\u003e, Map\u003cK,V\u003e[], K, V)",
    "snippet": "@Override\n            public V put(final CompositeMap\u003cK, V\u003e map, final Map\u003cK, V\u003e[] composited, final K key,\n                final V value) {\n                throw new UnsupportedOperationException();\n            }",
    "begin_line": 148,
    "end_line": 151,
    "comment": "",
    "child_ranges": [
      "(line 150,col 17)-(line 150,col 58)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.putAll(CompositeMap\u003cK,V\u003e, Map\u003cK,V\u003e[], Map\u003c? extends K,? extends V\u003e)",
    "snippet": "@Override\n            public void putAll(final CompositeMap\u003cK, V\u003e map, final Map\u003cK, V\u003e[] composited, final Map\u003c? extends K, ? extends V\u003e t) {\n                throw new UnsupportedOperationException();\n            }",
    "begin_line": 154,
    "end_line": 156,
    "comment": "",
    "child_ranges": [
      "(line 155,col 17)-(line 155,col 58)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.testPut()",
    "snippet": "@SuppressWarnings(\"unchecked\")\n    public void testPut() {\n        final CompositeMap\u003cK, V\u003e map \u003d new CompositeMap\u003c\u003e(buildOne(), buildTwo(),\n            new CompositeMap.MapMutator\u003cK, V\u003e() {\n            private static final long serialVersionUID \u003d 1L;\n            @Override\n            public void resolveCollision(final CompositeMap\u003cK, V\u003e composite,\n            final Map\u003cK, V\u003e existing,\n            final Map\u003cK, V\u003e added,\n            final Collection\u003cK\u003e intersect) {\n                throw new UnsupportedOperationException();\n            }\n\n            @Override\n            public V put(final CompositeMap\u003cK, V\u003e map, final Map\u003cK, V\u003e[] composited, final K key,\n                final V value) {\n                pass \u003d true;\n                return (V) \"foo\";\n            }\n\n            @Override\n            public void putAll(final CompositeMap\u003cK, V\u003e map, final Map\u003cK, V\u003e[] composited, final Map\u003c? extends K, ? extends V\u003e t) {\n                throw new UnsupportedOperationException();\n            }\n        });\n\n        map.put((K) \"willy\", (V) \"wonka\");\n        assertTrue(pass);\n    }",
    "begin_line": 164,
    "end_line": 191,
    "comment": "",
    "child_ranges": [
      "(line 165,col 9)-(line 187,col 11)",
      "(line 189,col 9)-(line 189,col 42)",
      "(line 190,col 9)-(line 190,col 25)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.resolveCollision(CompositeMap\u003cK,V\u003e, Map\u003cK,V\u003e, Map\u003cK,V\u003e, Collection\u003cK\u003e)",
    "snippet": "@Override\n            public void resolveCollision(final CompositeMap\u003cK, V\u003e composite,\n            final Map\u003cK, V\u003e existing,\n            final Map\u003cK, V\u003e added,\n            final Collection\u003cK\u003e intersect) {\n                throw new UnsupportedOperationException();\n            }",
    "begin_line": 169,
    "end_line": 174,
    "comment": "",
    "child_ranges": [
      "(line 173,col 17)-(line 173,col 58)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.put(CompositeMap\u003cK,V\u003e, Map\u003cK,V\u003e[], K, V)",
    "snippet": "@Override\n            public V put(final CompositeMap\u003cK, V\u003e map, final Map\u003cK, V\u003e[] composited, final K key,\n                final V value) {\n                pass \u003d true;\n                return (V) \"foo\";\n            }",
    "begin_line": 177,
    "end_line": 181,
    "comment": "",
    "child_ranges": [
      "(line 179,col 17)-(line 179,col 28)",
      "(line 180,col 17)-(line 180,col 33)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.putAll(CompositeMap\u003cK,V\u003e, Map\u003cK,V\u003e[], Map\u003c? extends K,? extends V\u003e)",
    "snippet": "@Override\n            public void putAll(final CompositeMap\u003cK, V\u003e map, final Map\u003cK, V\u003e[] composited, final Map\u003c? extends K, ? extends V\u003e t) {\n                throw new UnsupportedOperationException();\n            }",
    "begin_line": 184,
    "end_line": 186,
    "comment": "",
    "child_ranges": [
      "(line 185,col 17)-(line 185,col 58)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.testPutAll()",
    "snippet": "public void testPutAll() {\n        final CompositeMap\u003cK, V\u003e map \u003d new CompositeMap\u003c\u003e(buildOne(), buildTwo(),\n            new CompositeMap.MapMutator\u003cK, V\u003e() {\n            private static final long serialVersionUID \u003d 1L;\n            @Override\n            public void resolveCollision(final CompositeMap\u003cK, V\u003e composite,\n            final Map\u003cK, V\u003e existing,\n            final Map\u003cK, V\u003e added,\n            final Collection\u003cK\u003e intersect) {\n                throw new UnsupportedOperationException();\n            }\n\n            @Override\n            public V put(final CompositeMap\u003cK, V\u003e map, final Map\u003cK, V\u003e[] composited, final K key,\n                final V value) {\n                throw new UnsupportedOperationException();\n            }\n\n            @Override\n            public void putAll(final CompositeMap\u003cK, V\u003e map, final Map\u003cK, V\u003e[] composited, final Map\u003c? extends K, ? extends V\u003e t) {\n                pass \u003d true;\n            }\n        });\n\n        map.putAll(null);\n        assertTrue(pass);\n    }",
    "begin_line": 193,
    "end_line": 219,
    "comment": "",
    "child_ranges": [
      "(line 194,col 9)-(line 215,col 11)",
      "(line 217,col 9)-(line 217,col 25)",
      "(line 218,col 9)-(line 218,col 25)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.resolveCollision(CompositeMap\u003cK,V\u003e, Map\u003cK,V\u003e, Map\u003cK,V\u003e, Collection\u003cK\u003e)",
    "snippet": "@Override\n            public void resolveCollision(final CompositeMap\u003cK, V\u003e composite,\n            final Map\u003cK, V\u003e existing,\n            final Map\u003cK, V\u003e added,\n            final Collection\u003cK\u003e intersect) {\n                throw new UnsupportedOperationException();\n            }",
    "begin_line": 198,
    "end_line": 203,
    "comment": "",
    "child_ranges": [
      "(line 202,col 17)-(line 202,col 58)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.put(CompositeMap\u003cK,V\u003e, Map\u003cK,V\u003e[], K, V)",
    "snippet": "@Override\n            public V put(final CompositeMap\u003cK, V\u003e map, final Map\u003cK, V\u003e[] composited, final K key,\n                final V value) {\n                throw new UnsupportedOperationException();\n            }",
    "begin_line": 206,
    "end_line": 209,
    "comment": "",
    "child_ranges": [
      "(line 208,col 17)-(line 208,col 58)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.putAll(CompositeMap\u003cK,V\u003e, Map\u003cK,V\u003e[], Map\u003c? extends K,? extends V\u003e)",
    "snippet": "@Override\n            public void putAll(final CompositeMap\u003cK, V\u003e map, final Map\u003cK, V\u003e[] composited, final Map\u003c? extends K, ? extends V\u003e t) {\n                pass \u003d true;\n            }",
    "begin_line": 212,
    "end_line": 214,
    "comment": "",
    "child_ranges": [
      "(line 213,col 17)-(line 213,col 28)"
    ]
  },
  {
    "class_name": "org.apache.commons.collections4.map.CompositeMapTest",
    "child_classes": [],
    "src_path": "org/apache/commons/collections4/map/CompositeMapTest.java",
    "signature": "org.apache.commons.collections4.map.CompositeMapTest.getCompatibilityVersion()",
    "snippet": "@Override\n    public String getCompatibilityVersion() {\n        return \"4\";\n    }",
    "begin_line": 222,
    "end_line": 224,
    "comment": "",
    "child_ranges": [
      "(line 223,col 9)-(line 223,col 19)"
    ]
  }
]