[
  {
    "class_name": "org.apache.commons.cli.CommandLine",
    "src_path": "org/apache/commons/cli/CommandLine.java",
    "signature": "org.apache.commons.cli.CommandLine.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 46,
    "end_line": 46,
    "comment": "/** \n * The serial version UID. \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.CommandLine",
    "src_path": "org/apache/commons/cli/CommandLine.java",
    "signature": "org.apache.commons.cli.CommandLine.args",
    "snippet": "private List args \u003d new LinkedList();",
    "begin_line": 49,
    "end_line": 49,
    "comment": "/** \n * the unrecognised options/arguments \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.CommandLine",
    "src_path": "org/apache/commons/cli/CommandLine.java",
    "signature": "org.apache.commons.cli.CommandLine.options",
    "snippet": "private List options \u003d new ArrayList();",
    "begin_line": 52,
    "end_line": 52,
    "comment": "/** \n * the processed options \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.DefaultParser",
    "src_path": "org/apache/commons/cli/DefaultParser.java",
    "signature": "org.apache.commons.cli.DefaultParser.cmd",
    "snippet": "protected CommandLine cmd;",
    "begin_line": 35,
    "end_line": 35,
    "comment": ""
  },
  {
    "class_name": "org.apache.commons.cli.DefaultParser",
    "src_path": "org/apache/commons/cli/DefaultParser.java",
    "signature": "org.apache.commons.cli.DefaultParser.options",
    "snippet": "protected Options options;",
    "begin_line": 36,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "org.apache.commons.cli.DefaultParser",
    "src_path": "org/apache/commons/cli/DefaultParser.java",
    "signature": "org.apache.commons.cli.DefaultParser.stopAtNonOption",
    "snippet": "protected boolean stopAtNonOption;",
    "begin_line": 43,
    "end_line": 43,
    "comment": "/** \n * Flag indicating how unrecognized tokens are handled. \u003ctt\u003etrue\u003c/tt\u003e to stop the parsing and add the remaining tokens to the args list. \u003ctt\u003efalse\u003c/tt\u003e to throw an exception. \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.DefaultParser",
    "src_path": "org/apache/commons/cli/DefaultParser.java",
    "signature": "org.apache.commons.cli.DefaultParser.currentToken",
    "snippet": "protected String currentToken;",
    "begin_line": 46,
    "end_line": 46,
    "comment": "/** \n * The token currently processed. \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.DefaultParser",
    "src_path": "org/apache/commons/cli/DefaultParser.java",
    "signature": "org.apache.commons.cli.DefaultParser.currentOption",
    "snippet": "protected Option currentOption;",
    "begin_line": 49,
    "end_line": 49,
    "comment": "/** \n * The last option parsed. \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.DefaultParser",
    "src_path": "org/apache/commons/cli/DefaultParser.java",
    "signature": "org.apache.commons.cli.DefaultParser.skipParsing",
    "snippet": "protected boolean skipParsing;",
    "begin_line": 52,
    "end_line": 52,
    "comment": "/** \n * Flag indicating if tokens should no longer be analysed and simply added as arguments of the command line. \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.DefaultParser",
    "src_path": "org/apache/commons/cli/DefaultParser.java",
    "signature": "org.apache.commons.cli.DefaultParser.expectedOpts",
    "snippet": "protected List expectedOpts;",
    "begin_line": 55,
    "end_line": 55,
    "comment": "/** \n * The required options expected to be found when parsing the command line. \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 42,
    "end_line": 42,
    "comment": "/** \n * The serial version UID. \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.UNINITIALIZED",
    "snippet": "public static final int UNINITIALIZED \u003d -1;",
    "begin_line": 45,
    "end_line": 45,
    "comment": "/** \n * constant that specifies the number of argument values has not been specified \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.UNLIMITED_VALUES",
    "snippet": "public static final int UNLIMITED_VALUES \u003d -2;",
    "begin_line": 48,
    "end_line": 48,
    "comment": "/** \n * constant that specifies the number of argument values is infinite \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.opt",
    "snippet": "private String opt;",
    "begin_line": 51,
    "end_line": 51,
    "comment": "/** \n * the name of the option \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.longOpt",
    "snippet": "private String longOpt;",
    "begin_line": 54,
    "end_line": 54,
    "comment": "/** \n * the long representation of the option \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.argName",
    "snippet": "private String argName \u003d \"arg\";",
    "begin_line": 57,
    "end_line": 57,
    "comment": "/** \n * the name of the argument for this option \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.description",
    "snippet": "private String description;",
    "begin_line": 60,
    "end_line": 60,
    "comment": "/** \n * description of the option \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.required",
    "snippet": "private boolean required;",
    "begin_line": 63,
    "end_line": 63,
    "comment": "/** \n * specifies whether this option is required to be present \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.optionalArg",
    "snippet": "private boolean optionalArg;",
    "begin_line": 66,
    "end_line": 66,
    "comment": "/** \n * specifies whether the argument value of this Option is optional \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.numberOfArgs",
    "snippet": "private int numberOfArgs \u003d UNINITIALIZED;",
    "begin_line": 69,
    "end_line": 69,
    "comment": "/** \n * the number of argument values this option can have \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.type",
    "snippet": "private Object type;",
    "begin_line": 72,
    "end_line": 72,
    "comment": "/** \n * the type of this Option \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.values",
    "snippet": "private List values \u003d new ArrayList();",
    "begin_line": 75,
    "end_line": 75,
    "comment": "/** \n * the list of argument values \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Option",
    "src_path": "org/apache/commons/cli/Option.java",
    "signature": "org.apache.commons.cli.Option.valuesep",
    "snippet": "private char valuesep;",
    "begin_line": 78,
    "end_line": 78,
    "comment": "/** \n * the character that is the value separator \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Options",
    "src_path": "org/apache/commons/cli/Options.java",
    "signature": "org.apache.commons.cli.Options.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 49,
    "end_line": 49,
    "comment": "/** \n * The serial version UID. \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Options",
    "src_path": "org/apache/commons/cli/Options.java",
    "signature": "org.apache.commons.cli.Options.shortOpts",
    "snippet": "private Map shortOpts \u003d new HashMap();",
    "begin_line": 52,
    "end_line": 52,
    "comment": "/** \n * a map of the options with the character key \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Options",
    "src_path": "org/apache/commons/cli/Options.java",
    "signature": "org.apache.commons.cli.Options.longOpts",
    "snippet": "private Map longOpts \u003d new HashMap();",
    "begin_line": 55,
    "end_line": 55,
    "comment": "/** \n * a map of the options with the long key \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Options",
    "src_path": "org/apache/commons/cli/Options.java",
    "signature": "org.apache.commons.cli.Options.requiredOpts",
    "snippet": "private List requiredOpts \u003d new ArrayList();",
    "begin_line": 58,
    "end_line": 58,
    "comment": "/** \n * a map of the required options \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Options",
    "src_path": "org/apache/commons/cli/Options.java",
    "signature": "org.apache.commons.cli.Options.optionGroups",
    "snippet": "private Map optionGroups \u003d new HashMap();",
    "begin_line": 61,
    "end_line": 61,
    "comment": "/** \n * a map of the option groups \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Parser",
    "src_path": "org/apache/commons/cli/Parser.java",
    "signature": "org.apache.commons.cli.Parser.cmd",
    "snippet": "protected CommandLine cmd;",
    "begin_line": 38,
    "end_line": 38,
    "comment": "/** \n * commandline instance \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Parser",
    "src_path": "org/apache/commons/cli/Parser.java",
    "signature": "org.apache.commons.cli.Parser.options",
    "snippet": "private Options options;",
    "begin_line": 41,
    "end_line": 41,
    "comment": "/** \n * current Options \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.Parser",
    "src_path": "org/apache/commons/cli/Parser.java",
    "signature": "org.apache.commons.cli.Parser.requiredOptions",
    "snippet": "private List requiredOptions;",
    "begin_line": 44,
    "end_line": 44,
    "comment": "/** \n * list of required options strings \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.PosixParser",
    "src_path": "org/apache/commons/cli/PosixParser.java",
    "signature": "org.apache.commons.cli.PosixParser.tokens",
    "snippet": "private List tokens \u003d new ArrayList();",
    "begin_line": 36,
    "end_line": 36,
    "comment": "/** \n * holder for flattened tokens \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.PosixParser",
    "src_path": "org/apache/commons/cli/PosixParser.java",
    "signature": "org.apache.commons.cli.PosixParser.eatTheRest",
    "snippet": "private boolean eatTheRest;",
    "begin_line": 39,
    "end_line": 39,
    "comment": "/** \n * specifies if bursting should continue \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.PosixParser",
    "src_path": "org/apache/commons/cli/PosixParser.java",
    "signature": "org.apache.commons.cli.PosixParser.currentOption",
    "snippet": "private Option currentOption;",
    "begin_line": 42,
    "end_line": 42,
    "comment": "/** \n * holder for the current option \n */\n"
  },
  {
    "class_name": "org.apache.commons.cli.PosixParser",
    "src_path": "org/apache/commons/cli/PosixParser.java",
    "signature": "org.apache.commons.cli.PosixParser.options",
    "snippet": "private Options options;",
    "begin_line": 45,
    "end_line": 45,
    "comment": "/** \n * the command line Options \n */\n"
  }
]