[
  {
    "class_name": "com.google.javascript.jscomp.AbstractCompiler",
    "src_path": "com/google/javascript/jscomp/AbstractCompiler.java",
    "signature": "com.google.javascript.jscomp.AbstractCompiler.READ_ERROR",
    "snippet": "static final DiagnosticType READ_ERROR \u003d DiagnosticType.error(\n      \"JSC_READ_ERROR\", \"Cannot read: {0}\");",
    "begin_line": 44,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.AbstractCompiler",
    "src_path": "com/google/javascript/jscomp/AbstractCompiler.java",
    "signature": "com.google.javascript.jscomp.AbstractCompiler.stage",
    "snippet": "private LifeCycleStage stage \u003d LifeCycleStage.RAW;",
    "begin_line": 47,
    "end_line": 47,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.AbstractMessageFormatter",
    "src_path": "com/google/javascript/jscomp/AbstractMessageFormatter.java",
    "signature": "com.google.javascript.jscomp.AbstractMessageFormatter.source",
    "snippet": "private final SourceExcerptProvider source;",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.AbstractMessageFormatter",
    "src_path": "com/google/javascript/jscomp/AbstractMessageFormatter.java",
    "signature": "com.google.javascript.jscomp.AbstractMessageFormatter.colorize",
    "snippet": "private boolean colorize;",
    "begin_line": 30,
    "end_line": 30,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.AbstractMessageFormatter",
    "src_path": "com/google/javascript/jscomp/AbstractMessageFormatter.java",
    "signature": "com.google.javascript.jscomp.AbstractMessageFormatter.SUPPORTED_COLOR_TERMINALS",
    "snippet": "private static final Set\u003cString\u003e SUPPORTED_COLOR_TERMINALS \u003d\n      ImmutableSet.of(\"xterm\",\n                      \"xterm-color\",\n                      \"xterm-256color\",\n                      \"screen-bce\");",
    "begin_line": 47,
    "end_line": 51,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.AbstractMessageFormatter",
    "src_path": "com/google/javascript/jscomp/AbstractMessageFormatter.java",
    "signature": "com.google.javascript.jscomp.AbstractMessageFormatter.controlCharacter",
    "snippet": "private final String controlCharacter;",
    "begin_line": 62,
    "end_line": 62,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.AnonymousFunctionNamingPolicy",
    "src_path": "com/google/javascript/jscomp/AnonymousFunctionNamingPolicy.java",
    "signature": "com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.reservedCharacters",
    "snippet": "private final char[] reservedCharacters;",
    "begin_line": 45,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.BasicErrorManager",
    "src_path": "com/google/javascript/jscomp/BasicErrorManager.java",
    "signature": "com.google.javascript.jscomp.BasicErrorManager.messages",
    "snippet": "private final SortedSet\u003cErrorWithLevel\u003e messages \u003d\n      Sets.newTreeSet(new LeveledJSErrorComparator());",
    "begin_line": 38,
    "end_line": 39,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.BasicErrorManager",
    "src_path": "com/google/javascript/jscomp/BasicErrorManager.java",
    "signature": "com.google.javascript.jscomp.BasicErrorManager.errorCount",
    "snippet": "private int errorCount \u003d 0;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.BasicErrorManager",
    "src_path": "com/google/javascript/jscomp/BasicErrorManager.java",
    "signature": "com.google.javascript.jscomp.BasicErrorManager.warningCount",
    "snippet": "private int warningCount \u003d 0;",
    "begin_line": 41,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.BasicErrorManager",
    "src_path": "com/google/javascript/jscomp/BasicErrorManager.java",
    "signature": "com.google.javascript.jscomp.BasicErrorManager.typedPercent",
    "snippet": "private double typedPercent \u003d 0.0;",
    "begin_line": 42,
    "end_line": 42,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.BasicErrorManager",
    "src_path": "com/google/javascript/jscomp/BasicErrorManager.java",
    "signature": "com.google.javascript.jscomp.BasicErrorManager.P1_LT_P2",
    "snippet": "private static final int P1_LT_P2 \u003d -1;",
    "begin_line": 125,
    "end_line": 125,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.BasicErrorManager",
    "src_path": "com/google/javascript/jscomp/BasicErrorManager.java",
    "signature": "com.google.javascript.jscomp.BasicErrorManager.P1_GT_P2",
    "snippet": "private static final int P1_GT_P2 \u003d 1;",
    "begin_line": 126,
    "end_line": 126,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.BasicErrorManager",
    "src_path": "com/google/javascript/jscomp/BasicErrorManager.java",
    "signature": "com.google.javascript.jscomp.BasicErrorManager.error",
    "snippet": "final JSError error;",
    "begin_line": 183,
    "end_line": 183,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.BasicErrorManager",
    "src_path": "com/google/javascript/jscomp/BasicErrorManager.java",
    "signature": "com.google.javascript.jscomp.BasicErrorManager.level",
    "snippet": "final CheckLevel level;",
    "begin_line": 184,
    "end_line": 184,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.DEPRECATED_NAME",
    "snippet": "static final DiagnosticType DEPRECATED_NAME \u003d DiagnosticType.disabled(\n      \"JSC_DEPRECATED_VAR\",\n      \"Variable {0} has been deprecated.\");",
    "begin_line": 48,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.DEPRECATED_NAME_REASON",
    "snippet": "static final DiagnosticType DEPRECATED_NAME_REASON \u003d DiagnosticType.disabled(\n      \"JSC_DEPRECATED_VAR_REASON\",\n      \"Variable {0} has been deprecated: {1}\");",
    "begin_line": 52,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.DEPRECATED_PROP",
    "snippet": "static final DiagnosticType DEPRECATED_PROP \u003d DiagnosticType.disabled(\n      \"JSC_DEPRECATED_PROP\",\n      \"Property {0} of type {1} has been deprecated.\");",
    "begin_line": 56,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.DEPRECATED_PROP_REASON",
    "snippet": "static final DiagnosticType DEPRECATED_PROP_REASON \u003d DiagnosticType.disabled(\n      \"JSC_DEPRECATED_PROP_REASON\",\n      \"Property {0} of type {1} has been deprecated: {2}\");",
    "begin_line": 60,
    "end_line": 62,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.DEPRECATED_CLASS",
    "snippet": "static final DiagnosticType DEPRECATED_CLASS \u003d DiagnosticType.disabled(\n      \"JSC_DEPRECATED_CLASS\",\n      \"Class {0} has been deprecated.\");",
    "begin_line": 64,
    "end_line": 66,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.DEPRECATED_CLASS_REASON",
    "snippet": "static final DiagnosticType DEPRECATED_CLASS_REASON \u003d DiagnosticType.disabled(\n      \"JSC_DEPRECATED_CLASS_REASON\",\n      \"Class {0} has been deprecated: {1}\");",
    "begin_line": 68,
    "end_line": 70,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS",
    "snippet": "static final DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS \u003d\n      DiagnosticType.disabled(\n          \"JSC_BAD_PRIVATE_GLOBAL_ACCESS\",\n          \"Access to private variable {0} not allowed outside file {1}.\");",
    "begin_line": 72,
    "end_line": 75,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.BAD_PRIVATE_PROPERTY_ACCESS",
    "snippet": "static final DiagnosticType BAD_PRIVATE_PROPERTY_ACCESS \u003d\n      DiagnosticType.disabled(\n          \"JSC_BAD_PRIVATE_PROPERTY_ACCESS\",\n          \"Access to private property {0} of {1} not allowed here.\");",
    "begin_line": 77,
    "end_line": 80,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.BAD_PROTECTED_PROPERTY_ACCESS",
    "snippet": "static final DiagnosticType BAD_PROTECTED_PROPERTY_ACCESS \u003d\n      DiagnosticType.disabled(\n          \"JSC_BAD_PROTECTED_PROPERTY_ACCESS\",\n          \"Access to protected property {0} of {1} not allowed here.\");",
    "begin_line": 82,
    "end_line": 85,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.PRIVATE_OVERRIDE",
    "snippet": "static final DiagnosticType PRIVATE_OVERRIDE \u003d\n      DiagnosticType.disabled(\n          \"JSC_PRIVATE_OVERRIDE\",\n          \"Overriding private property of {0}.\");",
    "begin_line": 87,
    "end_line": 90,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.VISIBILITY_MISMATCH",
    "snippet": "static final DiagnosticType VISIBILITY_MISMATCH \u003d\n      DiagnosticType.disabled(\n          \"JSC_VISIBILITY_MISMATCH\",\n          \"Overriding {0} property of {1} with {2} property.\");",
    "begin_line": 92,
    "end_line": 95,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.CONST_PROPERTY_REASSIGNED_VALUE",
    "snippet": "static final DiagnosticType CONST_PROPERTY_REASSIGNED_VALUE \u003d\n      DiagnosticType.warning(\n        \"JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE\",\n        \"constant property {0} assigned a value more than once\");",
    "begin_line": 97,
    "end_line": 100,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.CONST_PROPERTY_DELETED",
    "snippet": "static final DiagnosticType CONST_PROPERTY_DELETED \u003d\n      DiagnosticType.warning(\n        \"JSC_CONSTANT_PROPERTY_DELETED\",\n        \"constant property {0} cannot be deleted\");",
    "begin_line": 102,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 107,
    "end_line": 107,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.validator",
    "snippet": "private final TypeValidator validator;",
    "begin_line": 108,
    "end_line": 108,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.deprecatedDepth",
    "snippet": "private int deprecatedDepth \u003d 0;",
    "begin_line": 111,
    "end_line": 111,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.methodDepth",
    "snippet": "private int methodDepth \u003d 0;",
    "begin_line": 112,
    "end_line": 112,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.currentClass",
    "snippet": "private JSType currentClass \u003d null;",
    "begin_line": 113,
    "end_line": 113,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckAccessControls",
    "src_path": "com/google/javascript/jscomp/CheckAccessControls.java",
    "signature": "com.google.javascript.jscomp.CheckAccessControls.initializedConstantProperties",
    "snippet": "private final Multimap\u003cString, String\u003e initializedConstantProperties;",
    "begin_line": 115,
    "end_line": 115,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckDebuggerStatement",
    "src_path": "com/google/javascript/jscomp/CheckDebuggerStatement.java",
    "signature": "com.google.javascript.jscomp.CheckDebuggerStatement.DEBUGGER_STATEMENT_PRESENT",
    "snippet": "static final DiagnosticType DEBUGGER_STATEMENT_PRESENT \u003d\n    DiagnosticType.disabled(\"JSC_DEBUGGER_STATEMENT_PRESENT\",\n        \"Using the debugger statement can halt your application if the user \" +\n        \"has a JavaScript debugger running.\");",
    "begin_line": 33,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckDebuggerStatement",
    "src_path": "com/google/javascript/jscomp/CheckDebuggerStatement.java",
    "signature": "com.google.javascript.jscomp.CheckDebuggerStatement.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 38,
    "end_line": 38,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckGlobalNames",
    "src_path": "com/google/javascript/jscomp/CheckGlobalNames.java",
    "signature": "com.google.javascript.jscomp.CheckGlobalNames.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 36,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckGlobalNames",
    "src_path": "com/google/javascript/jscomp/CheckGlobalNames.java",
    "signature": "com.google.javascript.jscomp.CheckGlobalNames.convention",
    "snippet": "private final CodingConvention convention;",
    "begin_line": 37,
    "end_line": 37,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckGlobalNames",
    "src_path": "com/google/javascript/jscomp/CheckGlobalNames.java",
    "signature": "com.google.javascript.jscomp.CheckGlobalNames.level",
    "snippet": "private final CheckLevel level;",
    "begin_line": 38,
    "end_line": 38,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckGlobalNames",
    "src_path": "com/google/javascript/jscomp/CheckGlobalNames.java",
    "signature": "com.google.javascript.jscomp.CheckGlobalNames.namespace",
    "snippet": "private GlobalNamespace namespace \u003d null;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckGlobalNames",
    "src_path": "com/google/javascript/jscomp/CheckGlobalNames.java",
    "signature": "com.google.javascript.jscomp.CheckGlobalNames.objectPrototypeProps",
    "snippet": "private final Set\u003cString\u003e objectPrototypeProps \u003d Sets.newHashSet();",
    "begin_line": 41,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckGlobalNames",
    "src_path": "com/google/javascript/jscomp/CheckGlobalNames.java",
    "signature": "com.google.javascript.jscomp.CheckGlobalNames.functionPrototypeProps",
    "snippet": "private final Set\u003cString\u003e functionPrototypeProps \u003d Sets.newHashSet();",
    "begin_line": 42,
    "end_line": 42,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckGlobalNames",
    "src_path": "com/google/javascript/jscomp/CheckGlobalNames.java",
    "signature": "com.google.javascript.jscomp.CheckGlobalNames.UNDEFINED_NAME_WARNING",
    "snippet": "static final DiagnosticType UNDEFINED_NAME_WARNING \u003d DiagnosticType.warning(\n      \"JSC_UNDEFINED_NAME\",\n      \"{0} is never defined\");",
    "begin_line": 45,
    "end_line": 47,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckGlobalNames",
    "src_path": "com/google/javascript/jscomp/CheckGlobalNames.java",
    "signature": "com.google.javascript.jscomp.CheckGlobalNames.NAME_DEFINED_LATE_WARNING",
    "snippet": "static final DiagnosticType NAME_DEFINED_LATE_WARNING \u003d\n      DiagnosticType.warning(\n          \"JSC_NAME_DEFINED_LATE\",\n          \"{0} defined before its owner. {1} is defined at {2}:{3}\");",
    "begin_line": 49,
    "end_line": 52,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckGlobalNames",
    "src_path": "com/google/javascript/jscomp/CheckGlobalNames.java",
    "signature": "com.google.javascript.jscomp.CheckGlobalNames.STRICT_MODULE_DEP_QNAME",
    "snippet": "static final DiagnosticType STRICT_MODULE_DEP_QNAME \u003d\n      DiagnosticType.disabled(\n          \"JSC_STRICT_MODULE_DEP_QNAME\",\n          \"module {0} cannot reference {2}, defined in \" +\n          \"module {1}\");",
    "begin_line": 54,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckGlobalThis",
    "src_path": "com/google/javascript/jscomp/CheckGlobalThis.java",
    "signature": "com.google.javascript.jscomp.CheckGlobalThis.GLOBAL_THIS",
    "snippet": "static final DiagnosticType GLOBAL_THIS \u003d DiagnosticType.warning(\n      \"JSC_USED_GLOBAL_THIS\",\n      \"dangerous use of the global \u0027this\u0027 object\");",
    "begin_line": 58,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckGlobalThis",
    "src_path": "com/google/javascript/jscomp/CheckGlobalThis.java",
    "signature": "com.google.javascript.jscomp.CheckGlobalThis.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 62,
    "end_line": 62,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckGlobalThis",
    "src_path": "com/google/javascript/jscomp/CheckGlobalThis.java",
    "signature": "com.google.javascript.jscomp.CheckGlobalThis.assignLhsChild",
    "snippet": "private Node assignLhsChild \u003d null;",
    "begin_line": 69,
    "end_line": 69,
    "comment": "/** \n * If  {@code assignLhsChild !\u003d null}, then the node being traversed is a descendant of the first child of an ASSIGN node. assignLhsChild\u0027s parent is this ASSIGN node.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckProvides",
    "src_path": "com/google/javascript/jscomp/CheckProvides.java",
    "signature": "com.google.javascript.jscomp.CheckProvides.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 33,
    "end_line": 33,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckProvides",
    "src_path": "com/google/javascript/jscomp/CheckProvides.java",
    "signature": "com.google.javascript.jscomp.CheckProvides.checkLevel",
    "snippet": "private final CheckLevel checkLevel;",
    "begin_line": 34,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckProvides",
    "src_path": "com/google/javascript/jscomp/CheckProvides.java",
    "signature": "com.google.javascript.jscomp.CheckProvides.codingConvention",
    "snippet": "private final CodingConvention codingConvention;",
    "begin_line": 35,
    "end_line": 35,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckProvides",
    "src_path": "com/google/javascript/jscomp/CheckProvides.java",
    "signature": "com.google.javascript.jscomp.CheckProvides.MISSING_PROVIDE_WARNING",
    "snippet": "static final DiagnosticType MISSING_PROVIDE_WARNING \u003d DiagnosticType.disabled(\n      \"JSC_MISSING_PROVIDE\",\n      \"missing goog.provide(\u0027\u0027{0}\u0027\u0027)\");",
    "begin_line": 37,
    "end_line": 39,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckProvides",
    "src_path": "com/google/javascript/jscomp/CheckProvides.java",
    "signature": "com.google.javascript.jscomp.CheckProvides.provides",
    "snippet": "private final Map\u003cString, Node\u003e provides \u003d Maps.newHashMap();",
    "begin_line": 60,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckProvides",
    "src_path": "com/google/javascript/jscomp/CheckProvides.java",
    "signature": "com.google.javascript.jscomp.CheckProvides.ctors",
    "snippet": "private final Map\u003cString, Node\u003e ctors \u003d Maps.newHashMap();",
    "begin_line": 61,
    "end_line": 61,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckProvides",
    "src_path": "com/google/javascript/jscomp/CheckProvides.java",
    "signature": "com.google.javascript.jscomp.CheckProvides.convention",
    "snippet": "private final CodingConvention convention;",
    "begin_line": 62,
    "end_line": 62,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckRegExp",
    "src_path": "com/google/javascript/jscomp/CheckRegExp.java",
    "signature": "com.google.javascript.jscomp.CheckRegExp.REGEXP_REFERENCE",
    "snippet": "static final DiagnosticType REGEXP_REFERENCE \u003d\n    DiagnosticType.warning(\"JSC_REGEXP_REFERENCE\",\n        \"References to the global RegExp object prevents \" +\n        \"optimization of regular expressions.\");",
    "begin_line": 32,
    "end_line": 35,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckRegExp",
    "src_path": "com/google/javascript/jscomp/CheckRegExp.java",
    "signature": "com.google.javascript.jscomp.CheckRegExp.MALFORMED_REGEXP",
    "snippet": "static final DiagnosticType MALFORMED_REGEXP \u003d DiagnosticType.warning(\n        \"JSC_MALFORMED_REGEXP\",\n        \"Malformed Regular Expression: {0}\");",
    "begin_line": 36,
    "end_line": 38,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckRegExp",
    "src_path": "com/google/javascript/jscomp/CheckRegExp.java",
    "signature": "com.google.javascript.jscomp.CheckRegExp.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckRegExp",
    "src_path": "com/google/javascript/jscomp/CheckRegExp.java",
    "signature": "com.google.javascript.jscomp.CheckRegExp.globalRegExpPropertiesUsed",
    "snippet": "private boolean globalRegExpPropertiesUsed \u003d false;",
    "begin_line": 41,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckSideEffects",
    "src_path": "com/google/javascript/jscomp/CheckSideEffects.java",
    "signature": "com.google.javascript.jscomp.CheckSideEffects.USELESS_CODE_ERROR",
    "snippet": "static final DiagnosticType USELESS_CODE_ERROR \u003d DiagnosticType.warning(\n      \"JSC_USELESS_CODE\",\n      \"Suspicious code. {0}\");",
    "begin_line": 43,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckSideEffects",
    "src_path": "com/google/javascript/jscomp/CheckSideEffects.java",
    "signature": "com.google.javascript.jscomp.CheckSideEffects.PROTECTOR_FN",
    "snippet": "static final String PROTECTOR_FN \u003d \"JSCOMPILER_PRESERVE\";",
    "begin_line": 47,
    "end_line": 47,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckSideEffects",
    "src_path": "com/google/javascript/jscomp/CheckSideEffects.java",
    "signature": "com.google.javascript.jscomp.CheckSideEffects.level",
    "snippet": "private final CheckLevel level;",
    "begin_line": 49,
    "end_line": 49,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckSideEffects",
    "src_path": "com/google/javascript/jscomp/CheckSideEffects.java",
    "signature": "com.google.javascript.jscomp.CheckSideEffects.problemNodes",
    "snippet": "private final List\u003cNode\u003e problemNodes \u003d Lists.newArrayList();",
    "begin_line": 51,
    "end_line": 51,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckSideEffects",
    "src_path": "com/google/javascript/jscomp/CheckSideEffects.java",
    "signature": "com.google.javascript.jscomp.CheckSideEffects.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 53,
    "end_line": 53,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckSideEffects",
    "src_path": "com/google/javascript/jscomp/CheckSideEffects.java",
    "signature": "com.google.javascript.jscomp.CheckSideEffects.protectSideEffectFreeCode",
    "snippet": "private final boolean protectSideEffectFreeCode;",
    "begin_line": 55,
    "end_line": 55,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckSideEffects",
    "src_path": "com/google/javascript/jscomp/CheckSideEffects.java",
    "signature": "com.google.javascript.jscomp.CheckSideEffects.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 171,
    "end_line": 171,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckSuspiciousCode",
    "src_path": "com/google/javascript/jscomp/CheckSuspiciousCode.java",
    "signature": "com.google.javascript.jscomp.CheckSuspiciousCode.SUSPICIOUS_SEMICOLON",
    "snippet": "static final DiagnosticType SUSPICIOUS_SEMICOLON \u003d DiagnosticType.warning(\n      \"JSC_SUSPICIOUS_SEMICOLON\",\n      \"If this if/for/while really shouldn\u0027t have a body, use {}\");",
    "begin_line": 39,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckSuspiciousCode",
    "src_path": "com/google/javascript/jscomp/CheckSuspiciousCode.java",
    "signature": "com.google.javascript.jscomp.CheckSuspiciousCode.SUSPICIOUS_COMPARISON_WITH_NAN",
    "snippet": "static final DiagnosticType SUSPICIOUS_COMPARISON_WITH_NAN \u003d\n      DiagnosticType.warning(\n          \"JSC_SUSPICIOUS_NAN\",\n          \"Comparison again NaN is always false. Did you mean isNaN()?\");",
    "begin_line": 43,
    "end_line": 46,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckUnreachableCode",
    "src_path": "com/google/javascript/jscomp/CheckUnreachableCode.java",
    "signature": "com.google.javascript.jscomp.CheckUnreachableCode.UNREACHABLE_CODE",
    "snippet": "static final DiagnosticType UNREACHABLE_CODE \u003d DiagnosticType.error(\n      \"JSC_UNREACHABLE_CODE\", \"unreachable code\");",
    "begin_line": 35,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckUnreachableCode",
    "src_path": "com/google/javascript/jscomp/CheckUnreachableCode.java",
    "signature": "com.google.javascript.jscomp.CheckUnreachableCode.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 38,
    "end_line": 38,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CheckUnreachableCode",
    "src_path": "com/google/javascript/jscomp/CheckUnreachableCode.java",
    "signature": "com.google.javascript.jscomp.CheckUnreachableCode.level",
    "snippet": "private final CheckLevel level;",
    "begin_line": 39,
    "end_line": 39,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ClosureCodingConvention",
    "src_path": "com/google/javascript/jscomp/ClosureCodingConvention.java",
    "signature": "com.google.javascript.jscomp.ClosureCodingConvention.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 41,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ClosureCodingConvention",
    "src_path": "com/google/javascript/jscomp/ClosureCodingConvention.java",
    "signature": "com.google.javascript.jscomp.ClosureCodingConvention.OBJECTLIT_EXPECTED",
    "snippet": "static final DiagnosticType OBJECTLIT_EXPECTED \u003d DiagnosticType.warning(\n      \"JSC_REFLECT_OBJECTLIT_EXPECTED\",\n      \"Object literal expected as second argument\");",
    "begin_line": 43,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ClosureCodingConvention",
    "src_path": "com/google/javascript/jscomp/ClosureCodingConvention.java",
    "signature": "com.google.javascript.jscomp.ClosureCodingConvention.indirectlyDeclaredProperties",
    "snippet": "private final Set\u003cString\u003e indirectlyDeclaredProperties;",
    "begin_line": 47,
    "end_line": 47,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ClosureCodingConvention",
    "src_path": "com/google/javascript/jscomp/ClosureCodingConvention.java",
    "signature": "com.google.javascript.jscomp.ClosureCodingConvention.propertyTestFunctions",
    "snippet": "private final Set\u003cString\u003e propertyTestFunctions \u003d ImmutableSet.of(\n      \"goog.isDef\", \"goog.isNull\", \"goog.isDefAndNotNull\",\n      \"goog.isString\", \"goog.isNumber\", \"goog.isBoolean\",\n      \"goog.isFunction\", \"goog.isArray\", \"goog.isObject\");",
    "begin_line": 311,
    "end_line": 314,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CodeChangeHandler",
    "src_path": "com/google/javascript/jscomp/CodeChangeHandler.java",
    "signature": "com.google.javascript.jscomp.CodeChangeHandler.hasChanged",
    "snippet": "private boolean hasChanged \u003d false;",
    "begin_line": 36,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.target",
    "snippet": "final Node target;",
    "begin_line": 259,
    "end_line": 259,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.thisValue",
    "snippet": "final Node thisValue;",
    "begin_line": 261,
    "end_line": 261,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.parameters",
    "snippet": "final Node parameters;",
    "begin_line": 263,
    "end_line": 263,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.type",
    "snippet": "final SubclassType type;",
    "begin_line": 321,
    "end_line": 321,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.subclassName",
    "snippet": "final String subclassName;",
    "begin_line": 322,
    "end_line": 322,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.superclassName",
    "snippet": "final String superclassName;",
    "begin_line": 323,
    "end_line": 323,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.delegateBase",
    "snippet": "final String delegateBase;",
    "begin_line": 341,
    "end_line": 341,
    "comment": "/** \n * The subclass in the base code. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.delegator",
    "snippet": "final String delegator;",
    "begin_line": 344,
    "end_line": 344,
    "comment": "/** \n * The class in the base code. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.typeName",
    "snippet": "final String typeName;",
    "begin_line": 358,
    "end_line": 358,
    "comment": "/** \n * Type to cast to. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.objectNode",
    "snippet": "final Node objectNode;",
    "begin_line": 361,
    "end_line": 361,
    "comment": "/** \n * Object to cast. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.diagnosticType",
    "snippet": "final DiagnosticType diagnosticType;",
    "begin_line": 364,
    "end_line": 364,
    "comment": "/** \n * Error message \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.functionName",
    "snippet": "protected final String functionName;",
    "begin_line": 380,
    "end_line": 380,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConvention",
    "src_path": "com/google/javascript/jscomp/CodingConvention.java",
    "signature": "com.google.javascript.jscomp.CodingConvention.assertedType",
    "snippet": "protected final JSTypeNative assertedType;",
    "begin_line": 381,
    "end_line": 381,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConventions",
    "src_path": "com/google/javascript/jscomp/CodingConventions.java",
    "signature": "com.google.javascript.jscomp.CodingConventions.nextConvention",
    "snippet": "protected final CodingConvention nextConvention;",
    "begin_line": 57,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CodingConventions",
    "src_path": "com/google/javascript/jscomp/CodingConventions.java",
    "signature": "com.google.javascript.jscomp.CodingConventions.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 251,
    "end_line": 251,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.SINGLETON_MODULE_NAME",
    "snippet": "static final String SINGLETON_MODULE_NAME \u003d \"[singleton]\";",
    "begin_line": 84,
    "end_line": 84,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.MODULE_DEPENDENCY_ERROR",
    "snippet": "static final DiagnosticType MODULE_DEPENDENCY_ERROR \u003d\n      DiagnosticType.error(\"JSC_MODULE_DEPENDENCY_ERROR\",\n          \"Bad dependency: {0} -\u003e {1}. \"\n              + \"Modules must be listed in dependency order.\");",
    "begin_line": 86,
    "end_line": 89,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.MISSING_ENTRY_ERROR",
    "snippet": "static final DiagnosticType MISSING_ENTRY_ERROR \u003d DiagnosticType.error(\n      \"JSC_MISSING_ENTRY_ERROR\",\n      \"required entry point \\\"{0}\\\" never provided\");",
    "begin_line": 91,
    "end_line": 93,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.CONFIG_RESOURCE",
    "snippet": "private static final String CONFIG_RESOURCE \u003d\n      \"com.google.javascript.jscomp.parsing.ParserConfig\";",
    "begin_line": 95,
    "end_line": 96,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.options",
    "snippet": " CompilerOptions options \u003d null;",
    "begin_line": 98,
    "end_line": 98,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.passes",
    "snippet": "private PassConfig passes \u003d null;",
    "begin_line": 100,
    "end_line": 100,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.externs",
    "snippet": "private List\u003cCompilerInput\u003e externs;",
    "begin_line": 103,
    "end_line": 103,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.modules",
    "snippet": "private List\u003cJSModule\u003e modules;",
    "begin_line": 106,
    "end_line": 106,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.moduleGraph",
    "snippet": "private JSModuleGraph moduleGraph;",
    "begin_line": 110,
    "end_line": 110,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.inputs",
    "snippet": "private List\u003cCompilerInput\u003e inputs;",
    "begin_line": 113,
    "end_line": 113,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.errorManager",
    "snippet": "private ErrorManager errorManager;",
    "begin_line": 116,
    "end_line": 116,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.warningsGuard",
    "snippet": "private WarningsGuard warningsGuard;",
    "begin_line": 119,
    "end_line": 119,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.injectedLibraries",
    "snippet": "private final Map\u003cString, Node\u003e injectedLibraries \u003d Maps.newLinkedHashMap();",
    "begin_line": 123,
    "end_line": 123,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.externsRoot",
    "snippet": " Node externsRoot;",
    "begin_line": 126,
    "end_line": 126,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.jsRoot",
    "snippet": " Node jsRoot;",
    "begin_line": 127,
    "end_line": 127,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.externAndJsRoot",
    "snippet": " Node externAndJsRoot;",
    "begin_line": 128,
    "end_line": 128,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.inputsById",
    "snippet": "private Map\u003cInputId, CompilerInput\u003e inputsById;",
    "begin_line": 130,
    "end_line": 130,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.sourceMap",
    "snippet": "private SourceMap sourceMap;",
    "begin_line": 133,
    "end_line": 133,
    "comment": "/** \n * The source code map \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.externExports",
    "snippet": "private String externExports \u003d null;",
    "begin_line": 136,
    "end_line": 136,
    "comment": "/** \n * The externs created from the exports.  \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.uniqueNameId",
    "snippet": "private int uniqueNameId \u003d 0;",
    "begin_line": 142,
    "end_line": 142,
    "comment": "/** \n * Ids for function inlining so that each declared name remains unique.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.hasRegExpGlobalReferences",
    "snippet": "private boolean hasRegExpGlobalReferences \u003d true;",
    "begin_line": 148,
    "end_line": 148,
    "comment": "/** \n * Whether to assume there are references to the RegExp Global object properties.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.functionInformationMap",
    "snippet": "private FunctionInformationMap functionInformationMap;",
    "begin_line": 151,
    "end_line": 151,
    "comment": "/** \n * The function information map \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.debugLog",
    "snippet": "private final StringBuilder debugLog \u003d new StringBuilder();",
    "begin_line": 154,
    "end_line": 154,
    "comment": "/** \n * Debugging information \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.defaultCodingConvention",
    "snippet": " CodingConvention defaultCodingConvention \u003d new ClosureCodingConvention();",
    "begin_line": 157,
    "end_line": 157,
    "comment": "/** \n * Detects Google-specific coding conventions. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.typeRegistry",
    "snippet": "private JSTypeRegistry typeRegistry;",
    "begin_line": 159,
    "end_line": 159,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.parserConfig",
    "snippet": "private Config parserConfig \u003d null;",
    "begin_line": 160,
    "end_line": 160,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.abstractInterpreter",
    "snippet": "private ReverseAbstractInterpreter abstractInterpreter;",
    "begin_line": 162,
    "end_line": 162,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.typeValidator",
    "snippet": "private TypeValidator typeValidator;",
    "begin_line": 163,
    "end_line": 163,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.tracker",
    "snippet": "public PerformanceTracker tracker;",
    "begin_line": 165,
    "end_line": 165,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.oldErrorReporter",
    "snippet": "private final com.google.javascript.rhino.ErrorReporter oldErrorReporter \u003d\n      RhinoErrorReporter.forOldRhino(this);",
    "begin_line": 168,
    "end_line": 169,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.defaultErrorReporter",
    "snippet": "private final ErrorReporter defaultErrorReporter \u003d\n      RhinoErrorReporter.forNewRhino(this);",
    "begin_line": 172,
    "end_line": 173,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.OPTIMIZE_LOOP_ERROR",
    "snippet": "public static final DiagnosticType OPTIMIZE_LOOP_ERROR \u003d DiagnosticType.error(\n      \"JSC_OPTIMIZE_LOOP_ERROR\",\n      \"Exceeded max number of optimization iterations: {0}\");",
    "begin_line": 176,
    "end_line": 178,
    "comment": "/** \n * Error strings used for reporting JSErrors \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.MOTION_ITERATIONS_ERROR",
    "snippet": "public static final DiagnosticType MOTION_ITERATIONS_ERROR \u003d\n      DiagnosticType.error(\"JSC_OPTIMIZE_LOOP_ERROR\",\n          \"Exceeded max number of code motion iterations: {0}\");",
    "begin_line": 179,
    "end_line": 181,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.COMPILER_STACK_SIZE",
    "snippet": "private static final long COMPILER_STACK_SIZE \u003d (1 \u003c\u003c 21);",
    "begin_line": 185,
    "end_line": 185,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.compilerExecutor",
    "snippet": "private static final ExecutorService compilerExecutor \u003d\n      Executors.newCachedThreadPool(new ThreadFactory() {\n    @Override public Thread newThread(Runnable r) {\n      return new Thread(null, r, \"jscompiler\", COMPILER_STACK_SIZE);\n    }\n  });",
    "begin_line": 195,
    "end_line": 200,
    "comment": "/** \n * Under JRE 1.6, the JS Compiler overflows the stack when running on some large or complex JS code. When threads are available, we run all compile jobs on a separate thread with a larger stack. That way, we don\u0027t have to increase the stack size for *every* thread (which is what -Xss does).\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.compilerThread",
    "snippet": "private Thread compilerThread \u003d null;",
    "begin_line": 205,
    "end_line": 205,
    "comment": "/** \n * Use a dedicated compiler thread per Compiler instance.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.useThreads",
    "snippet": "private boolean useThreads \u003d true;",
    "begin_line": 208,
    "end_line": 208,
    "comment": "/** \n * Whether to use threads. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.logger",
    "snippet": "private static final Logger logger \u003d\n      Logger.getLogger(\"com.google.javascript.jscomp\");",
    "begin_line": 216,
    "end_line": 217,
    "comment": "/** \n * Logger for the whole com.google.javascript.jscomp domain - setting configuration for this logger affects all loggers in other classes within the compiler.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.outStream",
    "snippet": "private final PrintStream outStream;",
    "begin_line": 219,
    "end_line": 219,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.globalRefMap",
    "snippet": "private GlobalVarReferenceMap globalRefMap \u003d null;",
    "begin_line": 221,
    "end_line": 221,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.progress",
    "snippet": "private volatile double progress \u003d 0.0;",
    "begin_line": 223,
    "end_line": 223,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.lastPassName",
    "snippet": "private String lastPassName;",
    "begin_line": 224,
    "end_line": 224,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.EMPTY_MODULE_LIST_ERROR",
    "snippet": "private static final DiagnosticType EMPTY_MODULE_LIST_ERROR \u003d\n      DiagnosticType.error(\"JSC_EMPTY_MODULE_LIST_ERROR\",\n          \"At least one module must be provided\");",
    "begin_line": 433,
    "end_line": 435,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.EMPTY_ROOT_MODULE_ERROR",
    "snippet": "private static final DiagnosticType EMPTY_ROOT_MODULE_ERROR \u003d\n      DiagnosticType.error(\"JSC_EMPTY_ROOT_MODULE_ERROR\",\n          \"Root module \u0027{0}\u0027 must contain at least one source code input\");",
    "begin_line": 437,
    "end_line": 439,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.DUPLICATE_INPUT",
    "snippet": "static final DiagnosticType DUPLICATE_INPUT \u003d\n      DiagnosticType.error(\"JSC_DUPLICATE_INPUT\", \"Duplicate input: {0}\");",
    "begin_line": 508,
    "end_line": 509,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.DUPLICATE_EXTERN_INPUT",
    "snippet": "static final DiagnosticType DUPLICATE_EXTERN_INPUT \u003d\n      DiagnosticType.error(\"JSC_DUPLICATE_EXTERN_INPUT\",\n          \"Duplicate extern input: {0}\");",
    "begin_line": 510,
    "end_line": 512,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.sanityCheck",
    "snippet": "private final PassFactory sanityCheck \u003d\n      new PassFactory(\"sanityCheck\", false) {\n    @Override\n    protected CompilerPass create(AbstractCompiler compiler) {\n      return new SanityCheck(compiler);\n    }\n  };",
    "begin_line": 855,
    "end_line": 861,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.currentTracer",
    "snippet": "private Tracer currentTracer \u003d null;",
    "begin_line": 917,
    "end_line": 917,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.currentPassName",
    "snippet": "private String currentPassName \u003d null;",
    "begin_line": 918,
    "end_line": 918,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.syntheticCodeId",
    "snippet": "private int syntheticCodeId \u003d 0;",
    "begin_line": 1556,
    "end_line": 1556,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.sb",
    "snippet": "private final StringBuilder sb \u003d new StringBuilder();",
    "begin_line": 1816,
    "end_line": 1816,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.lineCount",
    "snippet": "private int lineCount \u003d 0;",
    "begin_line": 1817,
    "end_line": 1817,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.colCount",
    "snippet": "private int colCount \u003d 0;",
    "begin_line": 1818,
    "end_line": 1818,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.recentChange",
    "snippet": "protected final CodeChangeHandler.RecentChange recentChange \u003d\n      new CodeChangeHandler.RecentChange();",
    "begin_line": 1957,
    "end_line": 1958,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.codeChangeHandlers",
    "snippet": "private final List\u003cCodeChangeHandler\u003e codeChangeHandlers \u003d\n      Lists.\u003cCodeChangeHandler\u003enewArrayList();",
    "begin_line": 1959,
    "end_line": 1960,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.SYNTHETIC_EXTERNS",
    "snippet": "static final String SYNTHETIC_EXTERNS \u003d \"{SyntheticVarsDeclar}\";",
    "begin_line": 1963,
    "end_line": 1963,
    "comment": "/** \n * Name of the synthetic input that holds synthesized externs. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.synthesizedExternsInput",
    "snippet": "private CompilerInput synthesizedExternsInput \u003d null;",
    "begin_line": 1965,
    "end_line": 1965,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 2281,
    "end_line": 2281,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.externsRoot",
    "snippet": " Node externsRoot;",
    "begin_line": 2283,
    "end_line": 2283,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.jsRoot",
    "snippet": "private Node jsRoot;",
    "begin_line": 2284,
    "end_line": 2284,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.externs",
    "snippet": "private List\u003cCompilerInput\u003e externs;",
    "begin_line": 2285,
    "end_line": 2285,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.inputs",
    "snippet": "private List\u003cCompilerInput\u003e inputs;",
    "begin_line": 2286,
    "end_line": 2286,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.modules",
    "snippet": "private List\u003cJSModule\u003e modules;",
    "begin_line": 2287,
    "end_line": 2287,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.passConfigState",
    "snippet": "private PassConfig.State passConfigState;",
    "begin_line": 2288,
    "end_line": 2288,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.typeRegistry",
    "snippet": "private JSTypeRegistry typeRegistry;",
    "begin_line": 2289,
    "end_line": 2289,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.lifeCycleStage",
    "snippet": "private AbstractCompiler.LifeCycleStage lifeCycleStage;",
    "begin_line": 2290,
    "end_line": 2290,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Compiler",
    "src_path": "com/google/javascript/jscomp/Compiler.java",
    "signature": "com.google.javascript.jscomp.Compiler.injectedLibraries",
    "snippet": "private Map\u003cString, Node\u003e injectedLibraries;",
    "begin_line": 2291,
    "end_line": 2291,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerInput",
    "src_path": "com/google/javascript/jscomp/CompilerInput.java",
    "signature": "com.google.javascript.jscomp.CompilerInput.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 42,
    "end_line": 42,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerInput",
    "src_path": "com/google/javascript/jscomp/CompilerInput.java",
    "signature": "com.google.javascript.jscomp.CompilerInput.module",
    "snippet": "private JSModule module;",
    "begin_line": 45,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerInput",
    "src_path": "com/google/javascript/jscomp/CompilerInput.java",
    "signature": "com.google.javascript.jscomp.CompilerInput.id",
    "snippet": "final private InputId id;",
    "begin_line": 46,
    "end_line": 46,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerInput",
    "src_path": "com/google/javascript/jscomp/CompilerInput.java",
    "signature": "com.google.javascript.jscomp.CompilerInput.ast",
    "snippet": "private final SourceAst ast;",
    "begin_line": 49,
    "end_line": 49,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerInput",
    "src_path": "com/google/javascript/jscomp/CompilerInput.java",
    "signature": "com.google.javascript.jscomp.CompilerInput.provides",
    "snippet": "private final Set\u003cString\u003e provides \u003d Sets.newHashSet();",
    "begin_line": 52,
    "end_line": 52,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerInput",
    "src_path": "com/google/javascript/jscomp/CompilerInput.java",
    "signature": "com.google.javascript.jscomp.CompilerInput.requires",
    "snippet": "private final Set\u003cString\u003e requires \u003d Sets.newHashSet();",
    "begin_line": 53,
    "end_line": 53,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerInput",
    "src_path": "com/google/javascript/jscomp/CompilerInput.java",
    "signature": "com.google.javascript.jscomp.CompilerInput.generatedDependencyInfoFromSource",
    "snippet": "private boolean generatedDependencyInfoFromSource \u003d false;",
    "begin_line": 54,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerInput",
    "src_path": "com/google/javascript/jscomp/CompilerInput.java",
    "signature": "com.google.javascript.jscomp.CompilerInput.compiler",
    "snippet": "private transient AbstractCompiler compiler;",
    "begin_line": 58,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerInput",
    "src_path": "com/google/javascript/jscomp/CompilerInput.java",
    "signature": "com.google.javascript.jscomp.CompilerInput.provides",
    "snippet": "private final List\u003cString\u003e provides \u003d Lists.newArrayList();",
    "begin_line": 253,
    "end_line": 253,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerInput",
    "src_path": "com/google/javascript/jscomp/CompilerInput.java",
    "signature": "com.google.javascript.jscomp.CompilerInput.requires",
    "snippet": "private final List\u003cString\u003e requires \u003d Lists.newArrayList();",
    "begin_line": 254,
    "end_line": 254,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerInput",
    "src_path": "com/google/javascript/jscomp/CompilerInput.java",
    "signature": "com.google.javascript.jscomp.CompilerInput.codingConvention",
    "snippet": "private final CodingConvention codingConvention \u003d\n        new ClosureCodingConvention();",
    "begin_line": 255,
    "end_line": 256,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.manageClosureDependencies",
    "snippet": "@SuppressWarnings(\"unused\")\n  private boolean manageClosureDependencies \u003d false;",
    "begin_line": 44,
    "end_line": 44,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 7L;",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.languageIn",
    "snippet": "private LanguageMode languageIn;",
    "begin_line": 61,
    "end_line": 61,
    "comment": "/** \n * The JavaScript language version accepted.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.languageOut",
    "snippet": "private LanguageMode languageOut;",
    "begin_line": 67,
    "end_line": 67,
    "comment": "/** \n * The JavaScript language version that should be produced. Currently, this is always the same as  {@link #languageIn}.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.acceptConstKeyword",
    "snippet": " boolean acceptConstKeyword;",
    "begin_line": 72,
    "end_line": 72,
    "comment": "/** \n * Whether the compiler accepts the `const\u0027 keyword.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.assumeStrictThis",
    "snippet": "private boolean assumeStrictThis;",
    "begin_line": 79,
    "end_line": 79,
    "comment": "/** \n * Whether the compiler should assume that a function\u0027s \"this\" value never needs coercion (for example in non-strict \"null\" or \"undefined\" will be coerced to the global \"this\" and primitives to objects).\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.ideMode",
    "snippet": "public boolean ideMode;",
    "begin_line": 93,
    "end_line": 93,
    "comment": "/** \n * Configures the compiler for use as an IDE backend.  In this mode: \u003cul\u003e \u003cli\u003eNo optimization passes will run.\u003c/li\u003e \u003cli\u003eThe last time custom passes are invoked is {@link CustomPassExecutionTime#BEFORE_OPTIMIZATIONS}\u003c/li\u003e \u003cli\u003eThe compiler will always try to process all inputs fully, even if it encounters errors.\u003c/li\u003e \u003cli\u003eThe compiler may record more information than is strictly needed for codegen.\u003c/li\u003e \u003c/ul\u003e\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.saveDataStructures",
    "snippet": " boolean saveDataStructures \u003d false;",
    "begin_line": 95,
    "end_line": 95,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.inferTypes",
    "snippet": " boolean inferTypes;",
    "begin_line": 101,
    "end_line": 101,
    "comment": "/** \n * Even if checkTypes is disabled, clients might want to still infer types. This is mostly used when ideMode is enabled.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.skipAllPasses",
    "snippet": " boolean skipAllPasses;",
    "begin_line": 106,
    "end_line": 106,
    "comment": "/** \n * Configures the compiler to skip as many passes as possible.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.nameAnonymousFunctionsOnly",
    "snippet": " boolean nameAnonymousFunctionsOnly;",
    "begin_line": 111,
    "end_line": 111,
    "comment": "/** \n * If true, name anonymous functions only. All others passes will be skipped.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.devMode",
    "snippet": " DevMode devMode;",
    "begin_line": 117,
    "end_line": 117,
    "comment": "/** \n * Configures the compiler to run expensive sanity checks after every pass. Only intended for internal development.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.dependencyOptions",
    "snippet": " DependencyOptions dependencyOptions \u003d new DependencyOptions();",
    "begin_line": 123,
    "end_line": 123,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.messageBundle",
    "snippet": " MessageBundle messageBundle \u003d null;",
    "begin_line": 127,
    "end_line": 127,
    "comment": "/** \n * Returns localized replacement for MSG_* variables \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkSymbols",
    "snippet": "public boolean checkSymbols;",
    "begin_line": 134,
    "end_line": 134,
    "comment": "/** \n * Checks that all symbols are defined \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.aggressiveVarCheck",
    "snippet": "public CheckLevel aggressiveVarCheck;",
    "begin_line": 136,
    "end_line": 136,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkSuspiciousCode",
    "snippet": "public boolean checkSuspiciousCode;",
    "begin_line": 144,
    "end_line": 144,
    "comment": "/** \n * Checks for suspicious statements that have no effect \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkControlStructures",
    "snippet": "public boolean checkControlStructures;",
    "begin_line": 147,
    "end_line": 147,
    "comment": "/** \n * Checks for invalid control structures \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkTypes",
    "snippet": "public boolean checkTypes;",
    "begin_line": 150,
    "end_line": 150,
    "comment": "/** \n * Checks types on expressions \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.tightenTypes",
    "snippet": " boolean tightenTypes;",
    "begin_line": 152,
    "end_line": 152,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.reportMissingOverride",
    "snippet": "public CheckLevel reportMissingOverride;",
    "begin_line": 159,
    "end_line": 159,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.reportUnknownTypes",
    "snippet": " CheckLevel reportUnknownTypes;",
    "begin_line": 169,
    "end_line": 169,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkRequires",
    "snippet": "public CheckLevel checkRequires;",
    "begin_line": 177,
    "end_line": 177,
    "comment": "/** \n * Checks for missing goog.require() calls \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkProvides",
    "snippet": "public CheckLevel checkProvides;",
    "begin_line": 183,
    "end_line": 183,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkGlobalNamesLevel",
    "snippet": "public CheckLevel checkGlobalNamesLevel;",
    "begin_line": 190,
    "end_line": 190,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.brokenClosureRequiresLevel",
    "snippet": "public CheckLevel brokenClosureRequiresLevel;",
    "begin_line": 200,
    "end_line": 200,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkGlobalThisLevel",
    "snippet": "public CheckLevel checkGlobalThisLevel;",
    "begin_line": 207,
    "end_line": 207,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkMissingGetCssNameLevel",
    "snippet": "public CheckLevel checkMissingGetCssNameLevel;",
    "begin_line": 221,
    "end_line": 221,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkMissingGetCssNameBlacklist",
    "snippet": "public String checkMissingGetCssNameBlacklist;",
    "begin_line": 234,
    "end_line": 234,
    "comment": "/** \n * Regex of string literals that may only appear in goog.getCssName arguments.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkCaja",
    "snippet": " boolean checkCaja;",
    "begin_line": 237,
    "end_line": 237,
    "comment": "/** \n * Checks that the syntactic restrictions of Caja are met. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.extraAnnotationNames",
    "snippet": " Set\u003cString\u003e extraAnnotationNames;",
    "begin_line": 248,
    "end_line": 248,
    "comment": "/** \n * A set of extra annotation names which are accepted and silently ignored when encountered in a source file. Defaults to null which has the same effect as specifying an empty set.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.foldConstants",
    "snippet": "public boolean foldConstants;",
    "begin_line": 255,
    "end_line": 255,
    "comment": "/** \n * Folds constants (e.g. (2 + 3) to 5) \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.deadAssignmentElimination",
    "snippet": "public boolean deadAssignmentElimination;",
    "begin_line": 258,
    "end_line": 258,
    "comment": "/** \n * Remove assignments to values that can not be referenced \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.inlineConstantVars",
    "snippet": "public boolean inlineConstantVars;",
    "begin_line": 261,
    "end_line": 261,
    "comment": "/** \n * Inlines constants (symbols that are all CAPS) \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.inlineFunctions",
    "snippet": "public boolean inlineFunctions;",
    "begin_line": 264,
    "end_line": 264,
    "comment": "/** \n * Inlines global functions \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.inlineLocalFunctions",
    "snippet": "public boolean inlineLocalFunctions;",
    "begin_line": 267,
    "end_line": 267,
    "comment": "/** \n * Inlines functions defined in local scopes \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.inlineProperties",
    "snippet": " boolean inlineProperties;",
    "begin_line": 270,
    "end_line": 270,
    "comment": "/** \n * Inlines properties \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.crossModuleCodeMotion",
    "snippet": "public boolean crossModuleCodeMotion;",
    "begin_line": 273,
    "end_line": 273,
    "comment": "/** \n * Move code to a deeper module \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.coalesceVariableNames",
    "snippet": "public boolean coalesceVariableNames;",
    "begin_line": 276,
    "end_line": 276,
    "comment": "/** \n * Merge two variables together as one. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.crossModuleMethodMotion",
    "snippet": "public boolean crossModuleMethodMotion;",
    "begin_line": 279,
    "end_line": 279,
    "comment": "/** \n * Move methods to a deeper module \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.inlineGetters",
    "snippet": "public boolean inlineGetters;",
    "begin_line": 282,
    "end_line": 282,
    "comment": "/** \n * Inlines trivial getters \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.inlineVariables",
    "snippet": "public boolean inlineVariables;",
    "begin_line": 285,
    "end_line": 285,
    "comment": "/** \n * Inlines variables \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.inlineLocalVariables",
    "snippet": " boolean inlineLocalVariables;",
    "begin_line": 288,
    "end_line": 288,
    "comment": "/** \n * Inlines variables \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.flowSensitiveInlineVariables",
    "snippet": "public boolean flowSensitiveInlineVariables;",
    "begin_line": 292,
    "end_line": 292,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.smartNameRemoval",
    "snippet": "public boolean smartNameRemoval;",
    "begin_line": 295,
    "end_line": 295,
    "comment": "/** \n * Removes code associated with unused global names \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.removeDeadCode",
    "snippet": "public boolean removeDeadCode;",
    "begin_line": 298,
    "end_line": 298,
    "comment": "/** \n * Removes code that will never execute \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkUnreachableCode",
    "snippet": "public CheckLevel checkUnreachableCode;",
    "begin_line": 300,
    "end_line": 300,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.checkMissingReturn",
    "snippet": "public CheckLevel checkMissingReturn;",
    "begin_line": 307,
    "end_line": 307,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.extractPrototypeMemberDeclarations",
    "snippet": "public boolean extractPrototypeMemberDeclarations;",
    "begin_line": 315,
    "end_line": 315,
    "comment": "/** \n * Extracts common prototype member declarations \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.removeUnusedPrototypeProperties",
    "snippet": "public boolean removeUnusedPrototypeProperties;",
    "begin_line": 318,
    "end_line": 318,
    "comment": "/** \n * Removes unused member prototypes \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.removeUnusedPrototypePropertiesInExterns",
    "snippet": "public boolean removeUnusedPrototypePropertiesInExterns;",
    "begin_line": 321,
    "end_line": 321,
    "comment": "/** \n * Tells AnalyzePrototypeProperties it can remove externed props. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.removeUnusedClassProperties",
    "snippet": "public boolean removeUnusedClassProperties;",
    "begin_line": 324,
    "end_line": 324,
    "comment": "/** \n * Removes unused member properties \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.removeUnusedVars",
    "snippet": "public boolean removeUnusedVars;",
    "begin_line": 327,
    "end_line": 327,
    "comment": "/** \n * Removes unused variables \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.removeUnusedLocalVars",
    "snippet": "public boolean removeUnusedLocalVars;",
    "begin_line": 330,
    "end_line": 330,
    "comment": "/** \n * Removes unused variables in local scope. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.aliasExternals",
    "snippet": "public boolean aliasExternals;",
    "begin_line": 333,
    "end_line": 333,
    "comment": "/** \n * Adds variable aliases for externals to reduce code size \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.aliasableGlobals",
    "snippet": " String aliasableGlobals;",
    "begin_line": 335,
    "end_line": 335,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.unaliasableGlobals",
    "snippet": " String unaliasableGlobals;",
    "begin_line": 346,
    "end_line": 346,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.collapseVariableDeclarations",
    "snippet": "public boolean collapseVariableDeclarations;",
    "begin_line": 357,
    "end_line": 357,
    "comment": "/** \n * Collapses multiple variable declarations into one \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.groupVariableDeclarations",
    "snippet": " boolean groupVariableDeclarations;",
    "begin_line": 360,
    "end_line": 360,
    "comment": "/** \n * Group multiple variable declarations into one \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.collapseAnonymousFunctions",
    "snippet": "public boolean collapseAnonymousFunctions;",
    "begin_line": 366,
    "end_line": 366,
    "comment": "/** \n * Collapses anonymous function declarations into named function declarations\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.aliasableStrings",
    "snippet": "public Set\u003cString\u003e aliasableStrings;",
    "begin_line": 373,
    "end_line": 373,
    "comment": "/** \n * If set to a non-empty set, those strings literals will be aliased to a single global instance per string, to avoid creating more objects than necessary.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.aliasStringsBlacklist",
    "snippet": "public String aliasStringsBlacklist;",
    "begin_line": 380,
    "end_line": 380,
    "comment": "/** \n * A blacklist in the form of a regular expression to block strings that contains certain words from being aliased. If the value is the empty string, no words are blacklisted.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.aliasAllStrings",
    "snippet": "public boolean aliasAllStrings;",
    "begin_line": 387,
    "end_line": 387,
    "comment": "/** \n * Aliases all string literals to global instances, to avoid creating more objects than necessary (if true, overrides any set of strings passed in to aliasableStrings)\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.outputJsStringUsage",
    "snippet": " boolean outputJsStringUsage;",
    "begin_line": 390,
    "end_line": 390,
    "comment": "/** \n * Print string usage as part of the compilation log. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.convertToDottedProperties",
    "snippet": "public boolean convertToDottedProperties;",
    "begin_line": 393,
    "end_line": 393,
    "comment": "/** \n * Converts quoted property accesses to dot syntax (a[\u0027b\u0027] -\u003e a.b) \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.rewriteFunctionExpressions",
    "snippet": "public boolean rewriteFunctionExpressions;",
    "begin_line": 396,
    "end_line": 396,
    "comment": "/** \n * Reduces the size of common function expressions. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.optimizeParameters",
    "snippet": "public boolean optimizeParameters;",
    "begin_line": 401,
    "end_line": 401,
    "comment": "/** \n * Remove unused and constant parameters.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.optimizeReturns",
    "snippet": "public boolean optimizeReturns;",
    "begin_line": 406,
    "end_line": 406,
    "comment": "/** \n * Remove unused return values.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.optimizeCalls",
    "snippet": "public boolean optimizeCalls;",
    "begin_line": 411,
    "end_line": 411,
    "comment": "/** \n * Remove unused parameters from call sites.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.optimizeArgumentsArray",
    "snippet": "public boolean optimizeArgumentsArray;",
    "begin_line": 416,
    "end_line": 416,
    "comment": "/** \n * Provide formal names for elements of arguments array.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.chainCalls",
    "snippet": " boolean chainCalls;",
    "begin_line": 419,
    "end_line": 419,
    "comment": "/** \n * Chains calls to functions that return this. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.variableRenaming",
    "snippet": "public VariableRenamingPolicy variableRenaming;",
    "begin_line": 426,
    "end_line": 426,
    "comment": "/** \n * Controls which variables get renamed. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.propertyRenaming",
    "snippet": "public PropertyRenamingPolicy propertyRenaming;",
    "begin_line": 429,
    "end_line": 429,
    "comment": "/** \n * Controls which properties get renamed. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.propertyAffinity",
    "snippet": " boolean propertyAffinity;",
    "begin_line": 432,
    "end_line": 432,
    "comment": "/** \n * Should we use affinity information when generating property names. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.labelRenaming",
    "snippet": "public boolean labelRenaming;",
    "begin_line": 435,
    "end_line": 435,
    "comment": "/** \n * Controls label renaming. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.reserveRawExports",
    "snippet": "public boolean reserveRawExports;",
    "begin_line": 438,
    "end_line": 438,
    "comment": "/** \n * Reserve property names on the global this object. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.shadowVariables",
    "snippet": " boolean shadowVariables;",
    "begin_line": 441,
    "end_line": 441,
    "comment": "/** \n * Should shadow variable names in outer scope. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.generatePseudoNames",
    "snippet": "public boolean generatePseudoNames;",
    "begin_line": 446,
    "end_line": 446,
    "comment": "/** \n * Generate pseudo names for variables and properties for debugging purposes.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.renamePrefix",
    "snippet": "public String renamePrefix;",
    "begin_line": 449,
    "end_line": 449,
    "comment": "/** \n * Specifies a prefix for all globals \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.renamePrefixNamespace",
    "snippet": "public String renamePrefixNamespace;",
    "begin_line": 455,
    "end_line": 455,
    "comment": "/** \n * Specifies the name of an object that will be used to store all non-extern globals.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.aliasKeywords",
    "snippet": "public boolean aliasKeywords;",
    "begin_line": 458,
    "end_line": 458,
    "comment": "/** \n * Aliases true, false, and null to variables with shorter names. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.collapseProperties",
    "snippet": "public boolean collapseProperties;",
    "begin_line": 461,
    "end_line": 461,
    "comment": "/** \n * Flattens multi-level property names (e.g. a$b \u003d x) \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.collapseObjectLiterals",
    "snippet": " boolean collapseObjectLiterals;",
    "begin_line": 464,
    "end_line": 464,
    "comment": "/** \n * Split object literals into individual variables when possible. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.collapsePropertiesOnExternTypes",
    "snippet": " boolean collapsePropertiesOnExternTypes;",
    "begin_line": 471,
    "end_line": 471,
    "comment": "/** \n * Flattens multi-level property names on extern types (e.g. String$f \u003d x) \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.devirtualizePrototypeMethods",
    "snippet": "public boolean devirtualizePrototypeMethods;",
    "begin_line": 477,
    "end_line": 477,
    "comment": "/** \n * Devirtualize prototype method by rewriting them to be static calls that take the this pointer as their first argument\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.computeFunctionSideEffects",
    "snippet": "public boolean computeFunctionSideEffects;",
    "begin_line": 483,
    "end_line": 483,
    "comment": "/** \n * Use @nosideeffects annotations, function bodies and name graph to determine if calls have side effects.  Requires --check_types.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.debugFunctionSideEffectsPath",
    "snippet": " String debugFunctionSideEffectsPath;",
    "begin_line": 488,
    "end_line": 488,
    "comment": "/** \n * Where to save debug report for compute function side effects.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.disambiguateProperties",
    "snippet": "public boolean disambiguateProperties;",
    "begin_line": 494,
    "end_line": 494,
    "comment": "/** \n * Rename properties to disambiguate between unrelated fields based on type information.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.ambiguateProperties",
    "snippet": "public boolean ambiguateProperties;",
    "begin_line": 497,
    "end_line": 497,
    "comment": "/** \n * Rename unrelated properties to the same name to reduce code size. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.anonymousFunctionNaming",
    "snippet": "public AnonymousFunctionNamingPolicy anonymousFunctionNaming;",
    "begin_line": 500,
    "end_line": 500,
    "comment": "/** \n * Give anonymous functions names for easier debugging \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.inputAnonymousFunctionNamingMap",
    "snippet": " VariableMap inputAnonymousFunctionNamingMap;",
    "begin_line": 503,
    "end_line": 503,
    "comment": "/** \n * Input anonymous function renaming map. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.inputVariableMap",
    "snippet": " VariableMap inputVariableMap;",
    "begin_line": 506,
    "end_line": 506,
    "comment": "/** \n * Input variable renaming map. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.inputPropertyMap",
    "snippet": " VariableMap inputPropertyMap;",
    "begin_line": 509,
    "end_line": 509,
    "comment": "/** \n * Input property renaming map. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.exportTestFunctions",
    "snippet": "public boolean exportTestFunctions;",
    "begin_line": 512,
    "end_line": 512,
    "comment": "/** \n * Whether to export test functions. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.specializeInitialModule",
    "snippet": " boolean specializeInitialModule;",
    "begin_line": 514,
    "end_line": 514,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.replaceMessagesWithChromeI18n",
    "snippet": " boolean replaceMessagesWithChromeI18n;",
    "begin_line": 529,
    "end_line": 529,
    "comment": "/** \n * Replace UI strings with chrome.i18n.getMessage calls. Used by Chrome extensions/apps.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.tcProjectId",
    "snippet": " String tcProjectId;",
    "begin_line": 530,
    "end_line": 530,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.runtimeTypeCheck",
    "snippet": " boolean runtimeTypeCheck;",
    "begin_line": 547,
    "end_line": 547,
    "comment": "/** \n * Inserts run-time type assertions for debugging. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.runtimeTypeCheckLogFunction",
    "snippet": " String runtimeTypeCheckLogFunction;",
    "begin_line": 554,
    "end_line": 554,
    "comment": "/** \n * A JS function to be used for logging run-time type assertion failures. It will be passed the warning as a string and the faulty expression as arguments.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.codingConvention",
    "snippet": "private CodingConvention codingConvention;",
    "begin_line": 557,
    "end_line": 557,
    "comment": "/** \n * A CodingConvention to use during the compile. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.ignoreCajaProperties",
    "snippet": " boolean ignoreCajaProperties;",
    "begin_line": 559,
    "end_line": 559,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.syntheticBlockStartMarker",
    "snippet": "public String syntheticBlockStartMarker;",
    "begin_line": 566,
    "end_line": 566,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.syntheticBlockEndMarker",
    "snippet": "public String syntheticBlockEndMarker;",
    "begin_line": 568,
    "end_line": 568,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.locale",
    "snippet": "public String locale;",
    "begin_line": 571,
    "end_line": 571,
    "comment": "/** \n * Compiling locale \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.markAsCompiled",
    "snippet": "public boolean markAsCompiled;",
    "begin_line": 574,
    "end_line": 574,
    "comment": "/** \n * Sets the special \"COMPILED\" value to true \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.removeTryCatchFinally",
    "snippet": "public boolean removeTryCatchFinally;",
    "begin_line": 577,
    "end_line": 577,
    "comment": "/** \n * Removes try...catch...finally blocks for easier debugging \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.closurePass",
    "snippet": "public boolean closurePass;",
    "begin_line": 580,
    "end_line": 580,
    "comment": "/** \n * Processes goog.provide() and goog.require() calls \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.jqueryPass",
    "snippet": "public boolean jqueryPass;",
    "begin_line": 583,
    "end_line": 583,
    "comment": "/** \n * Processes jQuery aliases \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.removeAbstractMethods",
    "snippet": " boolean removeAbstractMethods;",
    "begin_line": 586,
    "end_line": 586,
    "comment": "/** \n * Remove goog.abstractMethod assignments. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.removeClosureAsserts",
    "snippet": " boolean removeClosureAsserts;",
    "begin_line": 589,
    "end_line": 589,
    "comment": "/** \n * Remove goog.asserts calls. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.gatherCssNames",
    "snippet": "public boolean gatherCssNames;",
    "begin_line": 592,
    "end_line": 592,
    "comment": "/** \n * Gather CSS names (requires closurePass) \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.stripTypes",
    "snippet": "public Set\u003cString\u003e stripTypes;",
    "begin_line": 595,
    "end_line": 595,
    "comment": "/** \n * Names of types to strip \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.stripNameSuffixes",
    "snippet": "public Set\u003cString\u003e stripNameSuffixes;",
    "begin_line": 598,
    "end_line": 598,
    "comment": "/** \n * Name suffixes that determine which variables and properties to strip \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.stripNamePrefixes",
    "snippet": "public Set\u003cString\u003e stripNamePrefixes;",
    "begin_line": 601,
    "end_line": 601,
    "comment": "/** \n * Name prefixes that determine which variables and properties to strip \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.stripTypePrefixes",
    "snippet": "public Set\u003cString\u003e stripTypePrefixes;",
    "begin_line": 604,
    "end_line": 604,
    "comment": "/** \n * Qualified type name prefixes that determine which types to strip \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.customPasses",
    "snippet": "public transient Multimap\u003cCustomPassExecutionTime, CompilerPass\u003e customPasses;",
    "begin_line": 608,
    "end_line": 608,
    "comment": "/** \n * Custom passes \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.markNoSideEffectCalls",
    "snippet": "public boolean markNoSideEffectCalls;",
    "begin_line": 611,
    "end_line": 611,
    "comment": "/** \n * Mark no side effect calls \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.defineReplacements",
    "snippet": "private Map\u003cString, Object\u003e defineReplacements;",
    "begin_line": 614,
    "end_line": 614,
    "comment": "/** \n * Replacements for @defines. Will be Boolean, Numbers, or Strings \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.tweakProcessing",
    "snippet": "private TweakProcessing tweakProcessing;",
    "begin_line": 617,
    "end_line": 617,
    "comment": "/** \n * What kind of processing to do for goog.tweak functions. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.tweakReplacements",
    "snippet": "private Map\u003cString, Object\u003e tweakReplacements;",
    "begin_line": 620,
    "end_line": 620,
    "comment": "/** \n * Replacements for tweaks. Will be Boolean, Numbers, or Strings \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.moveFunctionDeclarations",
    "snippet": "public boolean moveFunctionDeclarations;",
    "begin_line": 623,
    "end_line": 623,
    "comment": "/** \n * Move top-level function declarations to the top \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.instrumentationTemplate",
    "snippet": "public String instrumentationTemplate;",
    "begin_line": 626,
    "end_line": 626,
    "comment": "/** \n * Instrumentation template to use with #recordFunctionInformation \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.appNameStr",
    "snippet": " String appNameStr;",
    "begin_line": 628,
    "end_line": 628,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.recordFunctionInformation",
    "snippet": "public boolean recordFunctionInformation;",
    "begin_line": 639,
    "end_line": 639,
    "comment": "/** \n * Record function information \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.generateExports",
    "snippet": "public boolean generateExports;",
    "begin_line": 641,
    "end_line": 641,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.cssRenamingMap",
    "snippet": "public CssRenamingMap cssRenamingMap;",
    "begin_line": 644,
    "end_line": 644,
    "comment": "/** \n * Map used in the renaming of CSS class names. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.cssRenamingWhitelist",
    "snippet": " Set\u003cString\u003e cssRenamingWhitelist;",
    "begin_line": 647,
    "end_line": 647,
    "comment": "/** \n * Whitelist used in the renaming of CSS class names. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.processObjectPropertyString",
    "snippet": " boolean processObjectPropertyString;",
    "begin_line": 650,
    "end_line": 650,
    "comment": "/** \n * Process instances of goog.testing.ObjectPropertyString. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.replaceIdGenerators",
    "snippet": " boolean replaceIdGenerators \u003d true;",
    "begin_line": 653,
    "end_line": 653,
    "comment": "/** \n * Replace id generators \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.idGenerators",
    "snippet": " Set\u003cString\u003e idGenerators;",
    "begin_line": 656,
    "end_line": 656,
    "comment": "/** \n * Id generators to replace. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.idGeneratorsMapSerialized",
    "snippet": " String idGeneratorsMapSerialized;",
    "begin_line": 663,
    "end_line": 663,
    "comment": "/** \n * A previous map of ids (serialized to a string by a previous compile). This will be used as a hint during the ReplaceIdGenerators pass, which will attempt to reuse the same ids.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.replaceStringsFunctionDescriptions",
    "snippet": " List\u003cString\u003e replaceStringsFunctionDescriptions;",
    "begin_line": 666,
    "end_line": 666,
    "comment": "/** \n * Configuration strings \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.replaceStringsPlaceholderToken",
    "snippet": " String replaceStringsPlaceholderToken;",
    "begin_line": 668,
    "end_line": 668,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.replaceStringsReservedStrings",
    "snippet": " Set\u003cString\u003e replaceStringsReservedStrings;",
    "begin_line": 670,
    "end_line": 670,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.replaceStringsInputMap",
    "snippet": " VariableMap replaceStringsInputMap;",
    "begin_line": 672,
    "end_line": 672,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.propertyInvalidationErrors",
    "snippet": " Map\u003cString, CheckLevel\u003e propertyInvalidationErrors;",
    "begin_line": 675,
    "end_line": 675,
    "comment": "/** \n * List of properties that we report invalidation errors for. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.transformAMDToCJSModules",
    "snippet": " boolean transformAMDToCJSModules \u003d false;",
    "begin_line": 678,
    "end_line": 678,
    "comment": "/** \n * Transform AMD to CommonJS modules. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.processCommonJSModules",
    "snippet": " boolean processCommonJSModules \u003d false;",
    "begin_line": 681,
    "end_line": 681,
    "comment": "/** \n * Rewrite CommonJS modules so that they can be concatenated together. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.commonJSModulePathPrefix",
    "snippet": " String commonJSModulePathPrefix \u003d\n      ProcessCommonJSModules.DEFAULT_FILENAME_PREFIX;",
    "begin_line": 684,
    "end_line": 685,
    "comment": "/** \n * CommonJS module prefix. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.prettyPrint",
    "snippet": "public boolean prettyPrint;",
    "begin_line": 693,
    "end_line": 693,
    "comment": "/** \n * Output in pretty indented format \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.lineBreak",
    "snippet": "public boolean lineBreak;",
    "begin_line": 696,
    "end_line": 696,
    "comment": "/** \n * Line break the output a bit more aggressively \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.preferLineBreakAtEndOfFile",
    "snippet": "public boolean preferLineBreakAtEndOfFile;",
    "begin_line": 699,
    "end_line": 699,
    "comment": "/** \n * Prefer line breaks at end of file \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.printInputDelimiter",
    "snippet": "public boolean printInputDelimiter;",
    "begin_line": 702,
    "end_line": 702,
    "comment": "/** \n * Prints a separator comment before each JS script \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.inputDelimiter",
    "snippet": "public String inputDelimiter \u003d \"// Input %num%\";",
    "begin_line": 705,
    "end_line": 705,
    "comment": "/** \n * The string to use as the separator for printInputDelimiter \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.preferSingleQuotes",
    "snippet": " boolean preferSingleQuotes;",
    "begin_line": 707,
    "end_line": 707,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.trustedStrings",
    "snippet": " boolean trustedStrings;",
    "begin_line": 718,
    "end_line": 718,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.reportPath",
    "snippet": " String reportPath;",
    "begin_line": 730,
    "end_line": 730,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.tracer",
    "snippet": " TracerMode tracer;",
    "begin_line": 737,
    "end_line": 737,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.colorizeErrorOutput",
    "snippet": "private boolean colorizeErrorOutput;",
    "begin_line": 747,
    "end_line": 747,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.errorFormat",
    "snippet": "public ErrorFormat errorFormat;",
    "begin_line": 749,
    "end_line": 749,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.warningsGuard",
    "snippet": "private ComposeWarningsGuard warningsGuard \u003d new ComposeWarningsGuard();",
    "begin_line": 751,
    "end_line": 751,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.summaryDetailLevel",
    "snippet": " int summaryDetailLevel \u003d 1;",
    "begin_line": 753,
    "end_line": 753,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.lineLengthThreshold",
    "snippet": " int lineLengthThreshold \u003d CodePrinter.DEFAULT_LINE_LENGTH_THRESHOLD;",
    "begin_line": 755,
    "end_line": 755,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.externExports",
    "snippet": "private boolean externExports;",
    "begin_line": 765,
    "end_line": 765,
    "comment": "/** \n * Whether the exports should be made available via  {@link Result} aftercompilation. This is implicitly true if  {@link #externExportsPath} is set.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.externExportsPath",
    "snippet": " String externExportsPath;",
    "begin_line": 768,
    "end_line": 768,
    "comment": "/** \n * The output path for the created externs file. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.nameReferenceReportPath",
    "snippet": " String nameReferenceReportPath;",
    "begin_line": 770,
    "end_line": 770,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.nameReferenceGraphPath",
    "snippet": " String nameReferenceGraphPath;",
    "begin_line": 777,
    "end_line": 777,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.sourceMapOutputPath",
    "snippet": "public String sourceMapOutputPath;",
    "begin_line": 789,
    "end_line": 789,
    "comment": "/** \n * The output path for the source map. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.sourceMapDetailLevel",
    "snippet": "public SourceMap.DetailLevel sourceMapDetailLevel \u003d\n      SourceMap.DetailLevel.SYMBOLS;",
    "begin_line": 792,
    "end_line": 793,
    "comment": "/** \n * The detail level for the generated source map. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.sourceMapFormat",
    "snippet": "public SourceMap.Format sourceMapFormat \u003d\n      SourceMap.Format.DEFAULT;",
    "begin_line": 796,
    "end_line": 797,
    "comment": "/** \n * The source map file format \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.sourceMapLocationMappings",
    "snippet": "public List\u003cSourceMap.LocationMapping\u003e sourceMapLocationMappings \u003d\n      Collections.emptyList();",
    "begin_line": 799,
    "end_line": 800,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.outputCharset",
    "snippet": " String outputCharset;",
    "begin_line": 806,
    "end_line": 806,
    "comment": "/** \n * Charset to use when generating code.  If null, then output ASCII. This needs to be a string because CompilerOptions is serializable.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.looseTypes",
    "snippet": " boolean looseTypes;",
    "begin_line": 811,
    "end_line": 811,
    "comment": "/** \n * Whether the named objects types included \u0027undefined\u0027 by default.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.protectHiddenSideEffects",
    "snippet": " boolean protectHiddenSideEffects;",
    "begin_line": 816,
    "end_line": 816,
    "comment": "/** \n * When set, assume that apparently side-effect free code is meaningful.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.aliasHandler",
    "snippet": "private transient AliasTransformationHandler aliasHandler;",
    "begin_line": 828,
    "end_line": 828,
    "comment": "/** \n * Data holder Alias Transformation information accumulated during a compile.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.errorHandler",
    "snippet": "transient ErrorHandler errorHandler;",
    "begin_line": 833,
    "end_line": 833,
    "comment": "/** \n * Handler for compiler warnings and errors.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.NULL_ALIAS_TRANSFORMATION_HANDLER",
    "snippet": "static final AliasTransformationHandler NULL_ALIAS_TRANSFORMATION_HANDLER \u003d\n      new NullAliasTransformationHandler();",
    "begin_line": 2162,
    "end_line": 2163,
    "comment": "/** \n * A Null implementation of the CodeChanges interface which performs all operations as a No-Op\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 0L;",
    "begin_line": 2167,
    "end_line": 2167,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.NULL_ALIAS_TRANSFORMATION",
    "snippet": "private static final AliasTransformation NULL_ALIAS_TRANSFORMATION \u003d\n        new NullAliasTransformation();",
    "begin_line": 2169,
    "end_line": 2170,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.CompilerOptions",
    "src_path": "com/google/javascript/jscomp/CompilerOptions.java",
    "signature": "com.google.javascript.jscomp.CompilerOptions.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 0L;",
    "begin_line": 2181,
    "end_line": 2181,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ComposeWarningsGuard",
    "src_path": "com/google/javascript/jscomp/ComposeWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.ComposeWarningsGuard.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 42,
    "end_line": 42,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ComposeWarningsGuard",
    "src_path": "com/google/javascript/jscomp/ComposeWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.ComposeWarningsGuard.orderOfAddition",
    "snippet": "private final Map\u003cWarningsGuard, Integer\u003e orderOfAddition \u003d Maps.newHashMap();",
    "begin_line": 45,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ComposeWarningsGuard",
    "src_path": "com/google/javascript/jscomp/ComposeWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.ComposeWarningsGuard.numberOfAdds",
    "snippet": "private int numberOfAdds \u003d 0;",
    "begin_line": 46,
    "end_line": 46,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ComposeWarningsGuard",
    "src_path": "com/google/javascript/jscomp/ComposeWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.ComposeWarningsGuard.guardComparator",
    "snippet": "private final Comparator\u003cWarningsGuard\u003e guardComparator \u003d\n      new GuardComparator(orderOfAddition);",
    "begin_line": 48,
    "end_line": 49,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ComposeWarningsGuard",
    "src_path": "com/google/javascript/jscomp/ComposeWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.ComposeWarningsGuard.demoteErrors",
    "snippet": "private boolean demoteErrors \u003d false;",
    "begin_line": 50,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ComposeWarningsGuard",
    "src_path": "com/google/javascript/jscomp/ComposeWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.ComposeWarningsGuard.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 54,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ComposeWarningsGuard",
    "src_path": "com/google/javascript/jscomp/ComposeWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.ComposeWarningsGuard.orderOfAddition",
    "snippet": "private final Map\u003cWarningsGuard, Integer\u003e orderOfAddition;",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ComposeWarningsGuard",
    "src_path": "com/google/javascript/jscomp/ComposeWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.ComposeWarningsGuard.guards",
    "snippet": "private final TreeSet\u003cWarningsGuard\u003e guards \u003d\n      new TreeSet\u003cWarningsGuard\u003e(guardComparator);",
    "begin_line": 76,
    "end_line": 77,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ConstCheck",
    "src_path": "com/google/javascript/jscomp/ConstCheck.java",
    "signature": "com.google.javascript.jscomp.ConstCheck.CONST_REASSIGNED_VALUE_ERROR",
    "snippet": "static final DiagnosticType CONST_REASSIGNED_VALUE_ERROR \u003d\n      DiagnosticType.error(\n          \"JSC_CONSTANT_REASSIGNED_VALUE_ERROR\",\n          \"constant {0} assigned a value more than once\");",
    "begin_line": 36,
    "end_line": 39,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ConstCheck",
    "src_path": "com/google/javascript/jscomp/ConstCheck.java",
    "signature": "com.google.javascript.jscomp.ConstCheck.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 41,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ConstCheck",
    "src_path": "com/google/javascript/jscomp/ConstCheck.java",
    "signature": "com.google.javascript.jscomp.ConstCheck.initializedConstants",
    "snippet": "private final Set\u003cScope.Var\u003e initializedConstants;",
    "begin_line": 42,
    "end_line": 42,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 58,
    "end_line": 58,
    "comment": "/** \n * Based roughly on the first few pages of \"Declarative Intraprocedural Flow Analysis of Java Source Code by Nilsson-Nyman, Hedin, Magnusson \u0026 Ekman\", this pass computes the control flow graph from the AST. However, a full attribute grammar is not necessary. We will compute the flow edges with a single post order traversal. The \"follow()\" of a given node will be computed recursively in a demand driven fashion. As of this moment, we are not performing any inter-procedural analysis within our framework.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.cfg",
    "snippet": "private ControlFlowGraph\u003cNode\u003e cfg;",
    "begin_line": 60,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.astPosition",
    "snippet": "private Map\u003cNode, Integer\u003e astPosition;",
    "begin_line": 62,
    "end_line": 62,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.nodePriorities",
    "snippet": "private Map\u003cDiGraphNode\u003cNode, Branch\u003e, Integer\u003e nodePriorities;",
    "begin_line": 65,
    "end_line": 65,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.priorityComparator",
    "snippet": "private final Comparator\u003cDiGraphNode\u003cNode, Branch\u003e\u003e priorityComparator \u003d\n      new Comparator\u003cDiGraphNode\u003cNode, Branch\u003e\u003e() {\n    @Override\n    public int compare(\n        DiGraphNode\u003cNode, Branch\u003e a, DiGraphNode\u003cNode, Branch\u003e b) {\n      return astPosition.get(a.getValue()) - astPosition.get(b.getValue());\n    }\n  };",
    "begin_line": 70,
    "end_line": 77,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.astPositionCounter",
    "snippet": "private int astPositionCounter;",
    "begin_line": 79,
    "end_line": 79,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.priorityCounter",
    "snippet": "private int priorityCounter;",
    "begin_line": 80,
    "end_line": 80,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.shouldTraverseFunctions",
    "snippet": "private final boolean shouldTraverseFunctions;",
    "begin_line": 82,
    "end_line": 82,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.edgeAnnotations",
    "snippet": "private final boolean edgeAnnotations;",
    "begin_line": 83,
    "end_line": 83,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.root",
    "snippet": "private Node root;",
    "begin_line": 88,
    "end_line": 88,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.exceptionHandler",
    "snippet": "private final Deque\u003cNode\u003e exceptionHandler \u003d new ArrayDeque\u003cNode\u003e();",
    "begin_line": 95,
    "end_line": 95,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.finallyMap",
    "snippet": "private final Multimap\u003cNode, Node\u003e finallyMap \u003d HashMultimap.create();",
    "begin_line": 126,
    "end_line": 126,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/ControlFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.ControlFlowAnalysis.priorities",
    "snippet": "private final Map\u003cDiGraphNode\u003cNode, Branch\u003e, Integer\u003e priorities;",
    "begin_line": 1005,
    "end_line": 1005,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowGraph",
    "src_path": "com/google/javascript/jscomp/ControlFlowGraph.java",
    "signature": "com.google.javascript.jscomp.ControlFlowGraph.implicitReturn",
    "snippet": "private final DiGraphNode\u003cN, ControlFlowGraph.Branch\u003e implicitReturn;",
    "begin_line": 40,
    "end_line": 40,
    "comment": "/** \n * A special node marked by the node value key null to a singleton \"return\" when control is transferred outside of the current control flow graph.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlFlowGraph",
    "src_path": "com/google/javascript/jscomp/ControlFlowGraph.java",
    "signature": "com.google.javascript.jscomp.ControlFlowGraph.entry",
    "snippet": "private final DiGraphNode\u003cN, ControlFlowGraph.Branch\u003e entry;",
    "begin_line": 42,
    "end_line": 42,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlStructureCheck",
    "src_path": "com/google/javascript/jscomp/ControlStructureCheck.java",
    "signature": "com.google.javascript.jscomp.ControlStructureCheck.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ControlStructureCheck",
    "src_path": "com/google/javascript/jscomp/ControlStructureCheck.java",
    "signature": "com.google.javascript.jscomp.ControlStructureCheck.USE_OF_WITH",
    "snippet": "static final DiagnosticType USE_OF_WITH \u003d DiagnosticType.warning(\n      \"JSC_USE_OF_WITH\",\n      \"The use of the \u0027with\u0027 structure should be avoided.\");",
    "begin_line": 31,
    "end_line": 33,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DataFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/DataFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.DataFlowAnalysis.cfg",
    "snippet": "private final ControlFlowGraph\u003cN\u003e cfg;",
    "begin_line": 87,
    "end_line": 87,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DataFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/DataFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.DataFlowAnalysis.joinOp",
    "snippet": "final JoinOp\u003cL\u003e joinOp;",
    "begin_line": 88,
    "end_line": 88,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DataFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/DataFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.DataFlowAnalysis.orderedWorkSet",
    "snippet": "protected final Set\u003cDiGraphNode\u003cN, Branch\u003e\u003e orderedWorkSet;",
    "begin_line": 89,
    "end_line": 89,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DataFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/DataFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.DataFlowAnalysis.MAX_STEPS",
    "snippet": "public static final int MAX_STEPS \u003d 200000;",
    "begin_line": 97,
    "end_line": 97,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DataFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/DataFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.DataFlowAnalysis.in",
    "snippet": "private L in;",
    "begin_line": 332,
    "end_line": 332,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DataFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/DataFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.DataFlowAnalysis.out",
    "snippet": "private L out;",
    "begin_line": 333,
    "end_line": 333,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DataFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/DataFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.DataFlowAnalysis.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 383,
    "end_line": 383,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DataFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/DataFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.DataFlowAnalysis.in",
    "snippet": "private L in;",
    "begin_line": 487,
    "end_line": 487,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DataFlowAnalysis",
    "src_path": "com/google/javascript/jscomp/DataFlowAnalysis.java",
    "signature": "com.google.javascript.jscomp.DataFlowAnalysis.out",
    "snippet": "private List\u003cL\u003e out;",
    "begin_line": 488,
    "end_line": 488,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DependencyOptions",
    "src_path": "com/google/javascript/jscomp/DependencyOptions.java",
    "signature": "com.google.javascript.jscomp.DependencyOptions.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DependencyOptions",
    "src_path": "com/google/javascript/jscomp/DependencyOptions.java",
    "signature": "com.google.javascript.jscomp.DependencyOptions.sortDependencies",
    "snippet": "private boolean sortDependencies \u003d false;",
    "begin_line": 42,
    "end_line": 42,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DependencyOptions",
    "src_path": "com/google/javascript/jscomp/DependencyOptions.java",
    "signature": "com.google.javascript.jscomp.DependencyOptions.pruneDependencies",
    "snippet": "private boolean pruneDependencies \u003d false;",
    "begin_line": 43,
    "end_line": 43,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DependencyOptions",
    "src_path": "com/google/javascript/jscomp/DependencyOptions.java",
    "signature": "com.google.javascript.jscomp.DependencyOptions.dropMoochers",
    "snippet": "private boolean dropMoochers \u003d false;",
    "begin_line": 44,
    "end_line": 44,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DependencyOptions",
    "src_path": "com/google/javascript/jscomp/DependencyOptions.java",
    "signature": "com.google.javascript.jscomp.DependencyOptions.entryPoints",
    "snippet": "private final Set\u003cString\u003e entryPoints \u003d Sets.newHashSet();",
    "begin_line": 45,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroup",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroup.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroup.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1;",
    "begin_line": 34,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroup",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroup.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroup.types",
    "snippet": "private final Set\u003cDiagnosticType\u003e types;",
    "begin_line": 37,
    "end_line": 37,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroup",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroup.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroup.name",
    "snippet": "private final String name;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroup",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroup.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroup.singletons",
    "snippet": "private static final Map\u003cDiagnosticType, DiagnosticGroup\u003e singletons \u003d\n      Maps.newHashMap();",
    "begin_line": 66,
    "end_line": 67,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroupWarningsGuard",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroupWarningsGuard.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 27,
    "end_line": 27,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroupWarningsGuard",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroupWarningsGuard.group",
    "snippet": "final DiagnosticGroup group;",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroupWarningsGuard",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroupWarningsGuard.level",
    "snippet": "final CheckLevel level;",
    "begin_line": 30,
    "end_line": 30,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.UNUSED",
    "snippet": "static final DiagnosticType UNUSED \u003d\n      DiagnosticType.warning(\"JSC_UNUSED\", \"{0}\");",
    "begin_line": 30,
    "end_line": 31,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.groupsByName",
    "snippet": "private static final Map\u003cString, DiagnosticGroup\u003e groupsByName \u003d\n      Maps.newHashMap();",
    "begin_line": 35,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.DIAGNOSTIC_GROUP_NAMES",
    "snippet": "static final String DIAGNOSTIC_GROUP_NAMES \u003d\n      \"accessControls, ambiguousFunctionDecl, cast, checkRegExp, \" +\n      \"checkTypes, checkVars, const, constantProperty, deprecated, \" +\n      \"duplicateMessage, \" +\n      \"es5Strict, externsValidation, fileoverviewTags, globalThis, \" +\n      \"internetExplorerChecks, invalidCasts, misplacedTypeAnnotation, \" +\n      \"missingProperties, \" +\n      \"nonStandardJsDocs, suspiciousCode, strictModuleDepCheck, \" +\n      \"typeInvalidation, \" +\n      \"undefinedNames, undefinedVars, unknownDefines, uselessCode, \" +\n      \"visibility\";",
    "begin_line": 78,
    "end_line": 88,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.GLOBAL_THIS",
    "snippet": "public static final DiagnosticGroup GLOBAL_THIS \u003d\n      DiagnosticGroups.registerGroup(\"globalThis\",\n          CheckGlobalThis.GLOBAL_THIS);",
    "begin_line": 90,
    "end_line": 92,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.DEPRECATED",
    "snippet": "public static final DiagnosticGroup DEPRECATED \u003d\n      DiagnosticGroups.registerGroup(\"deprecated\",\n          CheckAccessControls.DEPRECATED_NAME,\n          CheckAccessControls.DEPRECATED_NAME_REASON,\n          CheckAccessControls.DEPRECATED_PROP,\n          CheckAccessControls.DEPRECATED_PROP_REASON,\n          CheckAccessControls.DEPRECATED_CLASS,\n          CheckAccessControls.DEPRECATED_CLASS_REASON);",
    "begin_line": 94,
    "end_line": 101,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.VISIBILITY",
    "snippet": "public static final DiagnosticGroup VISIBILITY \u003d\n      DiagnosticGroups.registerGroup(\"visibility\",\n          CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS,\n          CheckAccessControls.BAD_PRIVATE_PROPERTY_ACCESS,\n          CheckAccessControls.BAD_PROTECTED_PROPERTY_ACCESS,\n          CheckAccessControls.PRIVATE_OVERRIDE,\n          CheckAccessControls.VISIBILITY_MISMATCH);",
    "begin_line": 103,
    "end_line": 109,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.CONSTANT_PROPERTY",
    "snippet": "public static final DiagnosticGroup CONSTANT_PROPERTY \u003d\n      DiagnosticGroups.registerGroup(\"constantProperty\",\n          CheckAccessControls.CONST_PROPERTY_DELETED,\n          CheckAccessControls.CONST_PROPERTY_REASSIGNED_VALUE);",
    "begin_line": 111,
    "end_line": 114,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.NON_STANDARD_JSDOC",
    "snippet": "public static final DiagnosticGroup NON_STANDARD_JSDOC \u003d\n      DiagnosticGroups.registerGroup(\"nonStandardJsDocs\",\n          RhinoErrorReporter.BAD_JSDOC_ANNOTATION);",
    "begin_line": 116,
    "end_line": 118,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.ACCESS_CONTROLS",
    "snippet": "public static final DiagnosticGroup ACCESS_CONTROLS \u003d\n      DiagnosticGroups.registerGroup(\"accessControls\",\n          DEPRECATED, VISIBILITY);",
    "begin_line": 120,
    "end_line": 122,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.INVALID_CASTS",
    "snippet": "public static final DiagnosticGroup INVALID_CASTS \u003d\n      DiagnosticGroups.registerGroup(\"invalidCasts\",\n          TypeValidator.INVALID_CAST);",
    "begin_line": 124,
    "end_line": 126,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.FILEOVERVIEW_JSDOC",
    "snippet": "public static final DiagnosticGroup FILEOVERVIEW_JSDOC \u003d\n      DiagnosticGroups.registerDeprecatedGroup(\"fileoverviewTags\");",
    "begin_line": 128,
    "end_line": 129,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.STRICT_MODULE_DEP_CHECK",
    "snippet": "public static final DiagnosticGroup STRICT_MODULE_DEP_CHECK \u003d\n      DiagnosticGroups.registerGroup(\"strictModuleDepCheck\",\n          VarCheck.STRICT_MODULE_DEP_ERROR,\n          CheckGlobalNames.STRICT_MODULE_DEP_QNAME);",
    "begin_line": 131,
    "end_line": 134,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.VIOLATED_MODULE_DEP",
    "snippet": "public static final DiagnosticGroup VIOLATED_MODULE_DEP \u003d\n      DiagnosticGroups.registerGroup(\"violatedModuleDep\",\n          VarCheck.VIOLATED_MODULE_DEP_ERROR);",
    "begin_line": 136,
    "end_line": 138,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.EXTERNS_VALIDATION",
    "snippet": "public static final DiagnosticGroup EXTERNS_VALIDATION \u003d\n      DiagnosticGroups.registerGroup(\"externsValidation\",\n          VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR,\n          VarCheck.UNDEFINED_EXTERN_VAR_ERROR);",
    "begin_line": 140,
    "end_line": 143,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.AMBIGUOUS_FUNCTION_DECL",
    "snippet": "public static final DiagnosticGroup AMBIGUOUS_FUNCTION_DECL \u003d\n      DiagnosticGroups.registerGroup(\"ambiguousFunctionDecl\",\n          VariableReferenceCheck.AMBIGUOUS_FUNCTION_DECL);",
    "begin_line": 145,
    "end_line": 147,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.UNKNOWN_DEFINES",
    "snippet": "public static final DiagnosticGroup UNKNOWN_DEFINES \u003d\n      DiagnosticGroups.registerGroup(\"unknownDefines\",\n          ProcessDefines.UNKNOWN_DEFINE_WARNING);",
    "begin_line": 149,
    "end_line": 151,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.TWEAKS",
    "snippet": "public static final DiagnosticGroup TWEAKS \u003d\n      DiagnosticGroups.registerGroup(\"tweakValidation\",\n          ProcessTweaks.INVALID_TWEAK_DEFAULT_VALUE_WARNING,\n          ProcessTweaks.TWEAK_WRONG_GETTER_TYPE_WARNING,\n          ProcessTweaks.UNKNOWN_TWEAK_WARNING);",
    "begin_line": 153,
    "end_line": 157,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.MISSING_PROPERTIES",
    "snippet": "public static final DiagnosticGroup MISSING_PROPERTIES \u003d\n      DiagnosticGroups.registerGroup(\"missingProperties\",\n          TypeCheck.INEXISTENT_PROPERTY);",
    "begin_line": 159,
    "end_line": 161,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.INTERNET_EXPLORER_CHECKS",
    "snippet": "public static final DiagnosticGroup INTERNET_EXPLORER_CHECKS \u003d\n      DiagnosticGroups.registerGroup(\"internetExplorerChecks\",\n          RhinoErrorReporter.TRAILING_COMMA);",
    "begin_line": 163,
    "end_line": 165,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.UNDEFINED_VARIABLES",
    "snippet": "public static final DiagnosticGroup UNDEFINED_VARIABLES \u003d\n      DiagnosticGroups.registerGroup(\"undefinedVars\",\n          VarCheck.UNDEFINED_VAR_ERROR);",
    "begin_line": 167,
    "end_line": 169,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.UNDEFINED_NAMES",
    "snippet": "public static final DiagnosticGroup UNDEFINED_NAMES \u003d\n      DiagnosticGroups.registerGroup(\"undefinedNames\",\n          CheckGlobalNames.UNDEFINED_NAME_WARNING);",
    "begin_line": 171,
    "end_line": 173,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT",
    "snippet": "public static final DiagnosticGroup DEBUGGER_STATEMENT_PRESENT \u003d\n      DiagnosticGroups.registerGroup(\"checkDebuggerStatement\",\n          CheckDebuggerStatement.DEBUGGER_STATEMENT_PRESENT);",
    "begin_line": 175,
    "end_line": 177,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.CHECK_REGEXP",
    "snippet": "public static final DiagnosticGroup CHECK_REGEXP \u003d\n      DiagnosticGroups.registerGroup(\"checkRegExp\",\n          CheckRegExp.REGEXP_REFERENCE,\n          CheckRegExp.MALFORMED_REGEXP);",
    "begin_line": 179,
    "end_line": 182,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.CHECK_TYPES",
    "snippet": "public static final DiagnosticGroup CHECK_TYPES \u003d\n      DiagnosticGroups.registerGroup(\"checkTypes\",\n          TypeValidator.ALL_DIAGNOSTICS,\n          TypeCheck.ALL_DIAGNOSTICS);",
    "begin_line": 184,
    "end_line": 187,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.CHECK_VARIABLES",
    "snippet": "public static final DiagnosticGroup CHECK_VARIABLES \u003d\n      DiagnosticGroups.registerGroup(\"checkVars\",\n          VarCheck.UNDEFINED_VAR_ERROR,\n          SyntacticScopeCreator.VAR_MULTIPLY_DECLARED_ERROR);",
    "begin_line": 189,
    "end_line": 192,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.CHECK_USELESS_CODE",
    "snippet": "public static final DiagnosticGroup CHECK_USELESS_CODE \u003d\n      DiagnosticGroups.registerGroup(\"uselessCode\",\n          CheckSideEffects.USELESS_CODE_ERROR,\n          CheckUnreachableCode.UNREACHABLE_CODE);",
    "begin_line": 194,
    "end_line": 197,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.CONST",
    "snippet": "public static final DiagnosticGroup CONST \u003d\n      DiagnosticGroups.registerGroup(\"const\",\n          CheckAccessControls.CONST_PROPERTY_DELETED,\n          CheckAccessControls.CONST_PROPERTY_REASSIGNED_VALUE,\n          ConstCheck.CONST_REASSIGNED_VALUE_ERROR);",
    "begin_line": 199,
    "end_line": 203,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.TYPE_INVALIDATION",
    "snippet": "public static final DiagnosticGroup TYPE_INVALIDATION \u003d\n      DiagnosticGroups.registerGroup(\"typeInvalidation\",\n          DisambiguateProperties.Warnings.INVALIDATION);",
    "begin_line": 205,
    "end_line": 207,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_VARS",
    "snippet": "public static final DiagnosticGroup DUPLICATE_VARS \u003d\n      DiagnosticGroups.registerGroup(\"duplicate\",\n          SyntacticScopeCreator.VAR_MULTIPLY_DECLARED_ERROR,\n          TypeValidator.DUP_VAR_DECLARATION);",
    "begin_line": 209,
    "end_line": 212,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.ES5_STRICT",
    "snippet": "public static final DiagnosticGroup ES5_STRICT \u003d\n      DiagnosticGroups.registerGroup(\"es5Strict\",\n          ControlStructureCheck.USE_OF_WITH,\n          StrictModeCheck.UNKNOWN_VARIABLE,\n          StrictModeCheck.EVAL_DECLARATION,\n          StrictModeCheck.EVAL_ASSIGNMENT,\n          StrictModeCheck.ARGUMENTS_DECLARATION,\n          StrictModeCheck.ARGUMENTS_ASSIGNMENT,\n          StrictModeCheck.DELETE_VARIABLE,\n          StrictModeCheck.DUPLICATE_OBJECT_KEY);",
    "begin_line": 214,
    "end_line": 223,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.CHECK_PROVIDES",
    "snippet": "public static final DiagnosticGroup CHECK_PROVIDES \u003d\n      DiagnosticGroups.registerGroup(\"checkProvides\",\n          CheckProvides.MISSING_PROVIDE_WARNING);",
    "begin_line": 225,
    "end_line": 227,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_MESSAGE",
    "snippet": "public static final DiagnosticGroup DUPLICATE_MESSAGE \u003d\n      DiagnosticGroups.registerGroup(\"duplicateMessage\",\n          JsMessageVisitor.MESSAGE_DUPLICATE_KEY);",
    "begin_line": 229,
    "end_line": 231,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.MISPLACED_TYPE_ANNOTATION",
    "snippet": "public static final DiagnosticGroup MISPLACED_TYPE_ANNOTATION \u003d\n      DiagnosticGroups.registerGroup(\"misplacedTypeAnnotation\",\n          RhinoErrorReporter.MISPLACED_TYPE_ANNOTATION);",
    "begin_line": 233,
    "end_line": 235,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.CAST",
    "snippet": "public static final DiagnosticGroup CAST \u003d\n      DiagnosticGroups.registerGroup(\"cast\",\n          TypeValidator.INVALID_CAST);",
    "begin_line": 237,
    "end_line": 239,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticGroups",
    "src_path": "com/google/javascript/jscomp/DiagnosticGroups.java",
    "signature": "com.google.javascript.jscomp.DiagnosticGroups.SUSPICIOUS_CODE",
    "snippet": "public static final DiagnosticGroup SUSPICIOUS_CODE \u003d\n      DiagnosticGroups.registerGroup(\"suspiciousCode\",\n          CheckSuspiciousCode.SUSPICIOUS_SEMICOLON,\n          CheckSuspiciousCode.SUSPICIOUS_COMPARISON_WITH_NAN);",
    "begin_line": 241,
    "end_line": 244,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticType",
    "src_path": "com/google/javascript/jscomp/DiagnosticType.java",
    "signature": "com.google.javascript.jscomp.DiagnosticType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1;",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticType",
    "src_path": "com/google/javascript/jscomp/DiagnosticType.java",
    "signature": "com.google.javascript.jscomp.DiagnosticType.key",
    "snippet": "public final String key;",
    "begin_line": 35,
    "end_line": 35,
    "comment": "/** \n * The error type. Used as the BugPattern and BugInstance types by BugBot\u0027s XML\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticType",
    "src_path": "com/google/javascript/jscomp/DiagnosticType.java",
    "signature": "com.google.javascript.jscomp.DiagnosticType.format",
    "snippet": "public final MessageFormat format;",
    "begin_line": 38,
    "end_line": 38,
    "comment": "/** \n * The default way to format errors \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticType",
    "src_path": "com/google/javascript/jscomp/DiagnosticType.java",
    "signature": "com.google.javascript.jscomp.DiagnosticType.defaultLevel",
    "snippet": "public final CheckLevel defaultLevel;",
    "begin_line": 41,
    "end_line": 41,
    "comment": "/** \n * Default level \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.DiagnosticType",
    "src_path": "com/google/javascript/jscomp/DiagnosticType.java",
    "signature": "com.google.javascript.jscomp.DiagnosticType.level",
    "snippet": "public CheckLevel level;",
    "begin_line": 44,
    "end_line": 44,
    "comment": "/** \n * Reporting level, initially the defaultLevel but may be changed. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.MAX_INVALDIATION_WARNINGS_PER_PROPERTY",
    "snippet": "private static final int MAX_INVALDIATION_WARNINGS_PER_PROPERTY \u003d 10;",
    "begin_line": 81,
    "end_line": 81,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.logger",
    "snippet": "private static final Logger logger \u003d Logger.getLogger(\n      DisambiguateProperties.class.getName());",
    "begin_line": 83,
    "end_line": 84,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.INVALIDATION",
    "snippet": "static final DiagnosticType INVALIDATION \u003d DiagnosticType.disabled(\n        \"JSC_INVALIDATION\",\n        \"Property disambiguator skipping all instances of property {0} \"\n        + \"because of type {1} node {2}. {3}\");",
    "begin_line": 88,
    "end_line": 91,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 94,
    "end_line": 94,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.typeSystem",
    "snippet": "private final TypeSystem\u003cT\u003e typeSystem;",
    "begin_line": 95,
    "end_line": 95,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.invalidationMap",
    "snippet": "private Multimap\u003cObject, JSError\u003e invalidationMap;",
    "begin_line": 102,
    "end_line": 102,
    "comment": "/** \n * Map of a type to all the related errors that invalidated the type for disambiguation. It has be Object because of the generic nature of this pass.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.propertiesToErrorFor",
    "snippet": "private final Map\u003cString, CheckLevel\u003e propertiesToErrorFor;",
    "begin_line": 112,
    "end_line": 112,
    "comment": "/** \n * In practice any large code base will have thousands and thousands of type invalidations, which makes reporting all of the errors useless. However, certain properties are worth specifically guarding because of the large amount of code that can be removed as dead code. This list contains the properties (eg: \"toString\") that we care about; if any of these properties is invalidated it causes an error.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.name",
    "snippet": "final String name;",
    "begin_line": 116,
    "end_line": 116,
    "comment": "/** \n * The name of the property. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.types",
    "snippet": "private UnionFind\u003cT\u003e types;",
    "begin_line": 119,
    "end_line": 119,
    "comment": "/** \n * All types on which the field exists, grouped together if related. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.typesToSkip",
    "snippet": " Set\u003cT\u003e typesToSkip \u003d Sets.newHashSet();",
    "begin_line": 125,
    "end_line": 125,
    "comment": "/** \n * A set of types for which renaming this field should be skipped. This list is first filled by fields defined in the externs file.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.skipRenaming",
    "snippet": " boolean skipRenaming;",
    "begin_line": 131,
    "end_line": 131,
    "comment": "/** \n * If true, do not rename any instance of this field, as it has been referenced from an unknown type.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.renameNodes",
    "snippet": " Set\u003cNode\u003e renameNodes \u003d Sets.newHashSet();",
    "begin_line": 134,
    "end_line": 134,
    "comment": "/** \n * Set of nodes for this field that need renaming. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.rootTypes",
    "snippet": "final Map\u003cNode, T\u003e rootTypes \u003d Maps.newHashMap();",
    "begin_line": 141,
    "end_line": 141,
    "comment": "/** \n * Map from node to the highest type in the prototype chain containing the field for that node. In the case of a union, the type is the highest type of one of the types in the union.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.properties",
    "snippet": "private Map\u003cString, Property\u003e properties \u003d Maps.newHashMap();",
    "begin_line": 276,
    "end_line": 276,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.scopes",
    "snippet": "protected final Stack\u003cStaticScope\u003cT\u003e\u003e scopes \u003d\n        new Stack\u003cStaticScope\u003cT\u003e\u003e();",
    "begin_line": 372,
    "end_line": 373,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.invalidatingTypes",
    "snippet": "private final Set\u003cJSType\u003e invalidatingTypes;",
    "begin_line": 733,
    "end_line": 733,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.registry",
    "snippet": "private JSTypeRegistry registry;",
    "begin_line": 734,
    "end_line": 734,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.tt",
    "snippet": "private final TightenTypes tt;",
    "begin_line": 945,
    "end_line": 945,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.nextUniqueId",
    "snippet": "private int nextUniqueId;",
    "begin_line": 946,
    "end_line": 946,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.codingConvention",
    "snippet": "private CodingConvention codingConvention;",
    "begin_line": 947,
    "end_line": 947,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.invalidatingTypes",
    "snippet": "private final Set\u003cJSType\u003e invalidatingTypes \u003d Sets.newHashSet();",
    "begin_line": 948,
    "end_line": 948,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.DisambiguateProperties",
    "src_path": "com/google/javascript/jscomp/DisambiguateProperties.java",
    "signature": "com.google.javascript.jscomp.DisambiguateProperties.nativeTypes",
    "snippet": "private static final JSTypeNative [] nativeTypes \u003d new JSTypeNative[] {\n        JSTypeNative.BOOLEAN_OBJECT_TYPE,\n        JSTypeNative.NUMBER_OBJECT_TYPE,\n        JSTypeNative.STRING_OBJECT_TYPE\n    };",
    "begin_line": 952,
    "end_line": 956,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.fnName",
    "snippet": "private final String fnName;",
    "begin_line": 70,
    "end_line": 70,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 71,
    "end_line": 71,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.codingConvention",
    "snippet": "private final CodingConvention codingConvention;",
    "begin_line": 72,
    "end_line": 72,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.typeRegistry",
    "snippet": "private final JSTypeRegistry typeRegistry;",
    "begin_line": 73,
    "end_line": 73,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.errorRoot",
    "snippet": "private final Node errorRoot;",
    "begin_line": 74,
    "end_line": 74,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.sourceName",
    "snippet": "private final String sourceName;",
    "begin_line": 75,
    "end_line": 75,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.scope",
    "snippet": "private final Scope scope;",
    "begin_line": 76,
    "end_line": 76,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.contents",
    "snippet": "private FunctionContents contents \u003d UnknownFunctionContents.get();",
    "begin_line": 78,
    "end_line": 78,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.returnType",
    "snippet": "private JSType returnType \u003d null;",
    "begin_line": 80,
    "end_line": 80,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.returnTypeInferred",
    "snippet": "private boolean returnTypeInferred \u003d false;",
    "begin_line": 81,
    "end_line": 81,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.implementedInterfaces",
    "snippet": "private List\u003cObjectType\u003e implementedInterfaces \u003d null;",
    "begin_line": 82,
    "end_line": 82,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.extendedInterfaces",
    "snippet": "private List\u003cObjectType\u003e extendedInterfaces \u003d null;",
    "begin_line": 83,
    "end_line": 83,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.baseType",
    "snippet": "private ObjectType baseType \u003d null;",
    "begin_line": 84,
    "end_line": 84,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.thisType",
    "snippet": "private JSType thisType \u003d null;",
    "begin_line": 85,
    "end_line": 85,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.isConstructor",
    "snippet": "private boolean isConstructor \u003d false;",
    "begin_line": 86,
    "end_line": 86,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.makesStructs",
    "snippet": "private boolean makesStructs \u003d false;",
    "begin_line": 87,
    "end_line": 87,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.makesDicts",
    "snippet": "private boolean makesDicts \u003d false;",
    "begin_line": 88,
    "end_line": 88,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.isInterface",
    "snippet": "private boolean isInterface \u003d false;",
    "begin_line": 89,
    "end_line": 89,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.parametersNode",
    "snippet": "private Node parametersNode \u003d null;",
    "begin_line": 90,
    "end_line": 90,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.templateTypeNames",
    "snippet": "private ImmutableList\u003cString\u003e templateTypeNames \u003d ImmutableList.of();",
    "begin_line": 91,
    "end_line": 91,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.EXTENDS_WITHOUT_TYPEDEF",
    "snippet": "static final DiagnosticType EXTENDS_WITHOUT_TYPEDEF \u003d DiagnosticType.warning(\n      \"JSC_EXTENDS_WITHOUT_TYPEDEF\",\n      \"@extends used without @constructor or @interface for {0}\");",
    "begin_line": 93,
    "end_line": 95,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.EXTENDS_NON_OBJECT",
    "snippet": "static final DiagnosticType EXTENDS_NON_OBJECT \u003d DiagnosticType.warning(\n      \"JSC_EXTENDS_NON_OBJECT\",\n      \"{0} @extends non-object type {1}\");",
    "begin_line": 97,
    "end_line": 99,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.RESOLVED_TAG_EMPTY",
    "snippet": "static final DiagnosticType RESOLVED_TAG_EMPTY \u003d DiagnosticType.warning(\n      \"JSC_RESOLVED_TAG_EMPTY\",\n      \"Could not resolve type in {0} tag of {1}\");",
    "begin_line": 101,
    "end_line": 103,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.IMPLEMENTS_WITHOUT_CONSTRUCTOR",
    "snippet": "static final DiagnosticType IMPLEMENTS_WITHOUT_CONSTRUCTOR \u003d\n      DiagnosticType.warning(\n          \"JSC_IMPLEMENTS_WITHOUT_CONSTRUCTOR\",\n          \"@implements used without @constructor or @interface for {0}\");",
    "begin_line": 105,
    "end_line": 108,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.CONSTRUCTOR_REQUIRED",
    "snippet": "static final DiagnosticType CONSTRUCTOR_REQUIRED \u003d\n      DiagnosticType.warning(\"JSC_CONSTRUCTOR_REQUIRED\",\n                             \"{0} used without @constructor for {1}\");",
    "begin_line": 110,
    "end_line": 112,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.VAR_ARGS_MUST_BE_LAST",
    "snippet": "static final DiagnosticType VAR_ARGS_MUST_BE_LAST \u003d DiagnosticType.warning(\n      \"JSC_VAR_ARGS_MUST_BE_LAST\",\n      \"variable length argument must be last\");",
    "begin_line": 114,
    "end_line": 116,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.OPTIONAL_ARG_AT_END",
    "snippet": "static final DiagnosticType OPTIONAL_ARG_AT_END \u003d DiagnosticType.warning(\n      \"JSC_OPTIONAL_ARG_AT_END\",\n      \"optional arguments must be at the end\");",
    "begin_line": 118,
    "end_line": 120,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.INEXISTANT_PARAM",
    "snippet": "static final DiagnosticType INEXISTANT_PARAM \u003d DiagnosticType.warning(\n      \"JSC_INEXISTANT_PARAM\",\n      \"parameter {0} does not appear in {1}\u0027\u0027s parameter list\");",
    "begin_line": 122,
    "end_line": 124,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.TYPE_REDEFINITION",
    "snippet": "static final DiagnosticType TYPE_REDEFINITION \u003d DiagnosticType.warning(\n      \"JSC_TYPE_REDEFINITION\",\n      \"attempted re-definition of type {0}\\n\"\n      + \"found   : {1}\\n\"\n      + \"expected: {2}\");",
    "begin_line": 126,
    "end_line": 130,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.TEMPLATE_TYPE_DUPLICATED",
    "snippet": "static final DiagnosticType TEMPLATE_TYPE_DUPLICATED \u003d DiagnosticType.warning(\n      \"JSC_TEMPLATE_TYPE_DUPLICATED\",\n      \"Only one parameter type must be the template type\");",
    "begin_line": 132,
    "end_line": 134,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.TEMPLATE_TYPE_EXPECTED",
    "snippet": "static final DiagnosticType TEMPLATE_TYPE_EXPECTED \u003d DiagnosticType.warning(\n      \"JSC_TEMPLATE_TYPE_EXPECTED\",\n      \"The template type must be a parameter type\");",
    "begin_line": 136,
    "end_line": 138,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.THIS_TYPE_NON_OBJECT",
    "snippet": "static final DiagnosticType THIS_TYPE_NON_OBJECT \u003d\n      DiagnosticType.warning(\n          \"JSC_THIS_TYPE_NON_OBJECT\",\n          \"@this type of a function must be an object\\n\" +\n          \"Actual type: {0}\");",
    "begin_line": 140,
    "end_line": 144,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.singleton",
    "snippet": "private static UnknownFunctionContents singleton \u003d\n        new UnknownFunctionContents();",
    "begin_line": 799,
    "end_line": 800,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.n",
    "snippet": "private final Node n;",
    "begin_line": 843,
    "end_line": 843,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.hasNonEmptyReturns",
    "snippet": "private boolean hasNonEmptyReturns \u003d false;",
    "begin_line": 844,
    "end_line": 844,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.escapedVarNames",
    "snippet": "private Set\u003cString\u003e escapedVarNames;",
    "begin_line": 845,
    "end_line": 845,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.escapedQualifiedNames",
    "snippet": "private Set\u003cString\u003e escapedQualifiedNames;",
    "begin_line": 846,
    "end_line": 846,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "src_path": "com/google/javascript/jscomp/FunctionTypeBuilder.java",
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder.assignedVarNames",
    "snippet": "private final Multiset\u003cString\u003e assignedVarNames \u003d HashMultiset.create();",
    "begin_line": 847,
    "end_line": 847,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.GoogleCodingConvention",
    "src_path": "com/google/javascript/jscomp/GoogleCodingConvention.java",
    "signature": "com.google.javascript.jscomp.GoogleCodingConvention.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 33,
    "end_line": 33,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.GoogleCodingConvention",
    "src_path": "com/google/javascript/jscomp/GoogleCodingConvention.java",
    "signature": "com.google.javascript.jscomp.GoogleCodingConvention.OPTIONAL_ARG_PREFIX",
    "snippet": "private static final String OPTIONAL_ARG_PREFIX \u003d \"opt_\";",
    "begin_line": 35,
    "end_line": 35,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.GoogleCodingConvention",
    "src_path": "com/google/javascript/jscomp/GoogleCodingConvention.java",
    "signature": "com.google.javascript.jscomp.GoogleCodingConvention.VAR_ARGS_NAME",
    "snippet": "private static final String VAR_ARGS_NAME \u003d \"var_args\";",
    "begin_line": 37,
    "end_line": 37,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.GoogleCodingConvention",
    "src_path": "com/google/javascript/jscomp/GoogleCodingConvention.java",
    "signature": "com.google.javascript.jscomp.GoogleCodingConvention.ENUM_KEY_PATTERN",
    "snippet": "private static final Pattern ENUM_KEY_PATTERN \u003d\n    Pattern.compile(\"[A-Z0-9][A-Z0-9_]*\");",
    "begin_line": 39,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.InferJSDocInfo",
    "src_path": "com/google/javascript/jscomp/InferJSDocInfo.java",
    "signature": "com.google.javascript.jscomp.InferJSDocInfo.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 64,
    "end_line": 64,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.InferJSDocInfo",
    "src_path": "com/google/javascript/jscomp/InferJSDocInfo.java",
    "signature": "com.google.javascript.jscomp.InferJSDocInfo.inExterns",
    "snippet": "@SuppressWarnings(\"unused\")\n  private boolean inExterns;",
    "begin_line": 66,
    "end_line": 66,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JSError",
    "src_path": "com/google/javascript/jscomp/JSError.java",
    "signature": "com.google.javascript.jscomp.JSError.type",
    "snippet": "private final DiagnosticType type;",
    "begin_line": 28,
    "end_line": 28,
    "comment": "/** \n * A type of the error \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.JSError",
    "src_path": "com/google/javascript/jscomp/JSError.java",
    "signature": "com.google.javascript.jscomp.JSError.description",
    "snippet": "public final String description;",
    "begin_line": 31,
    "end_line": 31,
    "comment": "/** \n * Description of the error \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.JSError",
    "src_path": "com/google/javascript/jscomp/JSError.java",
    "signature": "com.google.javascript.jscomp.JSError.sourceName",
    "snippet": "public final String sourceName;",
    "begin_line": 34,
    "end_line": 34,
    "comment": "/** \n * Name of the source \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.JSError",
    "src_path": "com/google/javascript/jscomp/JSError.java",
    "signature": "com.google.javascript.jscomp.JSError.node",
    "snippet": "final Node node;",
    "begin_line": 37,
    "end_line": 37,
    "comment": "/** \n * Node where the warning occurred. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.JSError",
    "src_path": "com/google/javascript/jscomp/JSError.java",
    "signature": "com.google.javascript.jscomp.JSError.lineNumber",
    "snippet": "public final int lineNumber;",
    "begin_line": 40,
    "end_line": 40,
    "comment": "/** \n * Line number of the source \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.JSError",
    "src_path": "com/google/javascript/jscomp/JSError.java",
    "signature": "com.google.javascript.jscomp.JSError.level",
    "snippet": "@Deprecated\n  public final CheckLevel level;",
    "begin_line": 44,
    "end_line": 44,
    "comment": "/** \n * @deprecated Use #getDefaultLevel \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.JSError",
    "src_path": "com/google/javascript/jscomp/JSError.java",
    "signature": "com.google.javascript.jscomp.JSError.defaultLevel",
    "snippet": "private final CheckLevel defaultLevel;",
    "begin_line": 46,
    "end_line": 46,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JSError",
    "src_path": "com/google/javascript/jscomp/JSError.java",
    "signature": "com.google.javascript.jscomp.JSError.charno",
    "snippet": "private final int charno;",
    "begin_line": 49,
    "end_line": 49,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsAst",
    "src_path": "com/google/javascript/jscomp/JsAst.java",
    "signature": "com.google.javascript.jscomp.JsAst.logger_",
    "snippet": "private static final Logger logger_ \u003d Logger.getLogger(JsAst.class.getName());",
    "begin_line": 35,
    "end_line": 35,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsAst",
    "src_path": "com/google/javascript/jscomp/JsAst.java",
    "signature": "com.google.javascript.jscomp.JsAst.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 36,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsAst",
    "src_path": "com/google/javascript/jscomp/JsAst.java",
    "signature": "com.google.javascript.jscomp.JsAst.inputId",
    "snippet": "private transient InputId inputId;",
    "begin_line": 38,
    "end_line": 38,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsAst",
    "src_path": "com/google/javascript/jscomp/JsAst.java",
    "signature": "com.google.javascript.jscomp.JsAst.sourceFile",
    "snippet": "private transient SourceFile sourceFile;",
    "begin_line": 39,
    "end_line": 39,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsAst",
    "src_path": "com/google/javascript/jscomp/JsAst.java",
    "signature": "com.google.javascript.jscomp.JsAst.fileName",
    "snippet": "private String fileName;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsAst",
    "src_path": "com/google/javascript/jscomp/JsAst.java",
    "signature": "com.google.javascript.jscomp.JsAst.root",
    "snippet": "private Node root;",
    "begin_line": 41,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.MSG_FUNCTION_NAME",
    "snippet": "private static final String MSG_FUNCTION_NAME \u003d \"goog.getMsg\";",
    "begin_line": 44,
    "end_line": 44,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.MSG_FALLBACK_FUNCTION_NAME",
    "snippet": "private static final String MSG_FALLBACK_FUNCTION_NAME \u003d\n      \"goog.getMsgWithFallback\";",
    "begin_line": 45,
    "end_line": 46,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.MESSAGE_HAS_NO_DESCRIPTION",
    "snippet": "static final DiagnosticType MESSAGE_HAS_NO_DESCRIPTION \u003d\n      DiagnosticType.warning(\"JSC_MSG_HAS_NO_DESCRIPTION\",\n          \"Message {0} has no description. Add @desc JsDoc tag.\");",
    "begin_line": 48,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.MESSAGE_HAS_NO_TEXT",
    "snippet": "static final DiagnosticType MESSAGE_HAS_NO_TEXT \u003d\n      DiagnosticType.warning(\"JSC_MSG_HAS_NO_TEXT\",\n          \"Message value of {0} is just an empty string. \"\n              + \"Empty messages are forbidden.\" );",
    "begin_line": 52,
    "end_line": 55,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.MESSAGE_TREE_MALFORMED",
    "snippet": "static final DiagnosticType MESSAGE_TREE_MALFORMED \u003d\n      DiagnosticType.error(\"JSC_MSG_TREE_MALFORMED\",\n          \"Message parse tree malformed. {0}\");",
    "begin_line": 57,
    "end_line": 59,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.MESSAGE_HAS_NO_VALUE",
    "snippet": "static final DiagnosticType MESSAGE_HAS_NO_VALUE \u003d\n      DiagnosticType.error(\"JSC_MSG_HAS_NO_VALUE\",\n          \"message node {0} has no value\");",
    "begin_line": 61,
    "end_line": 63,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.MESSAGE_DUPLICATE_KEY",
    "snippet": "static final DiagnosticType MESSAGE_DUPLICATE_KEY \u003d\n      DiagnosticType.error(\"JSC_MSG_KEY_DUPLICATED\",\n          \"duplicate message variable name found for {0}, \" +\n              \"initial definition {1}:{2}\");",
    "begin_line": 65,
    "end_line": 68,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.MESSAGE_NODE_IS_ORPHANED",
    "snippet": "static final DiagnosticType MESSAGE_NODE_IS_ORPHANED \u003d\n      DiagnosticType.warning(\"JSC_MSG_ORPHANED_NODE\", MSG_FUNCTION_NAME +\n          \"() function could be used only with MSG_* property or variable\");",
    "begin_line": 70,
    "end_line": 72,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.MESSAGE_NOT_INITIALIZED_USING_NEW_SYNTAX",
    "snippet": "static final DiagnosticType MESSAGE_NOT_INITIALIZED_USING_NEW_SYNTAX \u003d\n      DiagnosticType.error(\"JSC_MSG_NOT_INITIALIZED_USING_NEW_SYNTAX\",\n          \"message not initialized using \" + MSG_FUNCTION_NAME);",
    "begin_line": 74,
    "end_line": 76,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.BAD_FALLBACK_SYNTAX",
    "snippet": "static final DiagnosticType BAD_FALLBACK_SYNTAX \u003d\n      DiagnosticType.error(\"JSC_MSG_BAD_FALLBACK_SYNTAX\",\n          String.format(\n              \"Bad syntax. \" +\n              \"Expected syntax: goog.getMsgWithFallback(MSG_1, MSG_2)\",\n              MSG_FALLBACK_FUNCTION_NAME));",
    "begin_line": 78,
    "end_line": 83,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.FALLBACK_ARG_ERROR",
    "snippet": "static final DiagnosticType FALLBACK_ARG_ERROR \u003d\n      DiagnosticType.error(\"JSC_MSG_FALLBACK_ARG_ERROR\",\n          \"Could not find message entry for fallback argument {0}\");",
    "begin_line": 85,
    "end_line": 87,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.PH_JS_PREFIX",
    "snippet": "private static final String PH_JS_PREFIX \u003d \"{$\";",
    "begin_line": 89,
    "end_line": 89,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.PH_JS_SUFFIX",
    "snippet": "private static final String PH_JS_SUFFIX \u003d \"}\";",
    "begin_line": 90,
    "end_line": 90,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.MSG_PREFIX",
    "snippet": "static final String MSG_PREFIX \u003d \"MSG_\";",
    "begin_line": 92,
    "end_line": 92,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.MSG_UNNAMED_PATTERN",
    "snippet": "private static final Pattern MSG_UNNAMED_PATTERN \u003d\n      Pattern.compile(\"MSG_UNNAMED_\\\\d+\");",
    "begin_line": 106,
    "end_line": 107,
    "comment": "/** \n * Pattern for unnamed messages. \u003cp\u003e All JS messages in JS code should have unique name but messages in generated code (i.e. from soy template) could have duplicated message names. Later we replace the message names with ids constructed as a hash of the message content. \u003cp\u003e \u003clink href\u003d\"http://code.google.com/p/closure-templates/\"\u003e Soy\u003c/link\u003e generates messages with names MSG_UNNAMED_\u003cNUMBER\u003e . This pattern recognizes such messages.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.CAMELCASE_PATTERN",
    "snippet": "private static final Pattern CAMELCASE_PATTERN \u003d\n      Pattern.compile(\"[a-z][a-zA-Z\\\\d]*[_\\\\d]*\");",
    "begin_line": 109,
    "end_line": 110,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.HIDDEN_DESC_PREFIX",
    "snippet": "static final String HIDDEN_DESC_PREFIX \u003d \"@hidden\";",
    "begin_line": 112,
    "end_line": 112,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.DESC_SUFFIX",
    "snippet": "private static final String DESC_SUFFIX \u003d \"_HELP\";",
    "begin_line": 115,
    "end_line": 115,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.needToCheckDuplications",
    "snippet": "private final boolean needToCheckDuplications;",
    "begin_line": 117,
    "end_line": 117,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.style",
    "snippet": "private final JsMessage.Style style;",
    "begin_line": 118,
    "end_line": 118,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.idGenerator",
    "snippet": "private final JsMessage.IdGenerator idGenerator;",
    "begin_line": 119,
    "end_line": 119,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.compiler",
    "snippet": "final AbstractCompiler compiler;",
    "begin_line": 120,
    "end_line": 120,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.messageNames",
    "snippet": "private final Map\u003cString, MessageLocation\u003e messageNames \u003d\n      Maps.newHashMap();",
    "begin_line": 126,
    "end_line": 127,
    "comment": "/** \n * The names encountered associated with their defining node and source. We use it for tracking duplicated message ids in the source code.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.unnamedMessages",
    "snippet": "private final Map\u003cVar, JsMessage\u003e unnamedMessages \u003d\n      Maps.newHashMap();",
    "begin_line": 129,
    "end_line": 130,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.googMsgNodes",
    "snippet": "private final Map\u003cNode, String\u003e googMsgNodes \u003d Maps.newHashMap();",
    "begin_line": 140,
    "end_line": 140,
    "comment": "/** \n * List of found goog.getMsg call nodes. When we visit goog.getMsg() node we add a pair node:sourcename and later when we visit its parent we remove this pair. All nodes that are left at the end of traversing are orphaned nodes. It means have no corresponding var or property node.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.checkLevel",
    "snippet": "private final CheckLevel checkLevel;",
    "begin_line": 142,
    "end_line": 142,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 920,
    "end_line": 920,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.node",
    "snippet": "private final Node node;",
    "begin_line": 922,
    "end_line": 922,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.message",
    "snippet": "private final JsMessage message;",
    "begin_line": 935,
    "end_line": 935,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.JsMessageVisitor",
    "src_path": "com/google/javascript/jscomp/JsMessageVisitor.java",
    "signature": "com.google.javascript.jscomp.JsMessageVisitor.messageNode",
    "snippet": "private final Node messageNode;",
    "begin_line": 936,
    "end_line": 936,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LightweightMessageFormatter",
    "src_path": "com/google/javascript/jscomp/LightweightMessageFormatter.java",
    "signature": "com.google.javascript.jscomp.LightweightMessageFormatter.excerpt",
    "snippet": "private SourceExcerpt excerpt;",
    "begin_line": 32,
    "end_line": 32,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LightweightMessageFormatter",
    "src_path": "com/google/javascript/jscomp/LightweightMessageFormatter.java",
    "signature": "com.google.javascript.jscomp.LightweightMessageFormatter.excerptFormatter",
    "snippet": "private static final ExcerptFormatter excerptFormatter \u003d\n      new LineNumberingFormatter();",
    "begin_line": 33,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LinkedFlowScope",
    "src_path": "com/google/javascript/jscomp/LinkedFlowScope.java",
    "signature": "com.google.javascript.jscomp.LinkedFlowScope.cache",
    "snippet": "private final FlatFlowScopeCache cache;",
    "begin_line": 43,
    "end_line": 43,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LinkedFlowScope",
    "src_path": "com/google/javascript/jscomp/LinkedFlowScope.java",
    "signature": "com.google.javascript.jscomp.LinkedFlowScope.parent",
    "snippet": "private final LinkedFlowScope parent;",
    "begin_line": 46,
    "end_line": 46,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LinkedFlowScope",
    "src_path": "com/google/javascript/jscomp/LinkedFlowScope.java",
    "signature": "com.google.javascript.jscomp.LinkedFlowScope.depth",
    "snippet": "private int depth;",
    "begin_line": 49,
    "end_line": 49,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LinkedFlowScope",
    "src_path": "com/google/javascript/jscomp/LinkedFlowScope.java",
    "signature": "com.google.javascript.jscomp.LinkedFlowScope.MAX_DEPTH",
    "snippet": "static final int MAX_DEPTH \u003d 250;",
    "begin_line": 51,
    "end_line": 51,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LinkedFlowScope",
    "src_path": "com/google/javascript/jscomp/LinkedFlowScope.java",
    "signature": "com.google.javascript.jscomp.LinkedFlowScope.flattened",
    "snippet": "private FlatFlowScopeCache flattened;",
    "begin_line": 54,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LinkedFlowScope",
    "src_path": "com/google/javascript/jscomp/LinkedFlowScope.java",
    "signature": "com.google.javascript.jscomp.LinkedFlowScope.frozen",
    "snippet": "private boolean frozen \u003d false;",
    "begin_line": 58,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LinkedFlowScope",
    "src_path": "com/google/javascript/jscomp/LinkedFlowScope.java",
    "signature": "com.google.javascript.jscomp.LinkedFlowScope.lastSlot",
    "snippet": "private LinkedFlowSlot lastSlot;",
    "begin_line": 62,
    "end_line": 62,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LinkedFlowScope",
    "src_path": "com/google/javascript/jscomp/LinkedFlowScope.java",
    "signature": "com.google.javascript.jscomp.LinkedFlowScope.parent",
    "snippet": "final LinkedFlowSlot parent;",
    "begin_line": 368,
    "end_line": 368,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LinkedFlowScope",
    "src_path": "com/google/javascript/jscomp/LinkedFlowScope.java",
    "signature": "com.google.javascript.jscomp.LinkedFlowScope.functionScope",
    "snippet": "private final Scope functionScope;",
    "begin_line": 382,
    "end_line": 382,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LinkedFlowScope",
    "src_path": "com/google/javascript/jscomp/LinkedFlowScope.java",
    "signature": "com.google.javascript.jscomp.LinkedFlowScope.linkedEquivalent",
    "snippet": "private final LinkedFlowScope linkedEquivalent;",
    "begin_line": 385,
    "end_line": 385,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LinkedFlowScope",
    "src_path": "com/google/javascript/jscomp/LinkedFlowScope.java",
    "signature": "com.google.javascript.jscomp.LinkedFlowScope.symbols",
    "snippet": "private Map\u003cString, StaticSlot\u003cJSType\u003e\u003e symbols \u003d Maps.newHashMap();",
    "begin_line": 389,
    "end_line": 389,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LinkedFlowScope",
    "src_path": "com/google/javascript/jscomp/LinkedFlowScope.java",
    "signature": "com.google.javascript.jscomp.LinkedFlowScope.dirtySymbols",
    "snippet": "final Set\u003cString\u003e dirtySymbols \u003d Sets.newHashSet();",
    "begin_line": 399,
    "end_line": 399,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LoggerErrorManager",
    "src_path": "com/google/javascript/jscomp/LoggerErrorManager.java",
    "signature": "com.google.javascript.jscomp.LoggerErrorManager.formatter",
    "snippet": "private final MessageFormatter formatter;",
    "begin_line": 31,
    "end_line": 31,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.LoggerErrorManager",
    "src_path": "com/google/javascript/jscomp/LoggerErrorManager.java",
    "signature": "com.google.javascript.jscomp.LoggerErrorManager.logger",
    "snippet": "private final Logger logger;",
    "begin_line": 32,
    "end_line": 32,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.MemoizedScopeCreator",
    "src_path": "com/google/javascript/jscomp/MemoizedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.MemoizedScopeCreator.scopes",
    "snippet": "private final Map\u003cNode, Scope\u003e scopes \u003d Maps.newHashMap();",
    "begin_line": 49,
    "end_line": 49,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.MemoizedScopeCreator",
    "src_path": "com/google/javascript/jscomp/MemoizedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.MemoizedScopeCreator.delegate",
    "snippet": "private final ScopeCreator delegate;",
    "begin_line": 50,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.callback",
    "snippet": "private final Callback callback;",
    "begin_line": 41,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.curNode",
    "snippet": "private Node curNode;",
    "begin_line": 44,
    "end_line": 44,
    "comment": "/** \n * Contains the current node\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.NODE_TRAVERSAL_ERROR",
    "snippet": "public static final DiagnosticType NODE_TRAVERSAL_ERROR \u003d\n      DiagnosticType.error(\"JSC_NODE_TRAVERSAL_ERROR\", \"{0}\");",
    "begin_line": 46,
    "end_line": 47,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.scopes",
    "snippet": "private final Deque\u003cScope\u003e scopes \u003d new ArrayDeque\u003cScope\u003e();",
    "begin_line": 54,
    "end_line": 54,
    "comment": "/** \n * Stack containing the Scopes that have been created. The Scope objects are lazily created; so the  {@code scopeRoots} stack contains theNodes for all Scopes that have not been created yet.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.scopeRoots",
    "snippet": "private final Deque\u003cNode\u003e scopeRoots \u003d new ArrayDeque\u003cNode\u003e();",
    "begin_line": 60,
    "end_line": 60,
    "comment": "/** \n * A stack of scope roots. All scopes that have not been created are represented in this Deque.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.cfgs",
    "snippet": " Deque\u003cControlFlowGraph\u003cNode\u003e\u003e cfgs \u003d new LinkedList\u003cControlFlowGraph\u003cNode\u003e\u003e();",
    "begin_line": 69,
    "end_line": 69,
    "comment": "/** \n * Stack of control flow graphs (CFG). There is one CFG per scope. CFGs are lazily populated: elements are  {@code null} until requested by{@link #getControlFlowGraph()}. Note that  {@link ArrayDeque} does not allow{@code null} elements, so {@link LinkedList} is used instead.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.sourceName",
    "snippet": "private String sourceName;",
    "begin_line": 72,
    "end_line": 72,
    "comment": "/** \n * The current source file name \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.inputId",
    "snippet": "private InputId inputId;",
    "begin_line": 75,
    "end_line": 75,
    "comment": "/** \n * The current input \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.scopeCreator",
    "snippet": "private ScopeCreator scopeCreator;",
    "begin_line": 78,
    "end_line": 78,
    "comment": "/** \n * The scope creator \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.scopeCallback",
    "snippet": "private ScopedCallback scopeCallback;",
    "begin_line": 81,
    "end_line": 81,
    "comment": "/** \n * Possible callback for scope entry and exist \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.nodeTypes",
    "snippet": "private final Set\u003cInteger\u003e nodeTypes;",
    "begin_line": 189,
    "end_line": 189,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.include",
    "snippet": "private final boolean include;",
    "begin_line": 190,
    "end_line": 190,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeTraversal",
    "src_path": "com/google/javascript/jscomp/NodeTraversal.java",
    "signature": "com.google.javascript.jscomp.NodeTraversal.MISSING_SOURCE",
    "snippet": "private static final String MISSING_SOURCE \u003d \"[source unknown]\";",
    "begin_line": 313,
    "end_line": 313,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.MAX_POSITIVE_INTEGER_NUMBER",
    "snippet": "static final long MAX_POSITIVE_INTEGER_NUMBER \u003d (long) Math.pow(2, 53);",
    "begin_line": 50,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.JSC_PROPERTY_NAME_FN",
    "snippet": "static final String JSC_PROPERTY_NAME_FN \u003d \"JSCompiler_renameProperty\";",
    "begin_line": 52,
    "end_line": 52,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.LARGEST_BASIC_LATIN",
    "snippet": "static final char LARGEST_BASIC_LATIN \u003d 0x7f;",
    "begin_line": 54,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.CONSTRUCTORS_WITHOUT_SIDE_EFFECTS",
    "snippet": "private static final Set\u003cString\u003e CONSTRUCTORS_WITHOUT_SIDE_EFFECTS \u003d\n      new HashSet\u003cString\u003e(Arrays.asList(\n        \"Array\",\n        \"Date\",\n        \"Error\",\n        \"Object\",\n        \"RegExp\",\n        \"XMLHttpRequest\"));",
    "begin_line": 57,
    "end_line": 64,
    "comment": "/** \n * the set of builtin constructors that don\u0027t have side effects. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS",
    "snippet": "private static final Set\u003cString\u003e BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS \u003d\n      ImmutableSet.of(\n          \"Object\", \"Array\", \"String\", \"Number\", \"Boolean\", \"RegExp\", \"Error\");",
    "begin_line": 972,
    "end_line": 974,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.OBJECT_METHODS_WITHOUT_SIDEEFFECTS",
    "snippet": "private static final Set\u003cString\u003e OBJECT_METHODS_WITHOUT_SIDEEFFECTS \u003d\n      ImmutableSet.of(\"toString\", \"valueOf\");",
    "begin_line": 975,
    "end_line": 976,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.REGEXP_METHODS",
    "snippet": "private static final Set\u003cString\u003e REGEXP_METHODS \u003d\n      ImmutableSet.of(\"test\", \"exec\");",
    "begin_line": 977,
    "end_line": 978,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.STRING_REGEXP_METHODS",
    "snippet": "private static final Set\u003cString\u003e STRING_REGEXP_METHODS \u003d\n      ImmutableSet.of(\"match\", \"replace\", \"search\", \"split\");",
    "begin_line": 979,
    "end_line": 980,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.NUMBERIC_RESULT_PREDICATE",
    "snippet": "static final NumbericResultPredicate NUMBERIC_RESULT_PREDICATE \u003d\n      new NumbericResultPredicate();",
    "begin_line": 1317,
    "end_line": 1318,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.BOOLEAN_RESULT_PREDICATE",
    "snippet": "static final BooleanResultPredicate BOOLEAN_RESULT_PREDICATE \u003d\n      new BooleanResultPredicate();",
    "begin_line": 1370,
    "end_line": 1371,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.MAY_BE_STRING_PREDICATE",
    "snippet": "static final MayBeStringResultPredicate MAY_BE_STRING_PREDICATE \u003d\n      new MayBeStringResultPredicate();",
    "begin_line": 1416,
    "end_line": 1417,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.vars",
    "snippet": "final Map\u003cString, Node\u003e vars \u003d Maps.newLinkedHashMap();",
    "begin_line": 2470,
    "end_line": 2470,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.name",
    "snippet": "final String name;",
    "begin_line": 2577,
    "end_line": 2577,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.type",
    "snippet": "final int type;",
    "begin_line": 2593,
    "end_line": 2593,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.NodeUtil",
    "src_path": "com/google/javascript/jscomp/NodeUtil.java",
    "signature": "com.google.javascript.jscomp.NodeUtil.MATCH_NOT_FUNCTION",
    "snippet": "static final Predicate\u003cNode\u003e MATCH_NOT_FUNCTION \u003d new MatchNotFunction();",
    "begin_line": 2626,
    "end_line": 2626,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.PassFactory",
    "src_path": "com/google/javascript/jscomp/PassFactory.java",
    "signature": "com.google.javascript.jscomp.PassFactory.name",
    "snippet": "private final String name;",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.PassFactory",
    "src_path": "com/google/javascript/jscomp/PassFactory.java",
    "signature": "com.google.javascript.jscomp.PassFactory.isOneTimePass",
    "snippet": "private final boolean isOneTimePass;",
    "begin_line": 30,
    "end_line": 30,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.PrepareAst",
    "src_path": "com/google/javascript/jscomp/PrepareAst.java",
    "signature": "com.google.javascript.jscomp.PrepareAst.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 36,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.PrepareAst",
    "src_path": "com/google/javascript/jscomp/PrepareAst.java",
    "signature": "com.google.javascript.jscomp.PrepareAst.checkOnly",
    "snippet": "private final boolean checkOnly;",
    "begin_line": 37,
    "end_line": 37,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.KNOWN_DEFINES",
    "snippet": "private static final Set\u003cString\u003e KNOWN_DEFINES \u003d\n      Sets.newHashSet(\"COMPILED\");",
    "begin_line": 54,
    "end_line": 55,
    "comment": "/** \n * Defines in this set will not be flagged with \"unknown define\" warnings. There are legacy flags that always set these defines, even when they might not be in the binary.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 57,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.dominantReplacements",
    "snippet": "private final Map\u003cString, Node\u003e dominantReplacements;",
    "begin_line": 58,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.namespace",
    "snippet": "private GlobalNamespace namespace \u003d null;",
    "begin_line": 60,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.UNKNOWN_DEFINE_WARNING",
    "snippet": "static final DiagnosticType UNKNOWN_DEFINE_WARNING \u003d DiagnosticType.warning(\n      \"JSC_UNKNOWN_DEFINE_WARNING\",\n      \"unknown @define variable {0}\");",
    "begin_line": 63,
    "end_line": 65,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.INVALID_DEFINE_TYPE_ERROR",
    "snippet": "static final DiagnosticType INVALID_DEFINE_TYPE_ERROR \u003d\n    DiagnosticType.error(\n        \"JSC_INVALID_DEFINE_TYPE_ERROR\",\n        \"@define tag only permits literal types\");",
    "begin_line": 68,
    "end_line": 71,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.INVALID_DEFINE_INIT_ERROR",
    "snippet": "static final DiagnosticType INVALID_DEFINE_INIT_ERROR \u003d\n      DiagnosticType.error(\n          \"JSC_INVALID_DEFINE_INIT_ERROR\",\n          \"illegal initialization of @define variable {0}\");",
    "begin_line": 73,
    "end_line": 76,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.NON_GLOBAL_DEFINE_INIT_ERROR",
    "snippet": "static final DiagnosticType NON_GLOBAL_DEFINE_INIT_ERROR \u003d\n      DiagnosticType.error(\n          \"JSC_NON_GLOBAL_DEFINE_INIT_ERROR\",\n          \"@define variable {0} assignment must be global\");",
    "begin_line": 78,
    "end_line": 81,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.DEFINE_NOT_ASSIGNABLE_ERROR",
    "snippet": "static final DiagnosticType DEFINE_NOT_ASSIGNABLE_ERROR \u003d\n      DiagnosticType.error(\n          \"JSC_DEFINE_NOT_ASSIGNABLE_ERROR\",\n          \"@define variable {0} cannot be reassigned due to code at {1}.\");",
    "begin_line": 83,
    "end_line": 86,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.REASON_DEFINE_NOT_ASSIGNABLE",
    "snippet": "private static final MessageFormat REASON_DEFINE_NOT_ASSIGNABLE \u003d\n      new MessageFormat(\"line {0} of {1}\");",
    "begin_line": 88,
    "end_line": 89,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 223,
    "end_line": 223,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.assignableDefines",
    "snippet": "private final Map\u003cString, DefineInfo\u003e assignableDefines;",
    "begin_line": 224,
    "end_line": 224,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.allDefines",
    "snippet": "private final Map\u003cString, DefineInfo\u003e allDefines;",
    "begin_line": 225,
    "end_line": 225,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.allRefInfo",
    "snippet": "private final Map\u003cNode, RefInfo\u003e allRefInfo;",
    "begin_line": 226,
    "end_line": 226,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.lvalueToRemoveLater",
    "snippet": "private Node lvalueToRemoveLater \u003d null;",
    "begin_line": 230,
    "end_line": 230,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.assignAllowed",
    "snippet": "private final Deque\u003cInteger\u003e assignAllowed;",
    "begin_line": 235,
    "end_line": 235,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.ref",
    "snippet": "final Ref ref;",
    "begin_line": 477,
    "end_line": 477,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.name",
    "snippet": "final Name name;",
    "begin_line": 478,
    "end_line": 478,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.initialValueParent",
    "snippet": "public final Node initialValueParent;",
    "begin_line": 493,
    "end_line": 493,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.initialValue",
    "snippet": "public final Node initialValue;",
    "begin_line": 494,
    "end_line": 494,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.lastValue",
    "snippet": "private Node lastValue;",
    "begin_line": 495,
    "end_line": 495,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.isAssignable",
    "snippet": "private boolean isAssignable;",
    "begin_line": 496,
    "end_line": 496,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessDefines",
    "src_path": "com/google/javascript/jscomp/ProcessDefines.java",
    "signature": "com.google.javascript.jscomp.ProcessDefines.reasonNotAssignable",
    "snippet": "private String reasonNotAssignable;",
    "begin_line": 497,
    "end_line": 497,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 52,
    "end_line": 52,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.stripTweaks",
    "snippet": "private final boolean stripTweaks;",
    "begin_line": 53,
    "end_line": 53,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.compilerDefaultValueOverrides",
    "snippet": "private final SortedMap\u003cString, Node\u003e compilerDefaultValueOverrides;",
    "begin_line": 54,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.ID_MATCHER",
    "snippet": "private static final CharMatcher ID_MATCHER \u003d CharMatcher.inRange(\u0027a\u0027, \u0027z\u0027).\n      or(CharMatcher.inRange(\u0027A\u0027, \u0027Z\u0027)).or(CharMatcher.anyOf(\"0123456789_.\"));",
    "begin_line": 56,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.UNKNOWN_TWEAK_WARNING",
    "snippet": "static final DiagnosticType UNKNOWN_TWEAK_WARNING \u003d\n      DiagnosticType.warning(\n          \"JSC_UNKNOWN_TWEAK_WARNING\",\n          \"no tweak registered with ID {0}\");",
    "begin_line": 60,
    "end_line": 63,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.TWEAK_MULTIPLY_REGISTERED_ERROR",
    "snippet": "static final DiagnosticType TWEAK_MULTIPLY_REGISTERED_ERROR \u003d\n      DiagnosticType.error(\n          \"JSC_TWEAK_MULTIPLY_REGISTERED_ERROR\",\n          \"Tweak {0} has already been registered.\");",
    "begin_line": 65,
    "end_line": 68,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.NON_LITERAL_TWEAK_ID_ERROR",
    "snippet": "static final DiagnosticType NON_LITERAL_TWEAK_ID_ERROR \u003d\n      DiagnosticType.error(\n          \"JSC_NON_LITERAL_TWEAK_ID_ERROR\",\n          \"tweak ID must be a string literal\");",
    "begin_line": 70,
    "end_line": 73,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.INVALID_TWEAK_DEFAULT_VALUE_WARNING",
    "snippet": "static final DiagnosticType INVALID_TWEAK_DEFAULT_VALUE_WARNING \u003d\n      DiagnosticType.warning(\n          \"JSC_INVALID_TWEAK_DEFAULT_VALUE_WARNING\",\n          \"tweak {0} registered with {1} must have a default value that is a \" +\n          \"literal of type {2}\");",
    "begin_line": 75,
    "end_line": 79,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.NON_GLOBAL_TWEAK_INIT_ERROR",
    "snippet": "static final DiagnosticType NON_GLOBAL_TWEAK_INIT_ERROR \u003d\n      DiagnosticType.error(\n          \"JSC_NON_GLOBAL_TWEAK_INIT_ERROR\",\n          \"tweak declaration {0} must occur in the global scope\");",
    "begin_line": 81,
    "end_line": 84,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR",
    "snippet": "static final DiagnosticType TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR \u003d\n      DiagnosticType.error(\n          \"JSC_TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR\",\n          \"Cannot override the default value of tweak {0} after it has been \" +\n          \"registered\");",
    "begin_line": 86,
    "end_line": 90,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.TWEAK_WRONG_GETTER_TYPE_WARNING",
    "snippet": "static final DiagnosticType TWEAK_WRONG_GETTER_TYPE_WARNING \u003d\n      DiagnosticType.warning(\n          \"JSC_TWEAK_WRONG_GETTER_TYPE_WARNING\",\n          \"tweak getter function {0} used for tweak registered using {1}\");",
    "begin_line": 92,
    "end_line": 95,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.INVALID_TWEAK_ID_ERROR",
    "snippet": "static final DiagnosticType INVALID_TWEAK_ID_ERROR \u003d\n      DiagnosticType.error(\n          \"JSC_INVALID_TWEAK_ID_ERROR\",\n          \"tweak ID contains illegal characters. Only letters, numbers, _ \" +\n          \"and . are allowed\");",
    "begin_line": 97,
    "end_line": 101,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.name",
    "snippet": "final String name;",
    "begin_line": 117,
    "end_line": 117,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.expectedTypeName",
    "snippet": "final String expectedTypeName;",
    "begin_line": 118,
    "end_line": 118,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.validNodeTypeA",
    "snippet": "final int validNodeTypeA;",
    "begin_line": 119,
    "end_line": 119,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.validNodeTypeB",
    "snippet": "final int validNodeTypeB;",
    "begin_line": 120,
    "end_line": 120,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.registerFunction",
    "snippet": "final TweakFunction registerFunction;",
    "begin_line": 121,
    "end_line": 121,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.TWEAK_FUNCTIONS_MAP",
    "snippet": "private static final Map\u003cString, TweakFunction\u003e TWEAK_FUNCTIONS_MAP;",
    "begin_line": 186,
    "end_line": 186,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.tweakInfos",
    "snippet": "final Map\u003cString, TweakInfo\u003e tweakInfos;",
    "begin_line": 323,
    "end_line": 323,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.getOverridesCalls",
    "snippet": "final List\u003cTweakFunctionCall\u003e getOverridesCalls;",
    "begin_line": 324,
    "end_line": 324,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.allTweaks",
    "snippet": "final Map\u003cString, TweakInfo\u003e allTweaks \u003d Maps.newHashMap();",
    "begin_line": 337,
    "end_line": 337,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.getOverridesCalls",
    "snippet": "final List\u003cTweakFunctionCall\u003e getOverridesCalls \u003d Lists.newArrayList();",
    "begin_line": 338,
    "end_line": 338,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.sourceName",
    "snippet": "final String sourceName;",
    "begin_line": 430,
    "end_line": 430,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.tweakFunc",
    "snippet": "final TweakFunction tweakFunc;",
    "begin_line": 431,
    "end_line": 431,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.callNode",
    "snippet": "final Node callNode;",
    "begin_line": 432,
    "end_line": 432,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.valueNode",
    "snippet": "final Node valueNode;",
    "begin_line": 433,
    "end_line": 433,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.tweakId",
    "snippet": "final String tweakId;",
    "begin_line": 457,
    "end_line": 457,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.functionCalls",
    "snippet": "final List\u003cTweakFunctionCall\u003e functionCalls;",
    "begin_line": 458,
    "end_line": 458,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.registerCall",
    "snippet": " TweakFunctionCall registerCall;",
    "begin_line": 459,
    "end_line": 459,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.ProcessTweaks",
    "src_path": "com/google/javascript/jscomp/ProcessTweaks.java",
    "signature": "com.google.javascript.jscomp.ProcessTweaks.defaultValueNode",
    "snippet": " Node defaultValueNode;",
    "begin_line": 460,
    "end_line": 460,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.RhinoErrorReporter",
    "src_path": "com/google/javascript/jscomp/RhinoErrorReporter.java",
    "signature": "com.google.javascript.jscomp.RhinoErrorReporter.PARSE_ERROR",
    "snippet": "static final DiagnosticType PARSE_ERROR \u003d\n      DiagnosticType.error(\"JSC_PARSE_ERROR\", \"Parse error. {0}\");",
    "begin_line": 34,
    "end_line": 35,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.RhinoErrorReporter",
    "src_path": "com/google/javascript/jscomp/RhinoErrorReporter.java",
    "signature": "com.google.javascript.jscomp.RhinoErrorReporter.TYPE_PARSE_ERROR",
    "snippet": "static final DiagnosticType TYPE_PARSE_ERROR \u003d\n      DiagnosticType.warning(\"JSC_TYPE_PARSE_ERROR\", \"{0}\");",
    "begin_line": 37,
    "end_line": 38,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.RhinoErrorReporter",
    "src_path": "com/google/javascript/jscomp/RhinoErrorReporter.java",
    "signature": "com.google.javascript.jscomp.RhinoErrorReporter.TRAILING_COMMA",
    "snippet": "static final DiagnosticType TRAILING_COMMA \u003d\n      DiagnosticType.error(\"JSC_TRAILING_COMMA\",\n          \"Parse error. IE8 (and below) will parse trailing commas in \" +\n          \"array and object literals incorrectly. \" +\n          \"If you are targeting newer versions of JS, \" +\n          \"set the appropriate language_in option.\");",
    "begin_line": 42,
    "end_line": 47,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.RhinoErrorReporter",
    "src_path": "com/google/javascript/jscomp/RhinoErrorReporter.java",
    "signature": "com.google.javascript.jscomp.RhinoErrorReporter.DUPLICATE_PARAM",
    "snippet": "static final DiagnosticType DUPLICATE_PARAM \u003d\n      DiagnosticType.error(\"JSC_DUPLICATE_PARAM\", \"Parse error. {0}\");",
    "begin_line": 49,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.RhinoErrorReporter",
    "src_path": "com/google/javascript/jscomp/RhinoErrorReporter.java",
    "signature": "com.google.javascript.jscomp.RhinoErrorReporter.BAD_JSDOC_ANNOTATION",
    "snippet": "static final DiagnosticType BAD_JSDOC_ANNOTATION \u003d\n      DiagnosticType.warning(\"JSC_BAD_JSDOC_ANNOTATION\", \"Parse error. {0}\");",
    "begin_line": 52,
    "end_line": 53,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.RhinoErrorReporter",
    "src_path": "com/google/javascript/jscomp/RhinoErrorReporter.java",
    "signature": "com.google.javascript.jscomp.RhinoErrorReporter.MISPLACED_TYPE_ANNOTATION",
    "snippet": "static final DiagnosticType MISPLACED_TYPE_ANNOTATION \u003d\n      DiagnosticType.warning(\"JSC_MISPLACED_TYPE_ANNOTATION\",\n          \"Type annotations are not allowed here. \" +\n          \"Are you missing parentheses?\");",
    "begin_line": 55,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.RhinoErrorReporter",
    "src_path": "com/google/javascript/jscomp/RhinoErrorReporter.java",
    "signature": "com.google.javascript.jscomp.RhinoErrorReporter.typeMap",
    "snippet": "private final Map\u003cPattern, DiagnosticType\u003e typeMap;",
    "begin_line": 61,
    "end_line": 61,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.RhinoErrorReporter",
    "src_path": "com/google/javascript/jscomp/RhinoErrorReporter.java",
    "signature": "com.google.javascript.jscomp.RhinoErrorReporter.compiler",
    "snippet": "final AbstractCompiler compiler;",
    "begin_line": 63,
    "end_line": 63,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.vars",
    "snippet": "private final Map\u003cString, Var\u003e vars \u003d new LinkedHashMap\u003cString, Var\u003e();",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.parent",
    "snippet": "private final Scope parent;",
    "begin_line": 57,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.depth",
    "snippet": "private final int depth;",
    "begin_line": 58,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.rootNode",
    "snippet": "private final Node rootNode;",
    "begin_line": 59,
    "end_line": 59,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.isBottom",
    "snippet": "private final boolean isBottom;",
    "begin_line": 62,
    "end_line": 62,
    "comment": "/** \n * Whether this is a bottom scope for the purposes of type inference. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.arguments",
    "snippet": "private Var arguments;",
    "begin_line": 64,
    "end_line": 64,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.DECLARATIVELY_UNBOUND_VARS_WITHOUT_TYPES",
    "snippet": "private static final Predicate\u003cVar\u003e DECLARATIVELY_UNBOUND_VARS_WITHOUT_TYPES \u003d\n      new Predicate\u003cVar\u003e() {\n    @Override public boolean apply(Var var) {\n      return var.getParentNode() !\u003d null \u0026\u0026\n          var.getType() \u003d\u003d null \u0026\u0026 // no declared type\n          var.getParentNode().isVar() \u0026\u0026\n          !var.isExtern();\n    }\n  };",
    "begin_line": 66,
    "end_line": 74,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.name",
    "snippet": "final String name;",
    "begin_line": 80,
    "end_line": 80,
    "comment": "/** \n * name \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.nameNode",
    "snippet": "final Node nameNode;",
    "begin_line": 83,
    "end_line": 83,
    "comment": "/** \n * Var node \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.type",
    "snippet": "private JSType type;",
    "begin_line": 88,
    "end_line": 88,
    "comment": "/** \n * The variable\u0027s type.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.typeInferred",
    "snippet": "private final boolean typeInferred;",
    "begin_line": 95,
    "end_line": 95,
    "comment": "/** \n * Whether the variable\u0027s type has been inferred or is declared. An inferred type may change over time (as more code is discovered), whereas a declared type is a static contract that must be matched.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.input",
    "snippet": "final CompilerInput input;",
    "begin_line": 98,
    "end_line": 98,
    "comment": "/** \n * Input source \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.index",
    "snippet": "final int index;",
    "begin_line": 104,
    "end_line": 104,
    "comment": "/** \n * The index at which the var is declared. e..g if it\u0027s 0, it\u0027s the first declared variable in that scope\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.scope",
    "snippet": "final Scope scope;",
    "begin_line": 107,
    "end_line": 107,
    "comment": "/** \n * The enclosing scope \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.markedEscaped",
    "snippet": "private boolean markedEscaped \u003d false;",
    "begin_line": 110,
    "end_line": 110,
    "comment": "/** \n * @see #isMarkedEscaped \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.Scope",
    "src_path": "com/google/javascript/jscomp/Scope.java",
    "signature": "com.google.javascript.jscomp.Scope.markedAssignedExactlyOnce",
    "snippet": "private boolean markedAssignedExactlyOnce \u003d false;",
    "begin_line": 113,
    "end_line": 113,
    "comment": "/** \n * @see #isMarkedAssignedExactlyOnce \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 44,
    "end_line": 44,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.SOURCE_EXCERPT_REGION_LENGTH",
    "snippet": "private static final int SOURCE_EXCERPT_REGION_LENGTH \u003d 5;",
    "begin_line": 57,
    "end_line": 57,
    "comment": "/** \n * Number of lines in the region returned by  {@link #getRegion(int)}. This length must be odd.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.fileName",
    "snippet": "private final String fileName;",
    "begin_line": 59,
    "end_line": 59,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.isExternFile",
    "snippet": "private boolean isExternFile \u003d false;",
    "begin_line": 60,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.originalPath",
    "snippet": "private String originalPath \u003d null;",
    "begin_line": 67,
    "end_line": 67,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.lineOffsets",
    "snippet": "private int[] lineOffsets \u003d null;",
    "begin_line": 70,
    "end_line": 70,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.code",
    "snippet": "private String code \u003d null;",
    "begin_line": 72,
    "end_line": 72,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.charset",
    "snippet": "private Charset charset \u003d Charsets.UTF_8;",
    "begin_line": 365,
    "end_line": 365,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.originalPath",
    "snippet": "private String originalPath \u003d null;",
    "begin_line": 366,
    "end_line": 366,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 419,
    "end_line": 419,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 433,
    "end_line": 433,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.generator",
    "snippet": "private final Generator generator;",
    "begin_line": 434,
    "end_line": 434,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 468,
    "end_line": 468,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.file",
    "snippet": "private final File file;",
    "begin_line": 469,
    "end_line": 469,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceFile",
    "src_path": "com/google/javascript/jscomp/SourceFile.java",
    "signature": "com.google.javascript.jscomp.SourceFile.inputCharset",
    "snippet": "private String inputCharset \u003d Charsets.UTF_8.name();",
    "begin_line": 474,
    "end_line": 474,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceMap",
    "src_path": "com/google/javascript/jscomp/SourceMap.java",
    "signature": "com.google.javascript.jscomp.SourceMap.prefix",
    "snippet": "final String prefix;",
    "begin_line": 100,
    "end_line": 100,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceMap",
    "src_path": "com/google/javascript/jscomp/SourceMap.java",
    "signature": "com.google.javascript.jscomp.SourceMap.replacement",
    "snippet": "final String replacement;",
    "begin_line": 101,
    "end_line": 101,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceMap",
    "src_path": "com/google/javascript/jscomp/SourceMap.java",
    "signature": "com.google.javascript.jscomp.SourceMap.generator",
    "snippet": "private final SourceMapGenerator generator;",
    "begin_line": 108,
    "end_line": 108,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceMap",
    "src_path": "com/google/javascript/jscomp/SourceMap.java",
    "signature": "com.google.javascript.jscomp.SourceMap.prefixMappings",
    "snippet": "private List\u003cLocationMapping\u003e prefixMappings \u003d Collections.emptyList();",
    "begin_line": 109,
    "end_line": 109,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SourceMap",
    "src_path": "com/google/javascript/jscomp/SourceMap.java",
    "signature": "com.google.javascript.jscomp.SourceMap.sourceLocationFixupCache",
    "snippet": "private final Map\u003cString, String\u003e sourceLocationFixupCache \u003d\n      Maps.newHashMap();",
    "begin_line": 110,
    "end_line": 111,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.StrictModeCheck",
    "src_path": "com/google/javascript/jscomp/StrictModeCheck.java",
    "signature": "com.google.javascript.jscomp.StrictModeCheck.UNKNOWN_VARIABLE",
    "snippet": "static final DiagnosticType UNKNOWN_VARIABLE \u003d DiagnosticType.warning(\n      \"JSC_UNKNOWN_VARIABLE\", \"unknown variable {0}\");",
    "begin_line": 40,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.StrictModeCheck",
    "src_path": "com/google/javascript/jscomp/StrictModeCheck.java",
    "signature": "com.google.javascript.jscomp.StrictModeCheck.EVAL_USE",
    "snippet": "static final DiagnosticType EVAL_USE \u003d DiagnosticType.error(\n      \"JSC_EVAL_USE\", \"\\\"eval\\\" cannot be used in Caja\");",
    "begin_line": 43,
    "end_line": 44,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.StrictModeCheck",
    "src_path": "com/google/javascript/jscomp/StrictModeCheck.java",
    "signature": "com.google.javascript.jscomp.StrictModeCheck.EVAL_DECLARATION",
    "snippet": "static final DiagnosticType EVAL_DECLARATION \u003d DiagnosticType.warning(\n      \"JSC_EVAL_DECLARATION\",\n      \"\\\"eval\\\" cannot be redeclared in ES5 strict mode\");",
    "begin_line": 46,
    "end_line": 48,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.StrictModeCheck",
    "src_path": "com/google/javascript/jscomp/StrictModeCheck.java",
    "signature": "com.google.javascript.jscomp.StrictModeCheck.EVAL_ASSIGNMENT",
    "snippet": "static final DiagnosticType EVAL_ASSIGNMENT \u003d DiagnosticType.warning(\n      \"JSC_EVAL_ASSIGNMENT\",\n      \"the \\\"eval\\\" object cannot be reassigned in ES5 strict mode\");",
    "begin_line": 50,
    "end_line": 52,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.StrictModeCheck",
    "src_path": "com/google/javascript/jscomp/StrictModeCheck.java",
    "signature": "com.google.javascript.jscomp.StrictModeCheck.ARGUMENTS_DECLARATION",
    "snippet": "static final DiagnosticType ARGUMENTS_DECLARATION \u003d DiagnosticType.warning(\n      \"JSC_ARGUMENTS_DECLARATION\",\n      \"\\\"arguments\\\" cannot be redeclared in ES5 strict mode\");",
    "begin_line": 54,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.StrictModeCheck",
    "src_path": "com/google/javascript/jscomp/StrictModeCheck.java",
    "signature": "com.google.javascript.jscomp.StrictModeCheck.ARGUMENTS_ASSIGNMENT",
    "snippet": "static final DiagnosticType ARGUMENTS_ASSIGNMENT \u003d DiagnosticType.warning(\n      \"JSC_ARGUMENTS_ASSIGNMENT\",\n      \"the \\\"arguments\\\" object cannot be reassigned in ES5 strict mode\");",
    "begin_line": 58,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.StrictModeCheck",
    "src_path": "com/google/javascript/jscomp/StrictModeCheck.java",
    "signature": "com.google.javascript.jscomp.StrictModeCheck.DELETE_VARIABLE",
    "snippet": "static final DiagnosticType DELETE_VARIABLE \u003d DiagnosticType.warning(\n      \"JSC_DELETE_VARIABLE\",\n      \"variables, functions, and arguments cannot be deleted in \"\n      + \"ES5 strict mode\");",
    "begin_line": 62,
    "end_line": 65,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.StrictModeCheck",
    "src_path": "com/google/javascript/jscomp/StrictModeCheck.java",
    "signature": "com.google.javascript.jscomp.StrictModeCheck.ILLEGAL_NAME",
    "snippet": "static final DiagnosticType ILLEGAL_NAME \u003d DiagnosticType.error(\n      \"JSC_ILLEGAL_NAME\",\n      \"identifiers ending in \u0027__\u0027 cannot be used in Caja\");",
    "begin_line": 67,
    "end_line": 69,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.StrictModeCheck",
    "src_path": "com/google/javascript/jscomp/StrictModeCheck.java",
    "signature": "com.google.javascript.jscomp.StrictModeCheck.DUPLICATE_OBJECT_KEY",
    "snippet": "static final DiagnosticType DUPLICATE_OBJECT_KEY \u003d DiagnosticType.warning(\n      \"JSC_DUPLICATE_OBJECT_KEY\",\n      \"object literals cannot contain duplicate keys in ES5 strict mode\");",
    "begin_line": 71,
    "end_line": 73,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.StrictModeCheck",
    "src_path": "com/google/javascript/jscomp/StrictModeCheck.java",
    "signature": "com.google.javascript.jscomp.StrictModeCheck.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 75,
    "end_line": 75,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.StrictModeCheck",
    "src_path": "com/google/javascript/jscomp/StrictModeCheck.java",
    "signature": "com.google.javascript.jscomp.StrictModeCheck.noVarCheck",
    "snippet": "private final boolean noVarCheck;",
    "begin_line": 76,
    "end_line": 76,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.StrictModeCheck",
    "src_path": "com/google/javascript/jscomp/StrictModeCheck.java",
    "signature": "com.google.javascript.jscomp.StrictModeCheck.noCajaChecks",
    "snippet": "private final boolean noCajaChecks;",
    "begin_line": 77,
    "end_line": 77,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SuppressDocWarningsGuard",
    "src_path": "com/google/javascript/jscomp/SuppressDocWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.SuppressDocWarningsGuard.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 31,
    "end_line": 31,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SuppressDocWarningsGuard",
    "src_path": "com/google/javascript/jscomp/SuppressDocWarningsGuard.java",
    "signature": "com.google.javascript.jscomp.SuppressDocWarningsGuard.suppressors",
    "snippet": "private final Map\u003cString, DiagnosticGroupWarningsGuard\u003e suppressors \u003d\n      Maps.newHashMap();",
    "begin_line": 34,
    "end_line": 35,
    "comment": "/** \n * Warnings guards for each suppressible warnings group, indexed by name. \n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.SyntacticScopeCreator",
    "src_path": "com/google/javascript/jscomp/SyntacticScopeCreator.java",
    "signature": "com.google.javascript.jscomp.SyntacticScopeCreator.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 34,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SyntacticScopeCreator",
    "src_path": "com/google/javascript/jscomp/SyntacticScopeCreator.java",
    "signature": "com.google.javascript.jscomp.SyntacticScopeCreator.scope",
    "snippet": "private Scope scope;",
    "begin_line": 35,
    "end_line": 35,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SyntacticScopeCreator",
    "src_path": "com/google/javascript/jscomp/SyntacticScopeCreator.java",
    "signature": "com.google.javascript.jscomp.SyntacticScopeCreator.inputId",
    "snippet": "private InputId inputId;",
    "begin_line": 36,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SyntacticScopeCreator",
    "src_path": "com/google/javascript/jscomp/SyntacticScopeCreator.java",
    "signature": "com.google.javascript.jscomp.SyntacticScopeCreator.redeclarationHandler",
    "snippet": "private final RedeclarationHandler redeclarationHandler;",
    "begin_line": 37,
    "end_line": 37,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SyntacticScopeCreator",
    "src_path": "com/google/javascript/jscomp/SyntacticScopeCreator.java",
    "signature": "com.google.javascript.jscomp.SyntacticScopeCreator.ARGUMENTS",
    "snippet": "private static final String ARGUMENTS \u003d \"arguments\";",
    "begin_line": 41,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SyntacticScopeCreator",
    "src_path": "com/google/javascript/jscomp/SyntacticScopeCreator.java",
    "signature": "com.google.javascript.jscomp.SyntacticScopeCreator.VAR_MULTIPLY_DECLARED_ERROR",
    "snippet": "public static final DiagnosticType VAR_MULTIPLY_DECLARED_ERROR \u003d\n      DiagnosticType.error(\n          \"JSC_VAR_MULTIPLY_DECLARED_ERROR\",\n          \"Variable {0} first declared in {1}\");",
    "begin_line": 43,
    "end_line": 46,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.SyntacticScopeCreator",
    "src_path": "com/google/javascript/jscomp/SyntacticScopeCreator.java",
    "signature": "com.google.javascript.jscomp.SyntacticScopeCreator.VAR_ARGUMENTS_SHADOWED_ERROR",
    "snippet": "public static final DiagnosticType VAR_ARGUMENTS_SHADOWED_ERROR \u003d\n    DiagnosticType.error(\n        \"JSC_VAR_ARGUMENTS_SHADOWED_ERROR\",\n        \"Shadowing \\\"arguments\\\" is not allowed\");",
    "begin_line": 48,
    "end_line": 51,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.UNEXPECTED_TOKEN",
    "snippet": "static final DiagnosticType UNEXPECTED_TOKEN \u003d DiagnosticType.error(\n      \"JSC_INTERNAL_ERROR_UNEXPECTED_TOKEN\",\n      \"Internal Error: Don\u0027t know how to handle {0}\");",
    "begin_line": 60,
    "end_line": 62,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.BAD_DELETE",
    "snippet": "static final DiagnosticType BAD_DELETE \u003d\n      DiagnosticType.warning(\n          \"JSC_BAD_DELETE_OPERAND\",\n          \"delete operator needs a reference operand\");",
    "begin_line": 69,
    "end_line": 72,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.OVERRIDING_PROTOTYPE_WITH_NON_OBJECT",
    "snippet": "protected static final String OVERRIDING_PROTOTYPE_WITH_NON_OBJECT \u003d\n      \"overriding prototype with non-object\";",
    "begin_line": 79,
    "end_line": 80,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.DETERMINISTIC_TEST",
    "snippet": "static final DiagnosticType DETERMINISTIC_TEST \u003d\n      DiagnosticType.warning(\n          \"JSC_DETERMINISTIC_TEST\",\n          \"condition always evaluates to {2}\\n\" +\n          \"left : {0}\\n\" +\n          \"right: {1}\");",
    "begin_line": 84,
    "end_line": 89,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.DETERMINISTIC_TEST_NO_RESULT",
    "snippet": "static final DiagnosticType DETERMINISTIC_TEST_NO_RESULT \u003d\n      DiagnosticType.warning(\n          \"JSC_DETERMINISTIC_TEST_NO_RESULT\",\n          \"condition always evaluates to the same value\\n\" +\n          \"left : {0}\\n\" +\n          \"right: {1}\");",
    "begin_line": 91,
    "end_line": 96,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.INEXISTENT_ENUM_ELEMENT",
    "snippet": "static final DiagnosticType INEXISTENT_ENUM_ELEMENT \u003d\n      DiagnosticType.warning(\n          \"JSC_INEXISTENT_ENUM_ELEMENT\",\n          \"element {0} does not exist on this enum\");",
    "begin_line": 98,
    "end_line": 101,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.INEXISTENT_PROPERTY",
    "snippet": "static final DiagnosticType INEXISTENT_PROPERTY \u003d\n      DiagnosticType.disabled(\n          \"JSC_INEXISTENT_PROPERTY\",\n          \"Property {0} never defined on {1}\");",
    "begin_line": 105,
    "end_line": 108,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.NOT_A_CONSTRUCTOR",
    "snippet": "protected static final DiagnosticType NOT_A_CONSTRUCTOR \u003d\n      DiagnosticType.warning(\n          \"JSC_NOT_A_CONSTRUCTOR\",\n          \"cannot instantiate non-constructor\");",
    "begin_line": 110,
    "end_line": 113,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.BIT_OPERATION",
    "snippet": "static final DiagnosticType BIT_OPERATION \u003d\n      DiagnosticType.warning(\n          \"JSC_BAD_TYPE_FOR_BIT_OPERATION\",\n          \"operator {0} cannot be applied to {1}\");",
    "begin_line": 115,
    "end_line": 118,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.NOT_CALLABLE",
    "snippet": "static final DiagnosticType NOT_CALLABLE \u003d\n      DiagnosticType.warning(\n          \"JSC_NOT_FUNCTION_TYPE\",\n          \"{0} expressions are not callable\");",
    "begin_line": 120,
    "end_line": 123,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.CONSTRUCTOR_NOT_CALLABLE",
    "snippet": "static final DiagnosticType CONSTRUCTOR_NOT_CALLABLE \u003d\n      DiagnosticType.warning(\n          \"JSC_CONSTRUCTOR_NOT_CALLABLE\",\n          \"Constructor {0} should be called with the \\\"new\\\" keyword\");",
    "begin_line": 125,
    "end_line": 128,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.FUNCTION_MASKS_VARIABLE",
    "snippet": "static final DiagnosticType FUNCTION_MASKS_VARIABLE \u003d\n      DiagnosticType.warning(\n          \"JSC_FUNCTION_MASKS_VARIABLE\",\n          \"function {0} masks variable (IE bug)\");",
    "begin_line": 130,
    "end_line": 133,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.MULTIPLE_VAR_DEF",
    "snippet": "static final DiagnosticType MULTIPLE_VAR_DEF \u003d DiagnosticType.warning(\n      \"JSC_MULTIPLE_VAR_DEF\",\n      \"declaration of multiple variables with shared type information\");",
    "begin_line": 135,
    "end_line": 137,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.ENUM_DUP",
    "snippet": "static final DiagnosticType ENUM_DUP \u003d DiagnosticType.error(\"JSC_ENUM_DUP\",\n      \"enum element {0} already defined\");",
    "begin_line": 139,
    "end_line": 140,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.ENUM_NOT_CONSTANT",
    "snippet": "static final DiagnosticType ENUM_NOT_CONSTANT \u003d\n      DiagnosticType.warning(\"JSC_ENUM_NOT_CONSTANT\",\n          \"enum key {0} must be a syntactic constant\");",
    "begin_line": 142,
    "end_line": 144,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.INVALID_INTERFACE_MEMBER_DECLARATION",
    "snippet": "static final DiagnosticType INVALID_INTERFACE_MEMBER_DECLARATION \u003d\n      DiagnosticType.warning(\n          \"JSC_INVALID_INTERFACE_MEMBER_DECLARATION\",\n          \"interface members can only be empty property declarations,\"\n          + \" empty functions{0}\");",
    "begin_line": 146,
    "end_line": 150,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.INTERFACE_FUNCTION_NOT_EMPTY",
    "snippet": "static final DiagnosticType INTERFACE_FUNCTION_NOT_EMPTY \u003d\n      DiagnosticType.warning(\n          \"JSC_INTERFACE_FUNCTION_NOT_EMPTY\",\n          \"interface member functions must have an empty body\");",
    "begin_line": 152,
    "end_line": 155,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.CONFLICTING_EXTENDED_TYPE",
    "snippet": "static final DiagnosticType CONFLICTING_EXTENDED_TYPE \u003d\n      DiagnosticType.warning(\n          \"JSC_CONFLICTING_EXTENDED_TYPE\",\n          \"{1} cannot extend this type; {0}s can only extend {0}s\");",
    "begin_line": 157,
    "end_line": 160,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.CONFLICTING_IMPLEMENTED_TYPE",
    "snippet": "static final DiagnosticType CONFLICTING_IMPLEMENTED_TYPE \u003d\n    DiagnosticType.warning(\n        \"JSC_CONFLICTING_IMPLEMENTED_TYPE\",\n        \"{0} cannot implement this type; \" +\n        \"an interface can only extend, but not implement interfaces\");",
    "begin_line": 162,
    "end_line": 166,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.BAD_IMPLEMENTED_TYPE",
    "snippet": "static final DiagnosticType BAD_IMPLEMENTED_TYPE \u003d\n      DiagnosticType.warning(\n          \"JSC_IMPLEMENTS_NON_INTERFACE\",\n          \"can only implement interfaces\");",
    "begin_line": 168,
    "end_line": 171,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.HIDDEN_SUPERCLASS_PROPERTY",
    "snippet": "static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY \u003d\n      DiagnosticType.warning(\n          \"JSC_HIDDEN_SUPERCLASS_PROPERTY\",\n          \"property {0} already defined on superclass {1}; \" +\n          \"use @override to override it\");",
    "begin_line": 173,
    "end_line": 177,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.HIDDEN_INTERFACE_PROPERTY",
    "snippet": "static final DiagnosticType HIDDEN_INTERFACE_PROPERTY \u003d\n      DiagnosticType.warning(\n          \"JSC_HIDDEN_INTERFACE_PROPERTY\",\n          \"property {0} already defined on interface {1}; \" +\n          \"use @override to override it\");",
    "begin_line": 179,
    "end_line": 183,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.HIDDEN_SUPERCLASS_PROPERTY_MISMATCH",
    "snippet": "static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY_MISMATCH \u003d\n      DiagnosticType.warning(\"JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH\",\n          \"mismatch of the {0} property type and the type \" +\n          \"of the property it overrides from superclass {1}\\n\" +\n          \"original: {2}\\n\" +\n          \"override: {3}\");",
    "begin_line": 185,
    "end_line": 190,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.UNKNOWN_OVERRIDE",
    "snippet": "static final DiagnosticType UNKNOWN_OVERRIDE \u003d\n      DiagnosticType.warning(\n          \"JSC_UNKNOWN_OVERRIDE\",\n          \"property {0} not defined on any superclass of {1}\");",
    "begin_line": 192,
    "end_line": 195,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.INTERFACE_METHOD_OVERRIDE",
    "snippet": "static final DiagnosticType INTERFACE_METHOD_OVERRIDE \u003d\n      DiagnosticType.warning(\n          \"JSC_INTERFACE_METHOD_OVERRIDE\",\n          \"property {0} is already defined by the {1} extended interface\");",
    "begin_line": 197,
    "end_line": 200,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.UNKNOWN_EXPR_TYPE",
    "snippet": "static final DiagnosticType UNKNOWN_EXPR_TYPE \u003d\n      DiagnosticType.warning(\"JSC_UNKNOWN_EXPR_TYPE\",\n          \"could not determine the type of this expression\");",
    "begin_line": 202,
    "end_line": 204,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.UNRESOLVED_TYPE",
    "snippet": "static final DiagnosticType UNRESOLVED_TYPE \u003d\n      DiagnosticType.warning(\"JSC_UNRESOLVED_TYPE\",\n          \"could not resolve the name {0} to a type\");",
    "begin_line": 206,
    "end_line": 208,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.WRONG_ARGUMENT_COUNT",
    "snippet": "static final DiagnosticType WRONG_ARGUMENT_COUNT \u003d\n      DiagnosticType.warning(\n          \"JSC_WRONG_ARGUMENT_COUNT\",\n          \"Function {0}: called with {1} argument(s). \" +\n          \"Function requires at least {2} argument(s){3}.\");",
    "begin_line": 210,
    "end_line": 214,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.ILLEGAL_IMPLICIT_CAST",
    "snippet": "static final DiagnosticType ILLEGAL_IMPLICIT_CAST \u003d\n      DiagnosticType.warning(\n          \"JSC_ILLEGAL_IMPLICIT_CAST\",\n          \"Illegal annotation on {0}. @implicitCast may only be used in \" +\n          \"externs.\");",
    "begin_line": 216,
    "end_line": 220,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.INCOMPATIBLE_EXTENDED_PROPERTY_TYPE",
    "snippet": "static final DiagnosticType INCOMPATIBLE_EXTENDED_PROPERTY_TYPE \u003d\n      DiagnosticType.warning(\n          \"JSC_INCOMPATIBLE_EXTENDED_PROPERTY_TYPE\",\n          \"Interface {0} has a property {1} with incompatible types in \" +\n          \"its super interfaces {2} and {3}\");",
    "begin_line": 222,
    "end_line": 226,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.EXPECTED_THIS_TYPE",
    "snippet": "static final DiagnosticType EXPECTED_THIS_TYPE \u003d\n      DiagnosticType.warning(\n          \"JSC_EXPECTED_THIS_TYPE\",\n          \"\\\"{0}\\\" must be called with a \\\"this\\\" type\");",
    "begin_line": 228,
    "end_line": 231,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.IN_USED_WITH_STRUCT",
    "snippet": "static final DiagnosticType IN_USED_WITH_STRUCT \u003d\n      DiagnosticType.warning(\"JSC_IN_USED_WITH_STRUCT\",\n                             \"Cannot use the IN operator with structs\");",
    "begin_line": 233,
    "end_line": 235,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.ILLEGAL_PROPERTY_CREATION",
    "snippet": "static final DiagnosticType ILLEGAL_PROPERTY_CREATION \u003d\n      DiagnosticType.warning(\"JSC_ILLEGAL_PROPERTY_CREATION\",\n                             \"Cannot add a property to a struct instance \" +\n                             \"after it is constructed.\");",
    "begin_line": 237,
    "end_line": 240,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.ILLEGAL_OBJLIT_KEY",
    "snippet": "static final DiagnosticType ILLEGAL_OBJLIT_KEY \u003d\n      DiagnosticType.warning(\n          \"ILLEGAL_OBJLIT_KEY\",\n          \"Illegal key, the object literal is a {0}\");",
    "begin_line": 242,
    "end_line": 245,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.ALL_DIAGNOSTICS",
    "snippet": "static final DiagnosticGroup ALL_DIAGNOSTICS \u003d new DiagnosticGroup(\n      DETERMINISTIC_TEST,\n      DETERMINISTIC_TEST_NO_RESULT,\n      INEXISTENT_ENUM_ELEMENT,\n      INEXISTENT_PROPERTY,\n      NOT_A_CONSTRUCTOR,\n      BIT_OPERATION,\n      NOT_CALLABLE,\n      CONSTRUCTOR_NOT_CALLABLE,\n      FUNCTION_MASKS_VARIABLE,\n      MULTIPLE_VAR_DEF,\n      ENUM_DUP,\n      ENUM_NOT_CONSTANT,\n      INVALID_INTERFACE_MEMBER_DECLARATION,\n      INTERFACE_FUNCTION_NOT_EMPTY,\n      CONFLICTING_EXTENDED_TYPE,\n      CONFLICTING_IMPLEMENTED_TYPE,\n      BAD_IMPLEMENTED_TYPE,\n      HIDDEN_SUPERCLASS_PROPERTY,\n      HIDDEN_INTERFACE_PROPERTY,\n      HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,\n      UNKNOWN_OVERRIDE,\n      INTERFACE_METHOD_OVERRIDE,\n      UNKNOWN_EXPR_TYPE,\n      UNRESOLVED_TYPE,\n      WRONG_ARGUMENT_COUNT,\n      ILLEGAL_IMPLICIT_CAST,\n      INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,\n      EXPECTED_THIS_TYPE,\n      IN_USED_WITH_STRUCT,\n      ILLEGAL_PROPERTY_CREATION,\n      ILLEGAL_OBJLIT_KEY,\n      RhinoErrorReporter.TYPE_PARSE_ERROR,\n      TypedScopeCreator.UNKNOWN_LENDS,\n      TypedScopeCreator.LENDS_ON_NON_OBJECT,\n      TypedScopeCreator.CTOR_INITIALIZER,\n      TypedScopeCreator.IFACE_INITIALIZER,\n      FunctionTypeBuilder.THIS_TYPE_NON_OBJECT);",
    "begin_line": 247,
    "end_line": 284,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 286,
    "end_line": 286,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.validator",
    "snippet": "private final TypeValidator validator;",
    "begin_line": 287,
    "end_line": 287,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.reverseInterpreter",
    "snippet": "private final ReverseAbstractInterpreter reverseInterpreter;",
    "begin_line": 289,
    "end_line": 289,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.typeRegistry",
    "snippet": "private final JSTypeRegistry typeRegistry;",
    "begin_line": 291,
    "end_line": 291,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.topScope",
    "snippet": "private Scope topScope;",
    "begin_line": 292,
    "end_line": 292,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.scopeCreator",
    "snippet": "private MemoizedScopeCreator scopeCreator;",
    "begin_line": 294,
    "end_line": 294,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.reportMissingOverride",
    "snippet": "private final CheckLevel reportMissingOverride;",
    "begin_line": 296,
    "end_line": 296,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.reportUnknownTypes",
    "snippet": "private final CheckLevel reportUnknownTypes;",
    "begin_line": 297,
    "end_line": 297,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.reportMissingProperties",
    "snippet": "private boolean reportMissingProperties \u003d true;",
    "begin_line": 301,
    "end_line": 301,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.inferJSDocInfo",
    "snippet": "private InferJSDocInfo inferJSDocInfo \u003d null;",
    "begin_line": 303,
    "end_line": 303,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.typedCount",
    "snippet": "private int typedCount \u003d 0;",
    "begin_line": 306,
    "end_line": 306,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.nullCount",
    "snippet": "private int nullCount \u003d 0;",
    "begin_line": 307,
    "end_line": 307,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.unknownCount",
    "snippet": "private int unknownCount \u003d 0;",
    "begin_line": 308,
    "end_line": 308,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.inExterns",
    "snippet": "private boolean inExterns;",
    "begin_line": 309,
    "end_line": 309,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeCheck",
    "src_path": "com/google/javascript/jscomp/TypeCheck.java",
    "signature": "com.google.javascript.jscomp.TypeCheck.noTypeCheckSection",
    "snippet": "private int noTypeCheckSection \u003d 0;",
    "begin_line": 313,
    "end_line": 313,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.FUNCTION_LITERAL_UNDEFINED_THIS",
    "snippet": "static final DiagnosticType FUNCTION_LITERAL_UNDEFINED_THIS \u003d\n    DiagnosticType.warning(\n        \"JSC_FUNCTION_LITERAL_UNDEFINED_THIS\",\n        \"Function literal argument refers to undefined this argument\");",
    "begin_line": 68,
    "end_line": 71,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 73,
    "end_line": 73,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.registry",
    "snippet": "private final JSTypeRegistry registry;",
    "begin_line": 74,
    "end_line": 74,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.reverseInterpreter",
    "snippet": "private final ReverseAbstractInterpreter reverseInterpreter;",
    "begin_line": 75,
    "end_line": 75,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.syntacticScope",
    "snippet": "private final Scope syntacticScope;",
    "begin_line": 76,
    "end_line": 76,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.functionScope",
    "snippet": "private final FlowScope functionScope;",
    "begin_line": 77,
    "end_line": 77,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.bottomScope",
    "snippet": "private final FlowScope bottomScope;",
    "begin_line": 78,
    "end_line": 78,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.assertionFunctionsMap",
    "snippet": "private final Map\u003cString, AssertionFunctionSpec\u003e assertionFunctionsMap;",
    "begin_line": 79,
    "end_line": 79,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.unknownType",
    "snippet": "private final ObjectType unknownType;",
    "begin_line": 82,
    "end_line": 82,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.replacements",
    "snippet": "private final Map\u003cTemplateType, JSType\u003e replacements;",
    "begin_line": 1153,
    "end_line": 1153,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.registry",
    "snippet": "private final JSTypeRegistry registry;",
    "begin_line": 1154,
    "end_line": 1154,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.madeChanges",
    "snippet": " boolean madeChanges \u003d false;",
    "begin_line": 1155,
    "end_line": 1155,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.toBooleanOutcomes",
    "snippet": "final BooleanLiteralSet toBooleanOutcomes;",
    "begin_line": 1478,
    "end_line": 1478,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.booleanValues",
    "snippet": "final BooleanLiteralSet booleanValues;",
    "begin_line": 1479,
    "end_line": 1479,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.leftScope",
    "snippet": "final FlowScope leftScope;",
    "begin_line": 1482,
    "end_line": 1482,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.rightScope",
    "snippet": "final FlowScope rightScope;",
    "begin_line": 1485,
    "end_line": 1485,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInference",
    "src_path": "com/google/javascript/jscomp/TypeInference.java",
    "signature": "com.google.javascript.jscomp.TypeInference.joinedScope",
    "snippet": " FlowScope joinedScope \u003d null;",
    "begin_line": 1488,
    "end_line": 1488,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInferencePass",
    "src_path": "com/google/javascript/jscomp/TypeInferencePass.java",
    "signature": "com.google.javascript.jscomp.TypeInferencePass.DATAFLOW_ERROR",
    "snippet": "static final DiagnosticType DATAFLOW_ERROR \u003d DiagnosticType.warning(\n      \"JSC_INTERNAL_ERROR_DATAFLOW\",\n      \"non-monotonic data-flow analysis\");",
    "begin_line": 34,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInferencePass",
    "src_path": "com/google/javascript/jscomp/TypeInferencePass.java",
    "signature": "com.google.javascript.jscomp.TypeInferencePass.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 38,
    "end_line": 38,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInferencePass",
    "src_path": "com/google/javascript/jscomp/TypeInferencePass.java",
    "signature": "com.google.javascript.jscomp.TypeInferencePass.reverseInterpreter",
    "snippet": "private final ReverseAbstractInterpreter reverseInterpreter;",
    "begin_line": 39,
    "end_line": 39,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInferencePass",
    "src_path": "com/google/javascript/jscomp/TypeInferencePass.java",
    "signature": "com.google.javascript.jscomp.TypeInferencePass.topScope",
    "snippet": "private Scope topScope;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInferencePass",
    "src_path": "com/google/javascript/jscomp/TypeInferencePass.java",
    "signature": "com.google.javascript.jscomp.TypeInferencePass.scopeCreator",
    "snippet": "private MemoizedScopeCreator scopeCreator;",
    "begin_line": 41,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeInferencePass",
    "src_path": "com/google/javascript/jscomp/TypeInferencePass.java",
    "signature": "com.google.javascript.jscomp.TypeInferencePass.assertionFunctionsMap",
    "snippet": "private final Map\u003cString, AssertionFunctionSpec\u003e assertionFunctionsMap;",
    "begin_line": 42,
    "end_line": 42,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 60,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.typeRegistry",
    "snippet": "private final JSTypeRegistry typeRegistry;",
    "begin_line": 61,
    "end_line": 61,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.allValueTypes",
    "snippet": "private final JSType allValueTypes;",
    "begin_line": 62,
    "end_line": 62,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.shouldReport",
    "snippet": "private boolean shouldReport \u003d true;",
    "begin_line": 63,
    "end_line": 63,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.nullOrUndefined",
    "snippet": "private final JSType nullOrUndefined;",
    "begin_line": 64,
    "end_line": 64,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.mismatches",
    "snippet": "private final List\u003cTypeMismatch\u003e mismatches \u003d Lists.newArrayList();",
    "begin_line": 69,
    "end_line": 69,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.FOUND_REQUIRED",
    "snippet": "private static final String FOUND_REQUIRED \u003d\n      \"{0}\\n\" +\n      \"found   : {1}\\n\" +\n      \"required: {2}\";",
    "begin_line": 72,
    "end_line": 75,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.INVALID_CAST",
    "snippet": "static final DiagnosticType INVALID_CAST \u003d\n      DiagnosticType.disabled(\"JSC_INVALID_CAST\",\n          \"invalid cast - must be a subtype or supertype\\n\" +\n          \"from: {0}\\n\" +\n          \"to  : {1}\");",
    "begin_line": 78,
    "end_line": 82,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.TYPE_MISMATCH_WARNING",
    "snippet": "static final DiagnosticType TYPE_MISMATCH_WARNING \u003d\n      DiagnosticType.warning(\n          \"JSC_TYPE_MISMATCH\",\n          \"{0}\");",
    "begin_line": 84,
    "end_line": 87,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.MISSING_EXTENDS_TAG_WARNING",
    "snippet": "static final DiagnosticType MISSING_EXTENDS_TAG_WARNING \u003d\n      DiagnosticType.warning(\n          \"JSC_MISSING_EXTENDS_TAG\",\n          \"Missing @extends tag on type {0}\");",
    "begin_line": 89,
    "end_line": 92,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.DUP_VAR_DECLARATION",
    "snippet": "static final DiagnosticType DUP_VAR_DECLARATION \u003d\n      DiagnosticType.warning(\"JSC_DUP_VAR_DECLARATION\",\n          \"variable {0} redefined with type {1}, \" +\n          \"original definition at {2}:{3} with type {4}\");",
    "begin_line": 94,
    "end_line": 97,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.HIDDEN_PROPERTY_MISMATCH",
    "snippet": "static final DiagnosticType HIDDEN_PROPERTY_MISMATCH \u003d\n      DiagnosticType.warning(\"JSC_HIDDEN_PROPERTY_MISMATCH\",\n          \"mismatch of the {0} property type and the type \" +\n          \"of the property it overrides from superclass {1}\\n\" +\n          \"original: {2}\\n\" +\n          \"override: {3}\");",
    "begin_line": 99,
    "end_line": 104,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.INTERFACE_METHOD_NOT_IMPLEMENTED",
    "snippet": "static final DiagnosticType INTERFACE_METHOD_NOT_IMPLEMENTED \u003d\n      DiagnosticType.warning(\n          \"JSC_INTERFACE_METHOD_NOT_IMPLEMENTED\",\n          \"property {0} on interface {1} is not implemented by type {2}\");",
    "begin_line": 106,
    "end_line": 109,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.HIDDEN_INTERFACE_PROPERTY_MISMATCH",
    "snippet": "static final DiagnosticType HIDDEN_INTERFACE_PROPERTY_MISMATCH \u003d\n      DiagnosticType.warning(\n        \"JSC_HIDDEN_INTERFACE_PROPERTY_MISMATCH\",\n        \"mismatch of the {0} property type and the type \" +\n        \"of the property it overrides from interface {1}\\n\" +\n        \"original: {2}\\n\" +\n        \"override: {3}\");",
    "begin_line": 111,
    "end_line": 117,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.UNKNOWN_TYPEOF_VALUE",
    "snippet": "static final DiagnosticType UNKNOWN_TYPEOF_VALUE \u003d\n      DiagnosticType.warning(\"JSC_UNKNOWN_TYPEOF_VALUE\", \"unknown type: {0}\");",
    "begin_line": 119,
    "end_line": 120,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.ILLEGAL_PROPERTY_ACCESS",
    "snippet": "static final DiagnosticType ILLEGAL_PROPERTY_ACCESS \u003d\n      DiagnosticType.warning(\"JSC_ILLEGAL_PROPERTY_ACCESS\",\n                             \"Cannot do {0} access on a {1}\");",
    "begin_line": 122,
    "end_line": 124,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.ALL_DIAGNOSTICS",
    "snippet": "static final DiagnosticGroup ALL_DIAGNOSTICS \u003d new DiagnosticGroup(\n      INVALID_CAST,\n      TYPE_MISMATCH_WARNING,\n      MISSING_EXTENDS_TAG_WARNING,\n      DUP_VAR_DECLARATION,\n      HIDDEN_PROPERTY_MISMATCH,\n      INTERFACE_METHOD_NOT_IMPLEMENTED,\n      HIDDEN_INTERFACE_PROPERTY_MISMATCH,\n      UNKNOWN_TYPEOF_VALUE,\n      ILLEGAL_PROPERTY_ACCESS);",
    "begin_line": 126,
    "end_line": 135,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.typeA",
    "snippet": "final JSType typeA;",
    "begin_line": 796,
    "end_line": 796,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.typeB",
    "snippet": "final JSType typeB;",
    "begin_line": 797,
    "end_line": 797,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypeValidator",
    "src_path": "com/google/javascript/jscomp/TypeValidator.java",
    "signature": "com.google.javascript.jscomp.TypeValidator.src",
    "snippet": "final JSError src;",
    "begin_line": 798,
    "end_line": 798,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.DELEGATE_PROXY_SUFFIX",
    "snippet": "static final String DELEGATE_PROXY_SUFFIX \u003d\n      ObjectType.createDelegateSuffix(\"Proxy\");",
    "begin_line": 101,
    "end_line": 102,
    "comment": "/** \n * A suffix for naming delegate proxies differently from their base.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.MALFORMED_TYPEDEF",
    "snippet": "static final DiagnosticType MALFORMED_TYPEDEF \u003d\n      DiagnosticType.warning(\n          \"JSC_MALFORMED_TYPEDEF\",\n          \"Typedef for {0} does not have any type information\");",
    "begin_line": 104,
    "end_line": 107,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.ENUM_INITIALIZER",
    "snippet": "static final DiagnosticType ENUM_INITIALIZER \u003d\n      DiagnosticType.warning(\n          \"JSC_ENUM_INITIALIZER_NOT_ENUM\",\n          \"enum initializer must be an object literal or an enum\");",
    "begin_line": 109,
    "end_line": 112,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.CTOR_INITIALIZER",
    "snippet": "static final DiagnosticType CTOR_INITIALIZER \u003d\n      DiagnosticType.warning(\n          \"JSC_CTOR_INITIALIZER_NOT_CTOR\",\n          \"Constructor {0} must be initialized at declaration\");",
    "begin_line": 114,
    "end_line": 117,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.IFACE_INITIALIZER",
    "snippet": "static final DiagnosticType IFACE_INITIALIZER \u003d\n      DiagnosticType.warning(\n          \"JSC_IFACE_INITIALIZER_NOT_IFACE\",\n          \"Interface {0} must be initialized at declaration\");",
    "begin_line": 119,
    "end_line": 122,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.CONSTRUCTOR_EXPECTED",
    "snippet": "static final DiagnosticType CONSTRUCTOR_EXPECTED \u003d\n      DiagnosticType.warning(\n          \"JSC_REFLECT_CONSTRUCTOR_EXPECTED\",\n          \"Constructor expected as first argument\");",
    "begin_line": 124,
    "end_line": 127,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.UNKNOWN_LENDS",
    "snippet": "static final DiagnosticType UNKNOWN_LENDS \u003d\n      DiagnosticType.warning(\n          \"JSC_UNKNOWN_LENDS\",\n          \"Variable {0} not declared before @lends annotation.\");",
    "begin_line": 129,
    "end_line": 132,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.LENDS_ON_NON_OBJECT",
    "snippet": "static final DiagnosticType LENDS_ON_NON_OBJECT \u003d\n      DiagnosticType.warning(\n          \"JSC_LENDS_ON_NON_OBJECT\",\n          \"May only lend properties to object types. {0} has type {1}.\");",
    "begin_line": 134,
    "end_line": 137,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 139,
    "end_line": 139,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.typeParsingErrorReporter",
    "snippet": "private final ErrorReporter typeParsingErrorReporter;",
    "begin_line": 140,
    "end_line": 140,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.validator",
    "snippet": "private final TypeValidator validator;",
    "begin_line": 141,
    "end_line": 141,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.codingConvention",
    "snippet": "private final CodingConvention codingConvention;",
    "begin_line": 142,
    "end_line": 142,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.typeRegistry",
    "snippet": "private final JSTypeRegistry typeRegistry;",
    "begin_line": 143,
    "end_line": 143,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.delegateProxyPrototypes",
    "snippet": "private final List\u003cObjectType\u003e delegateProxyPrototypes \u003d Lists.newArrayList();",
    "begin_line": 144,
    "end_line": 144,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.delegateCallingConventions",
    "snippet": "private final Map\u003cString, String\u003e delegateCallingConventions \u003d\n      Maps.newHashMap();",
    "begin_line": 145,
    "end_line": 146,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.functionAnalysisResults",
    "snippet": "private final Map\u003cNode, AstFunctionContents\u003e functionAnalysisResults \u003d\n      Maps.newHashMap();",
    "begin_line": 149,
    "end_line": 150,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.unknownType",
    "snippet": "private final ObjectType unknownType;",
    "begin_line": 153,
    "end_line": 153,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.node",
    "snippet": "final Node node;",
    "begin_line": 160,
    "end_line": 160,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.type",
    "snippet": "final JSType type;",
    "begin_line": 161,
    "end_line": 161,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.registry",
    "snippet": "private final JSTypeRegistry registry;",
    "begin_line": 359,
    "end_line": 359,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.scope",
    "snippet": "final Scope scope;",
    "begin_line": 415,
    "end_line": 415,
    "comment": "/** \n * The scope that we\u0027re building.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.deferredSetTypes",
    "snippet": "private final List\u003cDeferredSetType\u003e deferredSetTypes \u003d\n        Lists.newArrayList();",
    "begin_line": 417,
    "end_line": 418,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.nonExternFunctions",
    "snippet": "private final List\u003cNode\u003e nonExternFunctions \u003d Lists.newArrayList();",
    "begin_line": 423,
    "end_line": 423,
    "comment": "/** \n * Functions that we found in the global scope and not in externs.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.lentObjectLiterals",
    "snippet": "private List\u003cNode\u003e lentObjectLiterals \u003d null;",
    "begin_line": 435,
    "end_line": 435,
    "comment": "/** \n * Object literals with a @lends annotation aren\u0027t analyzed until we reach the root of the statement they\u0027re defined in. This ensures that if there are any @lends annotations on the object literals, the type on the @lends annotation resolves correctly. For more information, see http://code.google.com/p/closure-compiler/issues/detail?id\u003d314\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.stubDeclarations",
    "snippet": "private final List\u003cStubDeclaration\u003e stubDeclarations \u003d\n        Lists.newArrayList();",
    "begin_line": 443,
    "end_line": 444,
    "comment": "/** \n * Type-less stubs. If at the end of traversal, we still don\u0027t have types for these stubs, then we should declare UNKNOWN types.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.sourceName",
    "snippet": "private String sourceName \u003d null;",
    "begin_line": 449,
    "end_line": 449,
    "comment": "/** \n * The current source file that we\u0027re in.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.inputId",
    "snippet": "private InputId inputId;",
    "begin_line": 454,
    "end_line": 454,
    "comment": "/** \n * The InputId of the current node.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.thisType",
    "snippet": "private final JSType thisType;",
    "begin_line": 1721,
    "end_line": 1721,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.node",
    "snippet": "private final Node node;",
    "begin_line": 1775,
    "end_line": 1775,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.isExtern",
    "snippet": "private final boolean isExtern;",
    "begin_line": 1776,
    "end_line": 1776,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.ownerName",
    "snippet": "private final String ownerName;",
    "begin_line": 1777,
    "end_line": 1777,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 1999,
    "end_line": 1999,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.TypedScopeCreator",
    "src_path": "com/google/javascript/jscomp/TypedScopeCreator.java",
    "signature": "com.google.javascript.jscomp.TypedScopeCreator.data",
    "snippet": "private final Map\u003cNode, AstFunctionContents\u003e data;",
    "begin_line": 2000,
    "end_line": 2000,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VarCheck",
    "src_path": "com/google/javascript/jscomp/VarCheck.java",
    "signature": "com.google.javascript.jscomp.VarCheck.UNDEFINED_VAR_ERROR",
    "snippet": "static final DiagnosticType UNDEFINED_VAR_ERROR \u003d DiagnosticType.error(\n      \"JSC_UNDEFINED_VARIABLE\",\n      \"variable {0} is undeclared\");",
    "begin_line": 38,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VarCheck",
    "src_path": "com/google/javascript/jscomp/VarCheck.java",
    "signature": "com.google.javascript.jscomp.VarCheck.VIOLATED_MODULE_DEP_ERROR",
    "snippet": "static final DiagnosticType VIOLATED_MODULE_DEP_ERROR \u003d DiagnosticType.error(\n      \"JSC_VIOLATED_MODULE_DEPENDENCY\",\n      \"module {0} cannot reference {2}, defined in \" +\n      \"module {1}, since {1} loads after {0}\");",
    "begin_line": 42,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VarCheck",
    "src_path": "com/google/javascript/jscomp/VarCheck.java",
    "signature": "com.google.javascript.jscomp.VarCheck.MISSING_MODULE_DEP_ERROR",
    "snippet": "static final DiagnosticType MISSING_MODULE_DEP_ERROR \u003d DiagnosticType.warning(\n      \"JSC_MISSING_MODULE_DEPENDENCY\",\n      \"missing module dependency; module {0} should depend \" +\n      \"on module {1} because it references {2}\");",
    "begin_line": 47,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VarCheck",
    "src_path": "com/google/javascript/jscomp/VarCheck.java",
    "signature": "com.google.javascript.jscomp.VarCheck.STRICT_MODULE_DEP_ERROR",
    "snippet": "static final DiagnosticType STRICT_MODULE_DEP_ERROR \u003d DiagnosticType.disabled(\n      \"JSC_STRICT_MODULE_DEPENDENCY\",\n      \"module {0} cannot reference {2}, defined in \" +\n      \"module {1}\");",
    "begin_line": 52,
    "end_line": 55,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VarCheck",
    "src_path": "com/google/javascript/jscomp/VarCheck.java",
    "signature": "com.google.javascript.jscomp.VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR",
    "snippet": "static final DiagnosticType NAME_REFERENCE_IN_EXTERNS_ERROR \u003d\n    DiagnosticType.warning(\n      \"JSC_NAME_REFERENCE_IN_EXTERNS\",\n      \"accessing name {0} in externs has no effect\");",
    "begin_line": 57,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VarCheck",
    "src_path": "com/google/javascript/jscomp/VarCheck.java",
    "signature": "com.google.javascript.jscomp.VarCheck.UNDEFINED_EXTERN_VAR_ERROR",
    "snippet": "static final DiagnosticType UNDEFINED_EXTERN_VAR_ERROR \u003d\n    DiagnosticType.warning(\n      \"JSC_UNDEFINED_EXTERN_VAR_ERROR\",\n      \"name {0} is not undefined in the externs.\");",
    "begin_line": 62,
    "end_line": 65,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VarCheck",
    "src_path": "com/google/javascript/jscomp/VarCheck.java",
    "signature": "com.google.javascript.jscomp.VarCheck.synthesizedExternsRoot",
    "snippet": "private Node synthesizedExternsRoot \u003d null;",
    "begin_line": 67,
    "end_line": 67,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VarCheck",
    "src_path": "com/google/javascript/jscomp/VarCheck.java",
    "signature": "com.google.javascript.jscomp.VarCheck.varsToDeclareInExterns",
    "snippet": "private final Set\u003cString\u003e varsToDeclareInExterns \u003d Sets.newHashSet();",
    "begin_line": 72,
    "end_line": 72,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VarCheck",
    "src_path": "com/google/javascript/jscomp/VarCheck.java",
    "signature": "com.google.javascript.jscomp.VarCheck.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 74,
    "end_line": 74,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VarCheck",
    "src_path": "com/google/javascript/jscomp/VarCheck.java",
    "signature": "com.google.javascript.jscomp.VarCheck.sanityCheck",
    "snippet": "private final boolean sanityCheck;",
    "begin_line": 77,
    "end_line": 77,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VarCheck",
    "src_path": "com/google/javascript/jscomp/VarCheck.java",
    "signature": "com.google.javascript.jscomp.VarCheck.strictExternCheck",
    "snippet": "private final boolean strictExternCheck;",
    "begin_line": 80,
    "end_line": 80,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VariableReferenceCheck",
    "src_path": "com/google/javascript/jscomp/VariableReferenceCheck.java",
    "signature": "com.google.javascript.jscomp.VariableReferenceCheck.UNDECLARED_REFERENCE",
    "snippet": "static final DiagnosticType UNDECLARED_REFERENCE \u003d DiagnosticType.warning(\n      \"JSC_REFERENCE_BEFORE_DECLARE\",\n      \"Variable referenced before declaration: {0}\");",
    "begin_line": 40,
    "end_line": 42,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VariableReferenceCheck",
    "src_path": "com/google/javascript/jscomp/VariableReferenceCheck.java",
    "signature": "com.google.javascript.jscomp.VariableReferenceCheck.REDECLARED_VARIABLE",
    "snippet": "static final DiagnosticType REDECLARED_VARIABLE \u003d DiagnosticType.warning(\n      \"JSC_REDECLARED_VARIABLE\",\n      \"Redeclared variable: {0}\");",
    "begin_line": 44,
    "end_line": 46,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VariableReferenceCheck",
    "src_path": "com/google/javascript/jscomp/VariableReferenceCheck.java",
    "signature": "com.google.javascript.jscomp.VariableReferenceCheck.AMBIGUOUS_FUNCTION_DECL",
    "snippet": "static final DiagnosticType AMBIGUOUS_FUNCTION_DECL \u003d\n    DiagnosticType.disabled(\"AMBIGUOUS_FUNCTION_DECL\",\n        \"Ambiguous use of a named function: {0}.\");",
    "begin_line": 48,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VariableReferenceCheck",
    "src_path": "com/google/javascript/jscomp/VariableReferenceCheck.java",
    "signature": "com.google.javascript.jscomp.VariableReferenceCheck.compiler",
    "snippet": "private final AbstractCompiler compiler;",
    "begin_line": 52,
    "end_line": 52,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VariableReferenceCheck",
    "src_path": "com/google/javascript/jscomp/VariableReferenceCheck.java",
    "signature": "com.google.javascript.jscomp.VariableReferenceCheck.checkLevel",
    "snippet": "private final CheckLevel checkLevel;",
    "begin_line": 53,
    "end_line": 53,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.VariableReferenceCheck",
    "src_path": "com/google/javascript/jscomp/VariableReferenceCheck.java",
    "signature": "com.google.javascript.jscomp.VariableReferenceCheck.blocksWithDeclarations",
    "snippet": "private final Set\u003cBasicBlock\u003e blocksWithDeclarations \u003d Sets.newHashSet();",
    "begin_line": 57,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.WarningsGuard",
    "src_path": "com/google/javascript/jscomp/WarningsGuard.java",
    "signature": "com.google.javascript.jscomp.WarningsGuard.value",
    "snippet": "final int value;",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.Graph",
    "src_path": "com/google/javascript/jscomp/graph/Graph.java",
    "signature": "com.google.javascript.jscomp.graph.Graph.first",
    "snippet": "private final Annotatable first;",
    "begin_line": 63,
    "end_line": 63,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.Graph",
    "src_path": "com/google/javascript/jscomp/graph/Graph.java",
    "signature": "com.google.javascript.jscomp.graph.Graph.second",
    "snippet": "private final Annotation second;",
    "begin_line": 64,
    "end_line": 64,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.Graph",
    "src_path": "com/google/javascript/jscomp/graph/Graph.java",
    "signature": "com.google.javascript.jscomp.graph.Graph.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 77,
    "end_line": 77,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.Graph",
    "src_path": "com/google/javascript/jscomp/graph/Graph.java",
    "signature": "com.google.javascript.jscomp.graph.Graph.nodeAnnotationStack",
    "snippet": "private Deque\u003cGraphAnnotationState\u003e nodeAnnotationStack;",
    "begin_line": 87,
    "end_line": 87,
    "comment": "/** \n * Used by  {@link #pushNodeAnnotations()} and {@link #popNodeAnnotations()}.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.Graph",
    "src_path": "com/google/javascript/jscomp/graph/Graph.java",
    "signature": "com.google.javascript.jscomp.graph.Graph.edgeAnnotationStack",
    "snippet": "private Deque\u003cGraphAnnotationState\u003e edgeAnnotationStack;",
    "begin_line": 92,
    "end_line": 92,
    "comment": "/** \n * Used by  {@link #pushEdgeAnnotations()} and {@link #popEdgeAnnotations()}.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.Graph",
    "src_path": "com/google/javascript/jscomp/graph/Graph.java",
    "signature": "com.google.javascript.jscomp.graph.Graph.graph",
    "snippet": "private Graph\u003cN, E\u003e graph;",
    "begin_line": 307,
    "end_line": 307,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.Graph",
    "src_path": "com/google/javascript/jscomp/graph/Graph.java",
    "signature": "com.google.javascript.jscomp.graph.Graph.nodes",
    "snippet": "private List\u003cGraphNode\u003cN, E\u003e\u003e nodes \u003d Lists.newArrayList();",
    "begin_line": 308,
    "end_line": 308,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.nodes",
    "snippet": "protected final Map\u003cN, LinkedDirectedGraphNode\u003cN, E\u003e\u003e nodes \u003d\n      Maps.newHashMap();",
    "begin_line": 44,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.useNodeAnnotations",
    "snippet": "private final boolean useNodeAnnotations;",
    "begin_line": 68,
    "end_line": 68,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.useEdgeAnnotations",
    "snippet": "private final boolean useEdgeAnnotations;",
    "begin_line": 69,
    "end_line": 69,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.inEdgeList",
    "snippet": " List\u003cDiGraphEdge\u003cN, E\u003e\u003e inEdgeList \u003d Lists.newArrayList();",
    "begin_line": 335,
    "end_line": 335,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.outEdgeList",
    "snippet": " List\u003cDiGraphEdge\u003cN, E\u003e\u003e outEdgeList \u003d\n        Lists.newArrayList();",
    "begin_line": 336,
    "end_line": 337,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.value",
    "snippet": "protected final N value;",
    "begin_line": 339,
    "end_line": 339,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.in",
    "snippet": "private final Iterator\u003cDiGraphEdge\u003cN, E\u003e\u003e in \u003d inEdgeList.iterator();",
    "begin_line": 403,
    "end_line": 403,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.out",
    "snippet": "private final Iterator\u003cDiGraphEdge\u003cN, E\u003e\u003e out \u003d outEdgeList.iterator();",
    "begin_line": 404,
    "end_line": 404,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.annotation",
    "snippet": "protected Annotation annotation;",
    "begin_line": 432,
    "end_line": 432,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.sourceNode",
    "snippet": "private DiGraphNode\u003cN, E\u003e sourceNode;",
    "begin_line": 460,
    "end_line": 460,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.destNode",
    "snippet": "private DiGraphNode\u003cN, E\u003e destNode;",
    "begin_line": 462,
    "end_line": 462,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.value",
    "snippet": "protected final E value;",
    "begin_line": 464,
    "end_line": 464,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
    "src_path": "com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
    "signature": "com.google.javascript.jscomp.graph.LinkedDirectedGraph.annotation",
    "snippet": "protected Annotation annotation;",
    "begin_line": 558,
    "end_line": 558,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.Annotation",
    "src_path": "com/google/javascript/jscomp/parsing/Annotation.java",
    "signature": "com.google.javascript.jscomp.parsing.Annotation.recognizedAnnotations",
    "snippet": "static final Map\u003cString, Annotation\u003e recognizedAnnotations \u003d\n      new ImmutableMap.Builder\u003cString, Annotation\u003e().\n      put(\"argument\", Annotation.PARAM).\n      put(\"author\", Annotation.AUTHOR).\n      put(\"consistentIdGenerator\", Annotation.CONSISTENTIDGENERATOR).\n      put(\"const\", Annotation.CONSTANT).\n      put(\"constant\", Annotation.CONSTANT).\n      put(\"constructor\", Annotation.CONSTRUCTOR).\n      put(\"define\", Annotation.DEFINE).\n      put(\"deprecated\", Annotation.DEPRECATED).\n      put(\"desc\", Annotation.DESC).\n      put(\"dict\", Annotation.DICT).\n      put(\"enum\", Annotation.ENUM).\n      put(\"export\", Annotation.EXPORT).\n      put(\"expose\", Annotation.EXPOSE).\n      put(\"extends\", Annotation.EXTENDS).\n      put(\"externs\", Annotation.EXTERNS).\n      put(\"fileoverview\", Annotation.FILE_OVERVIEW).\n      put(\"final\", Annotation.CONSTANT).\n      put(\"hidden\", Annotation.HIDDEN).\n      put(\"idGenerator\", Annotation.IDGENERATOR).\n      put(\"implements\", Annotation.IMPLEMENTS).\n      put(\"implicitCast\", Annotation.IMPLICIT_CAST).\n      put(\"inheritDoc\", Annotation.INHERIT_DOC).\n      put(\"interface\", Annotation.INTERFACE).\n      put(\"javadispatch\", Annotation.JAVA_DISPATCH).\n      put(\"lends\", Annotation.LENDS).\n      put(\"license\", Annotation.LICENSE).\n      put(\"meaning\", Annotation.MEANING).\n      put(\"modifies\", Annotation.MODIFIES).\n      put(\"noalias\", Annotation.NO_ALIAS).\n      put(\"nocompile\", Annotation.NO_COMPILE).\n      put(\"noshadow\", Annotation.NO_SHADOW).\n      put(\"nosideeffects\", Annotation.NO_SIDE_EFFECTS).\n      put(\"notypecheck\", Annotation.NO_TYPE_CHECK).\n      put(\"override\", Annotation.OVERRIDE).\n      put(\"owner\", Annotation.AUTHOR).\n      put(\"param\", Annotation.PARAM).\n      put(\"preserve\", Annotation.PRESERVE).\n      put(\"preserveTry\", Annotation.PRESERVE_TRY).\n      put(\"private\", Annotation.PRIVATE).\n      put(\"protected\", Annotation.PROTECTED).\n      put(\"public\", Annotation.PUBLIC).\n      put(\"return\", Annotation.RETURN).\n      put(\"returns\", Annotation.RETURN).\n      put(\"see\", Annotation.SEE).\n      put(\"stableIdGenerator\", Annotation.STABLEIDGENERATOR).\n      put(\"struct\", Annotation.STRUCT).\n      put(\"suppress\", Annotation.SUPPRESS).\n      put(\"template\", Annotation.TEMPLATE).\n      put(\"this\", Annotation.THIS).\n      put(\"throws\", Annotation.THROWS).\n      put(\"type\", Annotation.TYPE).\n      put(\"typedef\", Annotation.TYPEDEF).\n      put(\"version\", Annotation.VERSION).\n      build();",
    "begin_line": 78,
    "end_line": 133,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.Config",
    "src_path": "com/google/javascript/jscomp/parsing/Config.java",
    "signature": "com.google.javascript.jscomp.parsing.Config.parseJsDocDocumentation",
    "snippet": "final boolean parseJsDocDocumentation;",
    "begin_line": 41,
    "end_line": 41,
    "comment": "/** \n * Whether to parse the descriptions of JsDoc comments.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.Config",
    "src_path": "com/google/javascript/jscomp/parsing/Config.java",
    "signature": "com.google.javascript.jscomp.parsing.Config.isIdeMode",
    "snippet": "final boolean isIdeMode;",
    "begin_line": 46,
    "end_line": 46,
    "comment": "/** \n * Whether we\u0027re in IDE mode.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.Config",
    "src_path": "com/google/javascript/jscomp/parsing/Config.java",
    "signature": "com.google.javascript.jscomp.parsing.Config.annotationNames",
    "snippet": "final Map\u003cString, Annotation\u003e annotationNames;",
    "begin_line": 52,
    "end_line": 52,
    "comment": "/** \n * Recognized JSDoc annotations, mapped from their name to their internal representation.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.Config",
    "src_path": "com/google/javascript/jscomp/parsing/Config.java",
    "signature": "com.google.javascript.jscomp.parsing.Config.suppressionNames",
    "snippet": "final Set\u003cString\u003e suppressionNames;",
    "begin_line": 57,
    "end_line": 57,
    "comment": "/** \n * Recognized names in a  {@code @suppress} tag.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.Config",
    "src_path": "com/google/javascript/jscomp/parsing/Config.java",
    "signature": "com.google.javascript.jscomp.parsing.Config.languageMode",
    "snippet": "final LanguageMode languageMode;",
    "begin_line": 62,
    "end_line": 62,
    "comment": "/** \n * Accept ECMAScript5 syntax, such as getter/setter.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.Config",
    "src_path": "com/google/javascript/jscomp/parsing/Config.java",
    "signature": "com.google.javascript.jscomp.parsing.Config.acceptConstKeyword",
    "snippet": "final boolean acceptConstKeyword;",
    "begin_line": 67,
    "end_line": 67,
    "comment": "/** \n * Accept `const\u0027 keyword.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.GETTER_ERROR_MESSAGE",
    "snippet": "static final String GETTER_ERROR_MESSAGE \u003d\n      \"getters are not supported in older versions of JS. \" +\n      \"If you are targeting newer versions of JS, \" +\n      \"set the appropriate language_in option.\";",
    "begin_line": 83,
    "end_line": 86,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.SETTER_ERROR_MESSAGE",
    "snippet": "static final String SETTER_ERROR_MESSAGE \u003d\n      \"setters are not supported in older versions of JS. \" +\n      \"If you are targeting newer versions of JS, \" +\n      \"set the appropriate language_in option.\";",
    "begin_line": 88,
    "end_line": 91,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.SUSPICIOUS_COMMENT_WARNING",
    "snippet": "static final String SUSPICIOUS_COMMENT_WARNING \u003d\n      \"Non-JSDoc comment has annotations. \" +\n      \"Did you mean to start it with \u0027/**\u0027?\";",
    "begin_line": 93,
    "end_line": 95,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.MISPLACED_TYPE_ANNOTATION",
    "snippet": "static final String MISPLACED_TYPE_ANNOTATION \u003d\n      \"Type annotations are not allowed here. Are you missing parentheses?\";",
    "begin_line": 97,
    "end_line": 98,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.sourceString",
    "snippet": "private final String sourceString;",
    "begin_line": 100,
    "end_line": 100,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.sourceFile",
    "snippet": "private final StaticSourceFile sourceFile;",
    "begin_line": 101,
    "end_line": 101,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.sourceName",
    "snippet": "private final String sourceName;",
    "begin_line": 102,
    "end_line": 102,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.config",
    "snippet": "private final Config config;",
    "begin_line": 103,
    "end_line": 103,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.errorReporter",
    "snippet": "private final ErrorReporter errorReporter;",
    "begin_line": 104,
    "end_line": 104,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.transformDispatcher",
    "snippet": "private final TransformDispatcher transformDispatcher;",
    "begin_line": 105,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.ALLOWED_DIRECTIVES",
    "snippet": "private static final ImmutableSet\u003cString\u003e ALLOWED_DIRECTIVES \u003d\n      ImmutableSet.of(\"use strict\");",
    "begin_line": 107,
    "end_line": 108,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.ES5_RESERVED_KEYWORDS",
    "snippet": "private static final ImmutableSet\u003cString\u003e ES5_RESERVED_KEYWORDS \u003d\n      ImmutableSet.of(\n          // From Section 7.6.1.2\n          \"class\", \"const\", \"enum\", \"export\", \"extends\", \"import\", \"super\");",
    "begin_line": 110,
    "end_line": 113,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.ES5_STRICT_RESERVED_KEYWORDS",
    "snippet": "private static final ImmutableSet\u003cString\u003e ES5_STRICT_RESERVED_KEYWORDS \u003d\n      ImmutableSet.of(\n          // From Section 7.6.1.2\n          \"class\", \"const\", \"enum\", \"export\", \"extends\", \"import\", \"super\",\n          \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\",\n          \"public\", \"static\", \"yield\");",
    "begin_line": 114,
    "end_line": 119,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.reservedKeywords",
    "snippet": "private final Set\u003cString\u003e reservedKeywords;",
    "begin_line": 121,
    "end_line": 121,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.parsedComments",
    "snippet": "private final Set\u003cComment\u003e parsedComments \u003d Sets.newHashSet();",
    "begin_line": 122,
    "end_line": 122,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.rootNodeJsDocHolder",
    "snippet": " Node rootNodeJsDocHolder \u003d new Node(Token.SCRIPT);",
    "begin_line": 126,
    "end_line": 126,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.fileLevelJsDocBuilder",
    "snippet": " Node.FileLevelJsDocBuilder fileLevelJsDocBuilder \u003d\n      rootNodeJsDocHolder.getJsDocBuilderForNode();",
    "begin_line": 127,
    "end_line": 128,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.fileOverviewInfo",
    "snippet": " JSDocInfo fileOverviewInfo \u003d null;",
    "begin_line": 129,
    "end_line": 129,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.IRFactory",
    "src_path": "com/google/javascript/jscomp/parsing/IRFactory.java",
    "signature": "com.google.javascript.jscomp.parsing.IRFactory.templateNode",
    "snippet": "private Node templateNode;",
    "begin_line": 133,
    "end_line": 133,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.stream",
    "snippet": "private final JsDocTokenStream stream;",
    "begin_line": 50,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.jsdocBuilder",
    "snippet": "private final JSDocInfoBuilder jsdocBuilder;",
    "begin_line": 51,
    "end_line": 51,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.sourceFile",
    "snippet": "private final StaticSourceFile sourceFile;",
    "begin_line": 52,
    "end_line": 52,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.associatedNode",
    "snippet": "private final Node associatedNode;",
    "begin_line": 53,
    "end_line": 53,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.errorReporter",
    "snippet": "private final ErrorReporter errorReporter;",
    "begin_line": 54,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.parser",
    "snippet": "private final ErrorReporterParser parser \u003d new ErrorReporterParser();",
    "begin_line": 55,
    "end_line": 55,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.templateNode",
    "snippet": "private final Node templateNode;",
    "begin_line": 59,
    "end_line": 59,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.fileOverviewJSDocInfo",
    "snippet": "private JSDocInfo fileOverviewJSDocInfo \u003d null;",
    "begin_line": 90,
    "end_line": 90,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.state",
    "snippet": "private State state;",
    "begin_line": 91,
    "end_line": 91,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.annotationNames",
    "snippet": "private final Map\u003cString, Annotation\u003e annotationNames;",
    "begin_line": 93,
    "end_line": 93,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.suppressionNames",
    "snippet": "private final Set\u003cString\u003e suppressionNames;",
    "begin_line": 94,
    "end_line": 94,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.modifiesAnnotationKeywords",
    "snippet": "static private final Set\u003cString\u003e modifiesAnnotationKeywords \u003d\n      ImmutableSet.\u003cString\u003eof(\"this\", \"arguments\");",
    "begin_line": 95,
    "end_line": 96,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.fileLevelJsDocBuilder",
    "snippet": "private Node.FileLevelJsDocBuilder fileLevelJsDocBuilder;",
    "begin_line": 98,
    "end_line": 98,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.string",
    "snippet": "private final String string;",
    "begin_line": 1286,
    "end_line": 1286,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.token",
    "snippet": "private final JsDocToken token;",
    "begin_line": 1287,
    "end_line": 1287,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.type",
    "snippet": "final JSTypeExpression type;",
    "begin_line": 1299,
    "end_line": 1299,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.lineno",
    "snippet": "final int lineno;",
    "begin_line": 1300,
    "end_line": 1300,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.charno",
    "snippet": "final int charno;",
    "begin_line": 1301,
    "end_line": 1301,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.NO_UNREAD_TOKEN",
    "snippet": "private static final JsDocToken NO_UNREAD_TOKEN \u003d null;",
    "begin_line": 2289,
    "end_line": 2289,
    "comment": "/** \n * Specific value indicating that the  {@link #unreadToken} contains no token.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocInfoParser.unreadToken",
    "snippet": "private JsDocToken unreadToken \u003d NO_UNREAD_TOKEN;",
    "begin_line": 2294,
    "end_line": 2294,
    "comment": "/** \n * One token buffer.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.EOF_CHAR",
    "snippet": "private final static int\n      EOF_CHAR \u003d -1;",
    "begin_line": 34,
    "end_line": 35,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.string",
    "snippet": "private String string \u003d \"\";",
    "begin_line": 454,
    "end_line": 454,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.stringBuffer",
    "snippet": "private char[] stringBuffer \u003d new char[128];",
    "begin_line": 456,
    "end_line": 456,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.stringBufferTop",
    "snippet": "private int stringBufferTop;",
    "begin_line": 457,
    "end_line": 457,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.ungetBuffer",
    "snippet": "private final int[] ungetBuffer \u003d new int[3];",
    "begin_line": 460,
    "end_line": 460,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.ungetCursor",
    "snippet": "private int ungetCursor;",
    "begin_line": 461,
    "end_line": 461,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.hitEOF",
    "snippet": "private boolean hitEOF \u003d false;",
    "begin_line": 463,
    "end_line": 463,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.lineStart",
    "snippet": "private int lineStart \u003d 0;",
    "begin_line": 465,
    "end_line": 465,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.lineEndChar",
    "snippet": "private int lineEndChar \u003d -1;",
    "begin_line": 466,
    "end_line": 466,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.lineno",
    "snippet": " int lineno;",
    "begin_line": 467,
    "end_line": 467,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.charno",
    "snippet": "private int charno \u003d -1;",
    "begin_line": 468,
    "end_line": 468,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.initCharno",
    "snippet": "private int initCharno;",
    "begin_line": 469,
    "end_line": 469,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.initLineno",
    "snippet": "private int initLineno;",
    "begin_line": 470,
    "end_line": 470,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.sourceString",
    "snippet": "private String sourceString;",
    "begin_line": 472,
    "end_line": 472,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.sourceEnd",
    "snippet": "private int sourceEnd;",
    "begin_line": 473,
    "end_line": 473,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.sourceCursor",
    "snippet": " int sourceCursor;",
    "begin_line": 477,
    "end_line": 477,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.cursor",
    "snippet": " int cursor;",
    "begin_line": 482,
    "end_line": 482,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.tokenBeg",
    "snippet": " int tokenBeg;",
    "begin_line": 485,
    "end_line": 485,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.JsDocTokenStream",
    "src_path": "com/google/javascript/jscomp/parsing/JsDocTokenStream.java",
    "signature": "com.google.javascript.jscomp.parsing.JsDocTokenStream.tokenEnd",
    "snippet": " int tokenEnd;",
    "begin_line": 486,
    "end_line": 486,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.ParserRunner",
    "src_path": "com/google/javascript/jscomp/parsing/ParserRunner.java",
    "signature": "com.google.javascript.jscomp.parsing.ParserRunner.configResource",
    "snippet": "private static final String configResource \u003d\n      \"com.google.javascript.jscomp.parsing.ParserConfig\";",
    "begin_line": 39,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.ParserRunner",
    "src_path": "com/google/javascript/jscomp/parsing/ParserRunner.java",
    "signature": "com.google.javascript.jscomp.parsing.ParserRunner.annotationNames",
    "snippet": "private static Set\u003cString\u003e annotationNames \u003d null;",
    "begin_line": 42,
    "end_line": 42,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.ParserRunner",
    "src_path": "com/google/javascript/jscomp/parsing/ParserRunner.java",
    "signature": "com.google.javascript.jscomp.parsing.ParserRunner.suppressionNames",
    "snippet": "private static Set\u003cString\u003e suppressionNames \u003d null;",
    "begin_line": 44,
    "end_line": 44,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.ParserRunner",
    "src_path": "com/google/javascript/jscomp/parsing/ParserRunner.java",
    "signature": "com.google.javascript.jscomp.parsing.ParserRunner.reservedVars",
    "snippet": "private static Set\u003cString\u003e reservedVars \u003d null;",
    "begin_line": 45,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.ParserRunner",
    "src_path": "com/google/javascript/jscomp/parsing/ParserRunner.java",
    "signature": "com.google.javascript.jscomp.parsing.ParserRunner.ast",
    "snippet": "public final Node ast;",
    "begin_line": 160,
    "end_line": 160,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.parsing.ParserRunner",
    "src_path": "com/google/javascript/jscomp/parsing/ParserRunner.java",
    "signature": "com.google.javascript.jscomp.parsing.ParserRunner.oldAst",
    "snippet": "public final AstRoot oldAst;",
    "begin_line": 161,
    "end_line": 161,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.convention",
    "snippet": "protected final CodingConvention convention;",
    "begin_line": 54,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.typeRegistry",
    "snippet": "final JSTypeRegistry typeRegistry;",
    "begin_line": 55,
    "end_line": 55,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.firstLink",
    "snippet": "private ChainableReverseAbstractInterpreter firstLink;",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.nextLink",
    "snippet": "private ChainableReverseAbstractInterpreter nextLink;",
    "begin_line": 57,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.restrictUndefinedVisitor",
    "snippet": "private final Visitor\u003cJSType\u003e restrictUndefinedVisitor \u003d\n    new Visitor\u003cJSType\u003e() {\n      @Override\n      public JSType caseEnumElementType(EnumElementType enumElementType) {\n        JSType type \u003d enumElementType.getPrimitiveType().visit(this);\n        if (type !\u003d null \u0026\u0026 enumElementType.getPrimitiveType().isEquivalentTo(type)) {\n          return enumElementType;\n        } else {\n          return type;\n        }\n      }\n\n      @Override\n      public JSType caseAllType() {\n        return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE);\n      }\n\n      @Override\n      public JSType caseNoObjectType() {\n        return getNativeType(NO_OBJECT_TYPE);\n      }\n\n      @Override\n      public JSType caseNoType() {\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseBooleanType() {\n        return getNativeType(BOOLEAN_TYPE);\n      }\n\n      @Override\n      public JSType caseFunctionType(FunctionType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseNullType() {\n        return getNativeType(NULL_TYPE);\n      }\n\n      @Override\n      public JSType caseNumberType() {\n        return getNativeType(NUMBER_TYPE);\n      }\n\n      @Override\n      public JSType caseObjectType(ObjectType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion(getNativeType(VOID_TYPE));\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseVoidType() {\n        return null;\n      }\n\n      @Override\n      public JSType caseParameterizedType(ParameterizedType type) {\n        return caseObjectType(type);\n      }\n\n      @Override\n      public JSType caseTemplateType(TemplateType templateType) {\n        return caseObjectType(templateType);\n      }\n    };",
    "begin_line": 186,
    "end_line": 268,
    "comment": "/** \n * @see #getRestrictedWithoutUndefined(JSType)\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.restrictNullVisitor",
    "snippet": "private final Visitor\u003cJSType\u003e restrictNullVisitor \u003d\n    new Visitor\u003cJSType\u003e() {\n      @Override\n      public JSType caseEnumElementType(EnumElementType enumElementType) {\n        JSType type \u003d enumElementType.getPrimitiveType().visit(this);\n        if (type !\u003d null \u0026\u0026\n            enumElementType.getPrimitiveType().isEquivalentTo(type)) {\n          return enumElementType;\n        } else {\n          return type;\n        }\n      }\n\n      @Override\n      public JSType caseAllType() {\n        return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE);\n      }\n\n      @Override\n      public JSType caseNoObjectType() {\n        return getNativeType(NO_OBJECT_TYPE);\n      }\n\n      @Override\n      public JSType caseNoType() {\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseBooleanType() {\n        return getNativeType(BOOLEAN_TYPE);\n      }\n\n      @Override\n      public JSType caseFunctionType(FunctionType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseNullType() {\n        return null;\n      }\n\n      @Override\n      public JSType caseNumberType() {\n        return getNativeType(NUMBER_TYPE);\n      }\n\n      @Override\n      public JSType caseObjectType(ObjectType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion(getNativeType(NULL_TYPE));\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseVoidType() {\n        return getNativeType(VOID_TYPE);\n      }\n\n      @Override\n      public JSType caseParameterizedType(ParameterizedType type) {\n        return caseObjectType(type);\n      }\n\n      @Override\n      public JSType caseTemplateType(TemplateType templateType) {\n        return caseObjectType(templateType);\n      }\n    };",
    "begin_line": 274,
    "end_line": 357,
    "comment": "/** \n * @see #getRestrictedWithoutNull(JSType)\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.value",
    "snippet": "private final String value;",
    "begin_line": 548,
    "end_line": 548,
    "comment": "/** \n * A value known to be equal or not equal to the result of the {@code typeOf} operation.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.resultEqualsValue",
    "snippet": "private final boolean resultEqualsValue;",
    "begin_line": 555,
    "end_line": 555,
    "comment": "/** \n * {@code true} if the {@code typeOf} result is known to equal{@code value};  {@code false} if it is known \u003cem\u003enot\u003c/em\u003e to equal{@code value}.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter.EQ",
    "snippet": "private static final Function\u003cTypePair, TypePair\u003e EQ \u003d\n    new Function\u003cTypePair, TypePair\u003e() {\n      @Override\n      public TypePair apply(TypePair p) {\n        if (p.typeA \u003d\u003d null || p.typeB \u003d\u003d null) {\n          return null;\n        }\n        return p.typeA.getTypesUnderEquality(p.typeB);\n      }\n    };",
    "begin_line": 47,
    "end_line": 56,
    "comment": "/** \n * Merging function for equality between types.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter.NE",
    "snippet": "private static final Function\u003cTypePair, TypePair\u003e NE \u003d\n    new Function\u003cTypePair, TypePair\u003e() {\n      @Override\n      public TypePair apply(TypePair p) {\n        if (p.typeA \u003d\u003d null || p.typeB \u003d\u003d null) {\n          return null;\n        }\n        return p.typeA.getTypesUnderInequality(p.typeB);\n      }\n    };",
    "begin_line": 61,
    "end_line": 70,
    "comment": "/** \n * Merging function for non-equality between types.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter.SHEQ",
    "snippet": "private static final Function\u003cTypePair, TypePair\u003e SHEQ \u003d\n    new Function\u003cTypePair, TypePair\u003e() {\n      @Override\n      public TypePair apply(TypePair p) {\n        if (p.typeA \u003d\u003d null || p.typeB \u003d\u003d null) {\n          return null;\n        }\n        return p.typeA.getTypesUnderShallowEquality(p.typeB);\n      }\n    };",
    "begin_line": 76,
    "end_line": 85,
    "comment": "/** \n * Merging function for strict equality between types.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter.SHNE",
    "snippet": "private static final Function\u003cTypePair, TypePair\u003e SHNE \u003d\n    new Function\u003cTypePair, TypePair\u003e() {\n      @Override\n      public TypePair apply(TypePair p) {\n        if (p.typeA \u003d\u003d null || p.typeB \u003d\u003d null) {\n          return null;\n        }\n        return p.typeA.getTypesUnderShallowInequality(p.typeB);\n      }\n    };",
    "begin_line": 91,
    "end_line": 100,
    "comment": "/** \n * Merging function for strict non-equality between types.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter.INEQ",
    "snippet": "private final Function\u003cTypePair, TypePair\u003e INEQ \u003d\n    new Function\u003cTypePair, TypePair\u003e() {\n      @Override\n      public TypePair apply(TypePair p) {\n        return new TypePair(\n            getRestrictedWithoutUndefined(p.typeA),\n            getRestrictedWithoutUndefined(p.typeB));\n      }\n    };",
    "begin_line": 106,
    "end_line": 114,
    "comment": "/** \n * Merging function for inequality comparisons between types.\n */\n"
  },
  {
    "class_name": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter.target",
    "snippet": "private final ObjectType target;",
    "begin_line": 505,
    "end_line": 505,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "src_path": "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java",
    "signature": "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter.target",
    "snippet": "private final ObjectType target;",
    "begin_line": 559,
    "end_line": 559,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.InputId",
    "src_path": "com/google/javascript/rhino/InputId.java",
    "signature": "com.google.javascript.rhino.InputId.serialVersionUID",
    "snippet": "public static final long serialVersionUID \u003d 1L;",
    "begin_line": 48,
    "end_line": 48,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.InputId",
    "src_path": "com/google/javascript/rhino/InputId.java",
    "signature": "com.google.javascript.rhino.InputId.id",
    "snippet": "private final String id;",
    "begin_line": 49,
    "end_line": 49,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 69,
    "end_line": 69,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 88,
    "end_line": 88,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.baseType",
    "snippet": " JSTypeExpression baseType \u003d null;",
    "begin_line": 91,
    "end_line": 91,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.extendedInterfaces",
    "snippet": " List\u003cJSTypeExpression\u003e extendedInterfaces \u003d null;",
    "begin_line": 92,
    "end_line": 92,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.implementedInterfaces",
    "snippet": " List\u003cJSTypeExpression\u003e implementedInterfaces \u003d null;",
    "begin_line": 93,
    "end_line": 93,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.parameters",
    "snippet": " Map\u003cString, JSTypeExpression\u003e parameters \u003d null;",
    "begin_line": 94,
    "end_line": 94,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.thrownTypes",
    "snippet": " List\u003cJSTypeExpression\u003e thrownTypes \u003d null;",
    "begin_line": 95,
    "end_line": 95,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.templateTypeNames",
    "snippet": " ImmutableList\u003cString\u003e templateTypeNames \u003d null;",
    "begin_line": 96,
    "end_line": 96,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.description",
    "snippet": " String description \u003d null;",
    "begin_line": 99,
    "end_line": 99,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.meaning",
    "snippet": " String meaning \u003d null;",
    "begin_line": 100,
    "end_line": 100,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.deprecated",
    "snippet": " String deprecated \u003d null;",
    "begin_line": 101,
    "end_line": 101,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.license",
    "snippet": " String license \u003d null;",
    "begin_line": 102,
    "end_line": 102,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.suppressions",
    "snippet": " Set\u003cString\u003e suppressions \u003d null;",
    "begin_line": 103,
    "end_line": 103,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.modifies",
    "snippet": " Set\u003cString\u003e modifies \u003d null;",
    "begin_line": 104,
    "end_line": 104,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.lendsName",
    "snippet": " String lendsName \u003d null;",
    "begin_line": 105,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.sourceComment",
    "snippet": " String sourceComment \u003d null;",
    "begin_line": 109,
    "end_line": 109,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.markers",
    "snippet": " List\u003cMarker\u003e markers \u003d null;",
    "begin_line": 110,
    "end_line": 110,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.parameters",
    "snippet": " Map\u003cString, String\u003e parameters \u003d null;",
    "begin_line": 112,
    "end_line": 112,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.throwsDescriptions",
    "snippet": " Map\u003cJSTypeExpression, String\u003e throwsDescriptions \u003d null;",
    "begin_line": 113,
    "end_line": 113,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.blockDescription",
    "snippet": " String blockDescription \u003d null;",
    "begin_line": 114,
    "end_line": 114,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.fileOverview",
    "snippet": " String fileOverview \u003d null;",
    "begin_line": 115,
    "end_line": 115,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.returnDescription",
    "snippet": " String returnDescription \u003d null;",
    "begin_line": 116,
    "end_line": 116,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.version",
    "snippet": " String version \u003d null;",
    "begin_line": 117,
    "end_line": 117,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.authors",
    "snippet": " List\u003cString\u003e authors \u003d null;",
    "begin_line": 119,
    "end_line": 119,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.sees",
    "snippet": " List\u003cString\u003e sees \u003d null;",
    "begin_line": 120,
    "end_line": 120,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.brackets",
    "snippet": "private boolean brackets \u003d false;",
    "begin_line": 155,
    "end_line": 155,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.annotation",
    "snippet": "private TrimmedStringPosition annotation \u003d null;",
    "begin_line": 178,
    "end_line": 178,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.name",
    "snippet": "private TrimmedStringPosition name \u003d null;",
    "begin_line": 179,
    "end_line": 179,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.nameNode",
    "snippet": "private SourcePosition\u003cNode\u003e nameNode \u003d null;",
    "begin_line": 180,
    "end_line": 180,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.description",
    "snippet": "private StringPosition description \u003d null;",
    "begin_line": 181,
    "end_line": 181,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.type",
    "snippet": "private TypePosition type \u003d null;",
    "begin_line": 182,
    "end_line": 182,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.info",
    "snippet": "private LazilyInitializedInfo info \u003d null;",
    "begin_line": 246,
    "end_line": 246,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.documentation",
    "snippet": "private LazilyInitializedDocumentation documentation \u003d null;",
    "begin_line": 248,
    "end_line": 248,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.associatedNode",
    "snippet": "private Node associatedNode \u003d null;",
    "begin_line": 251,
    "end_line": 251,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.visibility",
    "snippet": "private Visibility visibility \u003d null;",
    "begin_line": 253,
    "end_line": 253,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.bitset",
    "snippet": "private int bitset \u003d 0x00;",
    "begin_line": 266,
    "end_line": 266,
    "comment": "/** \n * The  {@link #isConstant()},  {@link #isConstructor()},  {@link #isInterface}, {@link #isHidden()} and {@link #shouldPreserveTry()} flags as well aswhether the  {@link #type} field stores a value for {@link #getType()}, {@link #getReturnType()} or {@link #getEnumParameterType()}.\n * @see #setFlag(boolean,int)\n * @see #getFlag(int)\n * @see #setType(JSTypeExpression,int)\n * @see #getType(int)\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.type",
    "snippet": "private JSTypeExpression type \u003d null;",
    "begin_line": 276,
    "end_line": 276,
    "comment": "/** \n * The type for  {@link #getType()},  {@link #getReturnType()} or{@link #getEnumParameterType()}. The knowledge of which one is recorded is stored in the  {@link #bitset} field.\n * @see #setType(JSTypeExpression,int)\n * @see #getType(int)\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.thisType",
    "snippet": "private JSTypeExpression thisType \u003d null;",
    "begin_line": 281,
    "end_line": 281,
    "comment": "/** \n * The type for  {@link #getThisType()}.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.includeDocumentation",
    "snippet": "private boolean includeDocumentation \u003d false;",
    "begin_line": 288,
    "end_line": 288,
    "comment": "/** \n * Whether to include documentation.\n * @see JSDocInfo.LazilyInitializedDocumentation\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_FLAGS",
    "snippet": "private static final int MASK_FLAGS       \u003d 0x3FFFFFFF;",
    "begin_line": 295,
    "end_line": 295,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_CONSTANT",
    "snippet": "private static final int MASK_CONSTANT      \u003d 0x00000001;",
    "begin_line": 297,
    "end_line": 297,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_CONSTRUCTOR",
    "snippet": "private static final int MASK_CONSTRUCTOR   \u003d 0x00000002;",
    "begin_line": 298,
    "end_line": 298,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_DEFINE",
    "snippet": "private static final int MASK_DEFINE        \u003d 0x00000004;",
    "begin_line": 299,
    "end_line": 299,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_HIDDEN",
    "snippet": "private static final int MASK_HIDDEN        \u003d 0x00000008;",
    "begin_line": 300,
    "end_line": 300,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_PRESERVETRY",
    "snippet": "private static final int MASK_PRESERVETRY   \u003d 0x00000010;",
    "begin_line": 301,
    "end_line": 301,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_NOCHECK",
    "snippet": "private static final int MASK_NOCHECK       \u003d 0x00000020;",
    "begin_line": 302,
    "end_line": 302,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_OVERRIDE",
    "snippet": "private static final int MASK_OVERRIDE      \u003d 0x00000040;",
    "begin_line": 303,
    "end_line": 303,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_NOALIAS",
    "snippet": "private static final int MASK_NOALIAS       \u003d 0x00000080;",
    "begin_line": 304,
    "end_line": 304,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_DEPRECATED",
    "snippet": "private static final int MASK_DEPRECATED    \u003d 0x00000100;",
    "begin_line": 305,
    "end_line": 305,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_INTERFACE",
    "snippet": "private static final int MASK_INTERFACE     \u003d 0x00000200;",
    "begin_line": 306,
    "end_line": 306,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_EXPORT",
    "snippet": "private static final int MASK_EXPORT        \u003d 0x00000400;",
    "begin_line": 307,
    "end_line": 307,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_NOSHADOW",
    "snippet": "private static final int MASK_NOSHADOW      \u003d 0x00000800;",
    "begin_line": 308,
    "end_line": 308,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_FILEOVERVIEW",
    "snippet": "private static final int MASK_FILEOVERVIEW  \u003d 0x00001000;",
    "begin_line": 309,
    "end_line": 309,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_IMPLICITCAST",
    "snippet": "private static final int MASK_IMPLICITCAST  \u003d 0x00002000;",
    "begin_line": 310,
    "end_line": 310,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_NOSIDEEFFECTS",
    "snippet": "private static final int MASK_NOSIDEEFFECTS \u003d 0x00004000;",
    "begin_line": 311,
    "end_line": 311,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_EXTERNS",
    "snippet": "private static final int MASK_EXTERNS       \u003d 0x00008000;",
    "begin_line": 312,
    "end_line": 312,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_JAVADISPATCH",
    "snippet": "private static final int MASK_JAVADISPATCH  \u003d 0x00010000;",
    "begin_line": 313,
    "end_line": 313,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_NOCOMPILE",
    "snippet": "private static final int MASK_NOCOMPILE     \u003d 0x00020000;",
    "begin_line": 314,
    "end_line": 314,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_CONSISTIDGEN",
    "snippet": "private static final int MASK_CONSISTIDGEN  \u003d 0x00040000;",
    "begin_line": 315,
    "end_line": 315,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_IDGEN",
    "snippet": "private static final int MASK_IDGEN         \u003d 0x00080000;",
    "begin_line": 316,
    "end_line": 316,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_EXPOSE",
    "snippet": "private static final int MASK_EXPOSE        \u003d 0x00100000;",
    "begin_line": 317,
    "end_line": 317,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_STRUCT",
    "snippet": "private static final int MASK_STRUCT        \u003d 0x00200000;",
    "begin_line": 318,
    "end_line": 318,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_DICT",
    "snippet": "private static final int MASK_DICT          \u003d 0x00400000;",
    "begin_line": 319,
    "end_line": 319,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_STALBEIDGEN",
    "snippet": "private static final int MASK_STALBEIDGEN   \u003d 0x00800000;",
    "begin_line": 320,
    "end_line": 320,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.MASK_TYPEFIELD",
    "snippet": "private static final int MASK_TYPEFIELD    \u003d 0xE0000000;",
    "begin_line": 324,
    "end_line": 324,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.TYPEFIELD_TYPE",
    "snippet": "private static final int TYPEFIELD_TYPE    \u003d 0x20000000;",
    "begin_line": 325,
    "end_line": 325,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.TYPEFIELD_RETURN",
    "snippet": "private static final int TYPEFIELD_RETURN  \u003d 0x40000000;",
    "begin_line": 326,
    "end_line": 326,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.TYPEFIELD_ENUM",
    "snippet": "private static final int TYPEFIELD_ENUM    \u003d 0x60000000;",
    "begin_line": 327,
    "end_line": 327,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfo",
    "src_path": "com/google/javascript/rhino/JSDocInfo.java",
    "signature": "com.google.javascript.rhino.JSDocInfo.TYPEFIELD_TYPEDEF",
    "snippet": "private static final int TYPEFIELD_TYPEDEF \u003d 0x80000000;",
    "begin_line": 328,
    "end_line": 328,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfoBuilder",
    "src_path": "com/google/javascript/rhino/JSDocInfoBuilder.java",
    "signature": "com.google.javascript.rhino.JSDocInfoBuilder.currentInfo",
    "snippet": "private JSDocInfo currentInfo;",
    "begin_line": 58,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfoBuilder",
    "src_path": "com/google/javascript/rhino/JSDocInfoBuilder.java",
    "signature": "com.google.javascript.rhino.JSDocInfoBuilder.populated",
    "snippet": "private boolean populated \u003d false;",
    "begin_line": 61,
    "end_line": 61,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfoBuilder",
    "src_path": "com/google/javascript/rhino/JSDocInfoBuilder.java",
    "signature": "com.google.javascript.rhino.JSDocInfoBuilder.parseDocumentation",
    "snippet": "private boolean parseDocumentation \u003d false;",
    "begin_line": 64,
    "end_line": 64,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSDocInfoBuilder",
    "src_path": "com/google/javascript/rhino/JSDocInfoBuilder.java",
    "signature": "com.google.javascript.rhino.JSDocInfoBuilder.currentMarker",
    "snippet": "private JSDocInfo.Marker currentMarker \u003d null;",
    "begin_line": 67,
    "end_line": 67,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSTypeExpression",
    "src_path": "com/google/javascript/rhino/JSTypeExpression.java",
    "signature": "com.google.javascript.rhino.JSTypeExpression.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.JSTypeExpression",
    "src_path": "com/google/javascript/rhino/JSTypeExpression.java",
    "signature": "com.google.javascript.rhino.JSTypeExpression.root",
    "snippet": "private final Node root;",
    "begin_line": 59,
    "end_line": 59,
    "comment": "/** \n * The root of the AST. \n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.JSTypeExpression",
    "src_path": "com/google/javascript/rhino/JSTypeExpression.java",
    "signature": "com.google.javascript.rhino.JSTypeExpression.sourceName",
    "snippet": "private final String sourceName;",
    "begin_line": 62,
    "end_line": 62,
    "comment": "/** \n * The source name where the type expression appears. \n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 65,
    "end_line": 65,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.JSDOC_INFO_PROP",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.VAR_ARGS_NAME",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.INCRDECR_PROP",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.QUOTED_PROP",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.OPT_ARG_NAME",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.SYNTHETIC_BLOCK_PROP",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.EMPTY_BLOCK",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.ORIGINALNAME_PROP",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.SIDE_EFFECT_FLAGS",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.IS_CONSTANT_NAME",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.IS_NAMESPACE",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.IS_DISPATCHER",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.DIRECTIVES",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.DIRECT_EVAL",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.FREE_CALL",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.STATIC_SOURCE_FILE",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.LENGTH",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.INPUT_ID",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.SLASH_V",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.INFERRED_FUNCTION",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.LAST_PROP",
    "snippet": "public static final int\n      JSDOC_INFO_PROP   \u003d 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     \u003d 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      \u003d 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        \u003d 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       \u003d 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP \u003d 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        \u003d 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  \u003d 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  \u003d 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   \u003d 43,    // The variable or property is constant.\n      IS_NAMESPACE       \u003d 46,    // The variable creates a namespace.\n      IS_DISPATCHER      \u003d 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         \u003d 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        \u003d 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          \u003d 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE \u003d 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             \u003d 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           \u003d 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            \u003d 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  \u003d 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      LAST_PROP          \u003d 55;",
    "begin_line": 67,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.DECR_FLAG",
    "snippet": "public static final int   // flags for INCRDECR_PROP\n      DECR_FLAG \u003d 0x1,\n      POST_FLAG \u003d 0x2;",
    "begin_line": 107,
    "end_line": 109,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.POST_FLAG",
    "snippet": "public static final int   // flags for INCRDECR_PROP\n      DECR_FLAG \u003d 0x1,\n      POST_FLAG \u003d 0x2;",
    "begin_line": 107,
    "end_line": 109,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 144,
    "end_line": 144,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.number",
    "snippet": "private double number;",
    "begin_line": 180,
    "end_line": 180,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 185,
    "end_line": 185,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.str",
    "snippet": "private String str;",
    "begin_line": 249,
    "end_line": 249,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 263,
    "end_line": 263,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.next",
    "snippet": "private final PropListItem next;",
    "begin_line": 265,
    "end_line": 265,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.propType",
    "snippet": "private final int propType;",
    "begin_line": 266,
    "end_line": 266,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 290,
    "end_line": 290,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.objectValue",
    "snippet": "private final Object objectValue;",
    "begin_line": 292,
    "end_line": 292,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 322,
    "end_line": 322,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.intValue",
    "snippet": "final int intValue;",
    "begin_line": 324,
    "end_line": 324,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.type",
    "snippet": " int type;",
    "begin_line": 1023,
    "end_line": 1023,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.next",
    "snippet": " Node next;",
    "begin_line": 1024,
    "end_line": 1024,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.first",
    "snippet": "private Node first;",
    "begin_line": 1025,
    "end_line": 1025,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.last",
    "snippet": "private Node last;",
    "begin_line": 1026,
    "end_line": 1026,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.propListHead",
    "snippet": "private PropListItem propListHead;",
    "begin_line": 1034,
    "end_line": 1034,
    "comment": "/** \n * Linked list of properties. Since vast majority of nodes would have no more then 2 properties, linked list saves memory and provides fast lookup. If this does not holds, propListHead can be replaced by UintMap.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.COLUMN_BITS",
    "snippet": "public static final int COLUMN_BITS \u003d 12;",
    "begin_line": 1044,
    "end_line": 1044,
    "comment": "/** \n * COLUMN_BITS represents how many of the lower-order bits of sourcePosition are reserved for storing the column number. Bits above these store the line number. This gives us decent position information for everything except files already passed through a minimizer, where lines might be longer than 4096 characters.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.MAX_COLUMN_NUMBER",
    "snippet": "public static final int MAX_COLUMN_NUMBER \u003d (1 \u003c\u003c COLUMN_BITS) - 1;",
    "begin_line": 1051,
    "end_line": 1051,
    "comment": "/** \n * MAX_COLUMN_NUMBER represents the maximum column number that can be represented.  JSCompiler\u0027s modifications to Rhino cause all tokens located beyond the maximum column to MAX_COLUMN_NUMBER.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.COLUMN_MASK",
    "snippet": "public static final int COLUMN_MASK \u003d MAX_COLUMN_NUMBER;",
    "begin_line": 1058,
    "end_line": 1058,
    "comment": "/** \n * COLUMN_MASK stores a value where bits storing the column number are set, and bits storing the line are not set.  It\u0027s handy for separating column number from line number.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.sourcePosition",
    "snippet": "private int sourcePosition;",
    "begin_line": 1066,
    "end_line": 1066,
    "comment": "/** \n * Source position of this node. The position is encoded with the column number in the low 12 bits of the integer, and the line number in the rest.  Create some handy constants so we can change this size if we want.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.jsType",
    "snippet": "private JSType jsType;",
    "begin_line": 1068,
    "end_line": 1068,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.parent",
    "snippet": "private Node parent;",
    "begin_line": 1070,
    "end_line": 1070,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.start",
    "snippet": "private final Node start;",
    "begin_line": 1248,
    "end_line": 1248,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.current",
    "snippet": "private Node current;",
    "begin_line": 1249,
    "end_line": 1249,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.used",
    "snippet": "private boolean used;",
    "begin_line": 1250,
    "end_line": 1250,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.cur",
    "snippet": "private Node cur;",
    "begin_line": 1333,
    "end_line": 1333,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.FLAG_GLOBAL_STATE_UNMODIFIED",
    "snippet": "final public static int FLAG_GLOBAL_STATE_UNMODIFIED \u003d 1;",
    "begin_line": 1965,
    "end_line": 1965,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.FLAG_THIS_UNMODIFIED",
    "snippet": "final public static int FLAG_THIS_UNMODIFIED \u003d 2;",
    "begin_line": 1966,
    "end_line": 1966,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.FLAG_ARGUMENTS_UNMODIFIED",
    "snippet": "final public static int FLAG_ARGUMENTS_UNMODIFIED \u003d 4;",
    "begin_line": 1967,
    "end_line": 1967,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.FLAG_NO_THROWS",
    "snippet": "final public static int FLAG_NO_THROWS \u003d 8;",
    "begin_line": 1968,
    "end_line": 1968,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.FLAG_LOCAL_RESULTS",
    "snippet": "final public static int FLAG_LOCAL_RESULTS \u003d 16;",
    "begin_line": 1969,
    "end_line": 1969,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.SIDE_EFFECTS_FLAGS_MASK",
    "snippet": "final public static int SIDE_EFFECTS_FLAGS_MASK \u003d 31;",
    "begin_line": 1971,
    "end_line": 1971,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.SIDE_EFFECTS_ALL",
    "snippet": "final public static int SIDE_EFFECTS_ALL \u003d 0;",
    "begin_line": 1973,
    "end_line": 1973,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.NO_SIDE_EFFECTS",
    "snippet": "final public static int NO_SIDE_EFFECTS \u003d\n    FLAG_GLOBAL_STATE_UNMODIFIED\n    | FLAG_THIS_UNMODIFIED\n    | FLAG_ARGUMENTS_UNMODIFIED\n    | FLAG_NO_THROWS;",
    "begin_line": 1974,
    "end_line": 1978,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.value",
    "snippet": "private int value \u003d Node.SIDE_EFFECTS_ALL;",
    "begin_line": 2010,
    "end_line": 2010,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.nodeA",
    "snippet": "final Node nodeA;",
    "begin_line": 2123,
    "end_line": 2123,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.Node",
    "src_path": "com/google/javascript/rhino/Node.java",
    "signature": "com.google.javascript.rhino.Node.nodeB",
    "snippet": "final Node nodeB;",
    "begin_line": 2124,
    "end_line": 2124,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.ScriptRuntime",
    "src_path": "com/google/javascript/rhino/ScriptRuntime.java",
    "signature": "com.google.javascript.rhino.ScriptRuntime.NaN",
    "snippet": "public static final double\n        NaN \u003d Double.longBitsToDouble(0x7ff8000000000000L);",
    "begin_line": 80,
    "end_line": 81,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.ScriptRuntime",
    "src_path": "com/google/javascript/rhino/ScriptRuntime.java",
    "signature": "com.google.javascript.rhino.ScriptRuntime.negativeZero",
    "snippet": "public static final double\n        negativeZero \u003d Double.longBitsToDouble(0x8000000000000000L);",
    "begin_line": 84,
    "end_line": 85,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.AllType",
    "src_path": "com/google/javascript/rhino/jstype/AllType.java",
    "signature": "com.google.javascript.rhino.jstype.AllType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 50,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.ArrowType",
    "src_path": "com/google/javascript/rhino/jstype/ArrowType.java",
    "signature": "com.google.javascript.rhino.jstype.ArrowType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 54,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.ArrowType",
    "src_path": "com/google/javascript/rhino/jstype/ArrowType.java",
    "signature": "com.google.javascript.rhino.jstype.ArrowType.parameters",
    "snippet": "final Node parameters;",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.ArrowType",
    "src_path": "com/google/javascript/rhino/jstype/ArrowType.java",
    "signature": "com.google.javascript.rhino.jstype.ArrowType.returnType",
    "snippet": " JSType returnType;",
    "begin_line": 57,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.ArrowType",
    "src_path": "com/google/javascript/rhino/jstype/ArrowType.java",
    "signature": "com.google.javascript.rhino.jstype.ArrowType.returnTypeInferred",
    "snippet": "final boolean returnTypeInferred;",
    "begin_line": 60,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.BooleanType",
    "src_path": "com/google/javascript/rhino/jstype/BooleanType.java",
    "signature": "com.google.javascript.rhino.jstype.BooleanType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 50,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.ErrorFunctionType",
    "src_path": "com/google/javascript/rhino/jstype/ErrorFunctionType.java",
    "signature": "com.google.javascript.rhino.jstype.ErrorFunctionType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 48,
    "end_line": 48,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionBuilder",
    "src_path": "com/google/javascript/rhino/jstype/FunctionBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionBuilder.registry",
    "snippet": "private final JSTypeRegistry registry;",
    "begin_line": 54,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionBuilder",
    "src_path": "com/google/javascript/rhino/jstype/FunctionBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionBuilder.name",
    "snippet": "private String name \u003d null;",
    "begin_line": 55,
    "end_line": 55,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionBuilder",
    "src_path": "com/google/javascript/rhino/jstype/FunctionBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionBuilder.sourceNode",
    "snippet": "private Node sourceNode \u003d null;",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionBuilder",
    "src_path": "com/google/javascript/rhino/jstype/FunctionBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionBuilder.parametersNode",
    "snippet": "private Node parametersNode \u003d null;",
    "begin_line": 57,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionBuilder",
    "src_path": "com/google/javascript/rhino/jstype/FunctionBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionBuilder.returnType",
    "snippet": "private JSType returnType \u003d null;",
    "begin_line": 58,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionBuilder",
    "src_path": "com/google/javascript/rhino/jstype/FunctionBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionBuilder.typeOfThis",
    "snippet": "private JSType typeOfThis \u003d null;",
    "begin_line": 59,
    "end_line": 59,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionBuilder",
    "src_path": "com/google/javascript/rhino/jstype/FunctionBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionBuilder.templateKeys",
    "snippet": "private ImmutableList\u003cString\u003e templateKeys \u003d ImmutableList.of();",
    "begin_line": 60,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionBuilder",
    "src_path": "com/google/javascript/rhino/jstype/FunctionBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionBuilder.inferredReturnType",
    "snippet": "private boolean inferredReturnType \u003d false;",
    "begin_line": 61,
    "end_line": 61,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionBuilder",
    "src_path": "com/google/javascript/rhino/jstype/FunctionBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionBuilder.isConstructor",
    "snippet": "private boolean isConstructor \u003d false;",
    "begin_line": 62,
    "end_line": 62,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionBuilder",
    "src_path": "com/google/javascript/rhino/jstype/FunctionBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionBuilder.isNativeType",
    "snippet": "private boolean isNativeType \u003d false;",
    "begin_line": 63,
    "end_line": 63,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionParamBuilder",
    "src_path": "com/google/javascript/rhino/jstype/FunctionParamBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionParamBuilder.registry",
    "snippet": "private final JSTypeRegistry registry;",
    "begin_line": 51,
    "end_line": 51,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionParamBuilder",
    "src_path": "com/google/javascript/rhino/jstype/FunctionParamBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionParamBuilder.root",
    "snippet": "private final Node root \u003d new Node(Token.PARAM_LIST);",
    "begin_line": 52,
    "end_line": 52,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionType",
    "src_path": "com/google/javascript/rhino/jstype/FunctionType.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 67,
    "end_line": 67,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionType",
    "src_path": "com/google/javascript/rhino/jstype/FunctionType.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionType.call",
    "snippet": "private ArrowType call;",
    "begin_line": 81,
    "end_line": 81,
    "comment": "/** \n * {@code [[Call]]} property.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionType",
    "src_path": "com/google/javascript/rhino/jstype/FunctionType.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionType.prototypeSlot",
    "snippet": "private Property prototypeSlot;",
    "begin_line": 92,
    "end_line": 92,
    "comment": "/** \n * The  {@code prototype} property. This field is lazily initialized by{@code #getPrototype()}. The most important reason for lazily initializing this field is that there are cycles in the native types graph, so some prototypes must temporarily be  {@code null} duringthe construction of the graph. If non-null, the type must be a PrototypeObjectType.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionType",
    "src_path": "com/google/javascript/rhino/jstype/FunctionType.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionType.kind",
    "snippet": "private final Kind kind;",
    "begin_line": 98,
    "end_line": 98,
    "comment": "/** \n * Whether a function is a constructor, an interface, or just an ordinary function.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionType",
    "src_path": "com/google/javascript/rhino/jstype/FunctionType.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionType.propAccess",
    "snippet": "private PropAccess propAccess;",
    "begin_line": 103,
    "end_line": 103,
    "comment": "/** \n * Whether the instances are structs, dicts, or unrestricted.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionType",
    "src_path": "com/google/javascript/rhino/jstype/FunctionType.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionType.typeOfThis",
    "snippet": "private JSType typeOfThis;",
    "begin_line": 108,
    "end_line": 108,
    "comment": "/** \n * The type of  {@code this} in the scope of this function.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionType",
    "src_path": "com/google/javascript/rhino/jstype/FunctionType.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionType.source",
    "snippet": "private Node source;",
    "begin_line": 113,
    "end_line": 113,
    "comment": "/** \n * The function node which this type represents. It may be  {@code null}.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionType",
    "src_path": "com/google/javascript/rhino/jstype/FunctionType.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionType.implementedInterfaces",
    "snippet": "private List\u003cObjectType\u003e implementedInterfaces \u003d ImmutableList.of();",
    "begin_line": 119,
    "end_line": 119,
    "comment": "/** \n * The interfaces directly implemented by this function (for constructors) It is only relevant for constructors. May not be  {@code null}.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionType",
    "src_path": "com/google/javascript/rhino/jstype/FunctionType.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionType.extendedInterfaces",
    "snippet": "private List\u003cObjectType\u003e extendedInterfaces \u003d ImmutableList.of();",
    "begin_line": 125,
    "end_line": 125,
    "comment": "/** \n * The interfaces directly extended by this function (for interfaces) It is only relevant for constructors. May not be  {@code null}.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.FunctionType",
    "src_path": "com/google/javascript/rhino/jstype/FunctionType.java",
    "signature": "com.google.javascript.rhino.jstype.FunctionType.subTypes",
    "snippet": "private List\u003cFunctionType\u003e subTypes;",
    "begin_line": 131,
    "end_line": 131,
    "comment": "/** \n * The types which are subtypes of this function. It is only relevant for constructors and may be  {@code null}.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.InstanceObjectType",
    "src_path": "com/google/javascript/rhino/jstype/InstanceObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.InstanceObjectType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 52,
    "end_line": 52,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.InstanceObjectType",
    "src_path": "com/google/javascript/rhino/jstype/InstanceObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.InstanceObjectType.constructor",
    "snippet": "private final FunctionType constructor;",
    "begin_line": 54,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 69,
    "end_line": 69,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.resolved",
    "snippet": "private boolean resolved \u003d false;",
    "begin_line": 71,
    "end_line": 71,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.resolveResult",
    "snippet": "private JSType resolveResult \u003d null;",
    "begin_line": 72,
    "end_line": 72,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.templateKeys",
    "snippet": "private final ImmutableList\u003cString\u003e templateKeys;",
    "begin_line": 73,
    "end_line": 73,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.templatizedTypes",
    "snippet": "private final ImmutableList\u003cJSType\u003e templatizedTypes;",
    "begin_line": 74,
    "end_line": 74,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.inTemplatedCheckVisit",
    "snippet": "private boolean inTemplatedCheckVisit \u003d false;",
    "begin_line": 76,
    "end_line": 76,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.CAN_CAST_TO_VISITOR",
    "snippet": "private static final CanCastToVisitor CAN_CAST_TO_VISITOR \u003d\n      new CanCastToVisitor();",
    "begin_line": 77,
    "end_line": 78,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.UNKNOWN_NAME",
    "snippet": "public static final String UNKNOWN_NAME \u003d\n      \"Unknown class name\";",
    "begin_line": 80,
    "end_line": 81,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.NOT_A_CLASS",
    "snippet": "public static final String NOT_A_CLASS \u003d\n      \"Not declared as a constructor\";",
    "begin_line": 83,
    "end_line": 84,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.NOT_A_TYPE",
    "snippet": "public static final String NOT_A_TYPE \u003d\n      \"Not declared as a type name\";",
    "begin_line": 86,
    "end_line": 87,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.EMPTY_TYPE_COMPONENT",
    "snippet": "public static final String EMPTY_TYPE_COMPONENT \u003d\n      \"Named type with empty name component\";",
    "begin_line": 89,
    "end_line": 90,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.ALPHA",
    "snippet": "static final Comparator\u003cJSType\u003e ALPHA \u003d new Comparator\u003cJSType\u003e() {\n    @Override\n    public int compare(JSType t1, JSType t2) {\n      return t1.toString().compareTo(t2.toString());\n    }\n  };",
    "begin_line": 97,
    "end_line": 102,
    "comment": "/** \n * Total ordering on types based on their textual representation. This is used to have a deterministic output of the toString method of the union type since this output is used in tests.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.ENUMDECL",
    "snippet": "public static final int ENUMDECL \u003d 1;",
    "begin_line": 105,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.NOT_ENUMDECL",
    "snippet": "public static final int NOT_ENUMDECL \u003d 0;",
    "begin_line": 106,
    "end_line": 106,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.registry",
    "snippet": "final JSTypeRegistry registry;",
    "begin_line": 108,
    "end_line": 108,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.typeA",
    "snippet": "public final JSType typeA;",
    "begin_line": 1475,
    "end_line": 1475,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSType",
    "src_path": "com/google/javascript/rhino/jstype/JSType.java",
    "signature": "com.google.javascript.rhino.jstype.JSType.typeB",
    "snippet": "public final JSType typeB;",
    "begin_line": 1476,
    "end_line": 1476,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 78,
    "end_line": 78,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.PROPERTY_CHECKING_UNION_SIZE",
    "snippet": "private static final int PROPERTY_CHECKING_UNION_SIZE \u003d 3000;",
    "begin_line": 87,
    "end_line": 87,
    "comment": "/** \n * The UnionTypeBuilder caps the maximum number of alternate types it remembers and then defaults to \"?\" (unknown type). By default this max is 20, but it\u0027s very easy for the same property to appear on more than 20 types. Use larger unions for property checking. 3000 was picked semi-randomly for use by the Google+ FE project.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.reporter",
    "snippet": "private final transient ErrorReporter reporter;",
    "begin_line": 94,
    "end_line": 94,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.nativeTypes",
    "snippet": "private final JSType[] nativeTypes;",
    "begin_line": 99,
    "end_line": 99,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.namesToTypes",
    "snippet": "private final Map\u003cString, JSType\u003e namesToTypes;",
    "begin_line": 101,
    "end_line": 101,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.namespaces",
    "snippet": "private final Set\u003cString\u003e namespaces \u003d new HashSet\u003cString\u003e();",
    "begin_line": 104,
    "end_line": 104,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.nonNullableTypeNames",
    "snippet": "private final Set\u003cString\u003e nonNullableTypeNames \u003d new HashSet\u003cString\u003e();",
    "begin_line": 119,
    "end_line": 119,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.forwardDeclaredTypes",
    "snippet": "private final Set\u003cString\u003e forwardDeclaredTypes \u003d new HashSet\u003cString\u003e();",
    "begin_line": 124,
    "end_line": 124,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.typesIndexedByProperty",
    "snippet": "private final Map\u003cString, UnionTypeBuilder\u003e typesIndexedByProperty \u003d\n      Maps.newHashMap();",
    "begin_line": 128,
    "end_line": 129,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.eachRefTypeIndexedByProperty",
    "snippet": "private final Map\u003cString, Map\u003cString, ObjectType\u003e\u003e\n      eachRefTypeIndexedByProperty \u003d Maps.newHashMap();",
    "begin_line": 134,
    "end_line": 135,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.greatestSubtypeByProperty",
    "snippet": "private final Map\u003cString, JSType\u003e greatestSubtypeByProperty \u003d\n      Maps.newHashMap();",
    "begin_line": 140,
    "end_line": 141,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.interfaceToImplementors",
    "snippet": "private final Multimap\u003cString, FunctionType\u003e interfaceToImplementors \u003d\n      LinkedHashMultimap.create();",
    "begin_line": 144,
    "end_line": 145,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.unresolvedNamedTypes",
    "snippet": "private final Multimap\u003cStaticScope\u003cJSType\u003e, NamedType\u003e unresolvedNamedTypes \u003d\n      ArrayListMultimap.create();",
    "begin_line": 148,
    "end_line": 149,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.resolvedNamedTypes",
    "snippet": "private final Multimap\u003cStaticScope\u003cJSType\u003e, NamedType\u003e resolvedNamedTypes \u003d\n      ArrayListMultimap.create();",
    "begin_line": 152,
    "end_line": 153,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.lastGeneration",
    "snippet": "private boolean lastGeneration \u003d true;",
    "begin_line": 156,
    "end_line": 156,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.templateTypes",
    "snippet": "private Map\u003cString, TemplateType\u003e templateTypes \u003d Maps.newHashMap();",
    "begin_line": 159,
    "end_line": 159,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.tolerateUndefinedValues",
    "snippet": "private final boolean tolerateUndefinedValues;",
    "begin_line": 161,
    "end_line": 161,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.resolveMode",
    "snippet": "private ResolveMode resolveMode \u003d ResolveMode.LAZY_NAMES;",
    "begin_line": 191,
    "end_line": 191,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.JSTypeRegistry",
    "src_path": "com/google/javascript/rhino/jstype/JSTypeRegistry.java",
    "signature": "com.google.javascript.rhino.jstype.JSTypeRegistry.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 524,
    "end_line": 524,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NamedType",
    "src_path": "com/google/javascript/rhino/jstype/NamedType.java",
    "signature": "com.google.javascript.rhino.jstype.NamedType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 83,
    "end_line": 83,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NamedType",
    "src_path": "com/google/javascript/rhino/jstype/NamedType.java",
    "signature": "com.google.javascript.rhino.jstype.NamedType.reference",
    "snippet": "private final String reference;",
    "begin_line": 85,
    "end_line": 85,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NamedType",
    "src_path": "com/google/javascript/rhino/jstype/NamedType.java",
    "signature": "com.google.javascript.rhino.jstype.NamedType.sourceName",
    "snippet": "private final String sourceName;",
    "begin_line": 86,
    "end_line": 86,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NamedType",
    "src_path": "com/google/javascript/rhino/jstype/NamedType.java",
    "signature": "com.google.javascript.rhino.jstype.NamedType.lineno",
    "snippet": "private final int lineno;",
    "begin_line": 87,
    "end_line": 87,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NamedType",
    "src_path": "com/google/javascript/rhino/jstype/NamedType.java",
    "signature": "com.google.javascript.rhino.jstype.NamedType.charno",
    "snippet": "private final int charno;",
    "begin_line": 88,
    "end_line": 88,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NamedType",
    "src_path": "com/google/javascript/rhino/jstype/NamedType.java",
    "signature": "com.google.javascript.rhino.jstype.NamedType.validator",
    "snippet": "private Predicate\u003cJSType\u003e validator;",
    "begin_line": 93,
    "end_line": 93,
    "comment": "/** \n * Validates the type resolution.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NamedType",
    "src_path": "com/google/javascript/rhino/jstype/NamedType.java",
    "signature": "com.google.javascript.rhino.jstype.NamedType.propertyContinuations",
    "snippet": "private List\u003cPropertyContinuation\u003e propertyContinuations \u003d null;",
    "begin_line": 98,
    "end_line": 98,
    "comment": "/** \n * Property-defining continuations.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NamedType",
    "src_path": "com/google/javascript/rhino/jstype/NamedType.java",
    "signature": "com.google.javascript.rhino.jstype.NamedType.propertyName",
    "snippet": "private final String propertyName;",
    "begin_line": 387,
    "end_line": 387,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NamedType",
    "src_path": "com/google/javascript/rhino/jstype/NamedType.java",
    "signature": "com.google.javascript.rhino.jstype.NamedType.type",
    "snippet": "private final JSType type;",
    "begin_line": 388,
    "end_line": 388,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NamedType",
    "src_path": "com/google/javascript/rhino/jstype/NamedType.java",
    "signature": "com.google.javascript.rhino.jstype.NamedType.inferred",
    "snippet": "private final boolean inferred;",
    "begin_line": 389,
    "end_line": 389,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NamedType",
    "src_path": "com/google/javascript/rhino/jstype/NamedType.java",
    "signature": "com.google.javascript.rhino.jstype.NamedType.propertyNode",
    "snippet": "private final Node propertyNode;",
    "begin_line": 390,
    "end_line": 390,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NoObjectType",
    "src_path": "com/google/javascript/rhino/jstype/NoObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.NoObjectType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 64,
    "end_line": 64,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NoResolvedType",
    "src_path": "com/google/javascript/rhino/jstype/NoResolvedType.java",
    "signature": "com.google.javascript.rhino.jstype.NoResolvedType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NoType",
    "src_path": "com/google/javascript/rhino/jstype/NoType.java",
    "signature": "com.google.javascript.rhino.jstype.NoType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 62,
    "end_line": 62,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NullType",
    "src_path": "com/google/javascript/rhino/jstype/NullType.java",
    "signature": "com.google.javascript.rhino.jstype.NullType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 51,
    "end_line": 51,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.NumberType",
    "src_path": "com/google/javascript/rhino/jstype/NumberType.java",
    "signature": "com.google.javascript.rhino.jstype.NumberType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 50,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.ObjectType",
    "src_path": "com/google/javascript/rhino/jstype/ObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.ObjectType.visited",
    "snippet": "private boolean visited;",
    "begin_line": 83,
    "end_line": 83,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.ObjectType",
    "src_path": "com/google/javascript/rhino/jstype/ObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.ObjectType.docInfo",
    "snippet": "private JSDocInfo docInfo \u003d null;",
    "begin_line": 84,
    "end_line": 84,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.ObjectType",
    "src_path": "com/google/javascript/rhino/jstype/ObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.ObjectType.unknown",
    "snippet": "private boolean unknown \u003d true;",
    "begin_line": 85,
    "end_line": 85,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.Property",
    "src_path": "com/google/javascript/rhino/jstype/Property.java",
    "signature": "com.google.javascript.rhino.jstype.Property.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 53,
    "end_line": 53,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.Property",
    "src_path": "com/google/javascript/rhino/jstype/Property.java",
    "signature": "com.google.javascript.rhino.jstype.Property.name",
    "snippet": "private final String name;",
    "begin_line": 58,
    "end_line": 58,
    "comment": "/** \n * Property\u0027s name.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.Property",
    "src_path": "com/google/javascript/rhino/jstype/Property.java",
    "signature": "com.google.javascript.rhino.jstype.Property.type",
    "snippet": "private JSType type;",
    "begin_line": 63,
    "end_line": 63,
    "comment": "/** \n * Property\u0027s type.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.Property",
    "src_path": "com/google/javascript/rhino/jstype/Property.java",
    "signature": "com.google.javascript.rhino.jstype.Property.inferred",
    "snippet": "private final boolean inferred;",
    "begin_line": 68,
    "end_line": 68,
    "comment": "/** \n * Whether the property\u0027s type is inferred.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.Property",
    "src_path": "com/google/javascript/rhino/jstype/Property.java",
    "signature": "com.google.javascript.rhino.jstype.Property.propertyNode",
    "snippet": "private Node propertyNode;",
    "begin_line": 74,
    "end_line": 74,
    "comment": "/** \n * The node corresponding to this property, e.g., a GETPROP node that declares this property.\n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.Property",
    "src_path": "com/google/javascript/rhino/jstype/Property.java",
    "signature": "com.google.javascript.rhino.jstype.Property.docInfo",
    "snippet": "private JSDocInfo docInfo \u003d null;",
    "begin_line": 77,
    "end_line": 77,
    "comment": "/** \n * The JSDocInfo for this property. \n */\n"
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PropertyMap",
    "src_path": "com/google/javascript/rhino/jstype/PropertyMap.java",
    "signature": "com.google.javascript.rhino.jstype.PropertyMap.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 58,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PropertyMap",
    "src_path": "com/google/javascript/rhino/jstype/PropertyMap.java",
    "signature": "com.google.javascript.rhino.jstype.PropertyMap.EMPTY_MAP",
    "snippet": "private static final PropertyMap EMPTY_MAP \u003d new PropertyMap(\n      ImmutableMap.\u003cString, Property\u003eof());",
    "begin_line": 60,
    "end_line": 61,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PropertyMap",
    "src_path": "com/google/javascript/rhino/jstype/PropertyMap.java",
    "signature": "com.google.javascript.rhino.jstype.PropertyMap.PROP_MAP_FROM_TYPE",
    "snippet": "private static final Function\u003cObjectType, PropertyMap\u003e PROP_MAP_FROM_TYPE \u003d\n      new Function\u003cObjectType, PropertyMap\u003e() {\n    @Override public PropertyMap apply(ObjectType t) {\n      return t.getPropertyMap();\n    }\n  };",
    "begin_line": 63,
    "end_line": 68,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PropertyMap",
    "src_path": "com/google/javascript/rhino/jstype/PropertyMap.java",
    "signature": "com.google.javascript.rhino.jstype.PropertyMap.parentSource",
    "snippet": "private ObjectType parentSource \u003d null;",
    "begin_line": 74,
    "end_line": 74,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PropertyMap",
    "src_path": "com/google/javascript/rhino/jstype/PropertyMap.java",
    "signature": "com.google.javascript.rhino.jstype.PropertyMap.properties",
    "snippet": "private final Map\u003cString, Property\u003e properties;",
    "begin_line": 77,
    "end_line": 77,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PrototypeObjectType",
    "src_path": "com/google/javascript/rhino/jstype/PrototypeObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.PrototypeObjectType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 70,
    "end_line": 70,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PrototypeObjectType",
    "src_path": "com/google/javascript/rhino/jstype/PrototypeObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.PrototypeObjectType.className",
    "snippet": "private final String className;",
    "begin_line": 72,
    "end_line": 72,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PrototypeObjectType",
    "src_path": "com/google/javascript/rhino/jstype/PrototypeObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.PrototypeObjectType.properties",
    "snippet": "private final PropertyMap properties;",
    "begin_line": 73,
    "end_line": 73,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PrototypeObjectType",
    "src_path": "com/google/javascript/rhino/jstype/PrototypeObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.PrototypeObjectType.nativeType",
    "snippet": "private final boolean nativeType;",
    "begin_line": 74,
    "end_line": 74,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PrototypeObjectType",
    "src_path": "com/google/javascript/rhino/jstype/PrototypeObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.PrototypeObjectType.implicitPrototypeFallback",
    "snippet": "private ObjectType implicitPrototypeFallback;",
    "begin_line": 79,
    "end_line": 79,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PrototypeObjectType",
    "src_path": "com/google/javascript/rhino/jstype/PrototypeObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.PrototypeObjectType.ownerFunction",
    "snippet": "private FunctionType ownerFunction \u003d null;",
    "begin_line": 84,
    "end_line": 84,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PrototypeObjectType",
    "src_path": "com/google/javascript/rhino/jstype/PrototypeObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.PrototypeObjectType.prettyPrint",
    "snippet": "private boolean prettyPrint \u003d false;",
    "begin_line": 88,
    "end_line": 88,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.PrototypeObjectType",
    "src_path": "com/google/javascript/rhino/jstype/PrototypeObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.PrototypeObjectType.MAX_PRETTY_PRINTED_PROPERTIES",
    "snippet": "private static final int MAX_PRETTY_PRINTED_PROPERTIES \u003d 4;",
    "begin_line": 90,
    "end_line": 90,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.ProxyObjectType",
    "src_path": "com/google/javascript/rhino/jstype/ProxyObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.ProxyObjectType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.ProxyObjectType",
    "src_path": "com/google/javascript/rhino/jstype/ProxyObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.ProxyObjectType.referencedType",
    "snippet": "private JSType referencedType;",
    "begin_line": 58,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.ProxyObjectType",
    "src_path": "com/google/javascript/rhino/jstype/ProxyObjectType.java",
    "signature": "com.google.javascript.rhino.jstype.ProxyObjectType.referencedObjType",
    "snippet": "private ObjectType referencedObjType;",
    "begin_line": 59,
    "end_line": 59,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.StringType",
    "src_path": "com/google/javascript/rhino/jstype/StringType.java",
    "signature": "com.google.javascript.rhino.jstype.StringType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 50,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionType",
    "src_path": "com/google/javascript/rhino/jstype/UnionType.java",
    "signature": "com.google.javascript.rhino.jstype.UnionType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 71,
    "end_line": 71,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionType",
    "src_path": "com/google/javascript/rhino/jstype/UnionType.java",
    "signature": "com.google.javascript.rhino.jstype.UnionType.alternates",
    "snippet": " Collection\u003cJSType\u003e alternates;",
    "begin_line": 73,
    "end_line": 73,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionType",
    "src_path": "com/google/javascript/rhino/jstype/UnionType.java",
    "signature": "com.google.javascript.rhino.jstype.UnionType.hashcode",
    "snippet": "private final int hashcode;",
    "begin_line": 74,
    "end_line": 74,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionTypeBuilder",
    "src_path": "com/google/javascript/rhino/jstype/UnionTypeBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.UnionTypeBuilder.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 63,
    "end_line": 63,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionTypeBuilder",
    "src_path": "com/google/javascript/rhino/jstype/UnionTypeBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.UnionTypeBuilder.DEFAULT_MAX_UNION_SIZE",
    "snippet": "private static final int DEFAULT_MAX_UNION_SIZE \u003d 20;",
    "begin_line": 67,
    "end_line": 67,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionTypeBuilder",
    "src_path": "com/google/javascript/rhino/jstype/UnionTypeBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.UnionTypeBuilder.registry",
    "snippet": "private final JSTypeRegistry registry;",
    "begin_line": 69,
    "end_line": 69,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionTypeBuilder",
    "src_path": "com/google/javascript/rhino/jstype/UnionTypeBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.UnionTypeBuilder.alternates",
    "snippet": "private final List\u003cJSType\u003e alternates \u003d Lists.newArrayList();",
    "begin_line": 70,
    "end_line": 70,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionTypeBuilder",
    "src_path": "com/google/javascript/rhino/jstype/UnionTypeBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.UnionTypeBuilder.isAllType",
    "snippet": "private boolean isAllType \u003d false;",
    "begin_line": 71,
    "end_line": 71,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionTypeBuilder",
    "src_path": "com/google/javascript/rhino/jstype/UnionTypeBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.UnionTypeBuilder.isNativeUnknownType",
    "snippet": "private boolean isNativeUnknownType \u003d false;",
    "begin_line": 72,
    "end_line": 72,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionTypeBuilder",
    "src_path": "com/google/javascript/rhino/jstype/UnionTypeBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.UnionTypeBuilder.areAllUnknownsChecked",
    "snippet": "private boolean areAllUnknownsChecked \u003d true;",
    "begin_line": 73,
    "end_line": 73,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionTypeBuilder",
    "src_path": "com/google/javascript/rhino/jstype/UnionTypeBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.UnionTypeBuilder.maxUnionSize",
    "snippet": "private final int maxUnionSize;",
    "begin_line": 74,
    "end_line": 74,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionTypeBuilder",
    "src_path": "com/google/javascript/rhino/jstype/UnionTypeBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.UnionTypeBuilder.functionTypePosition",
    "snippet": "private int functionTypePosition \u003d -1;",
    "begin_line": 94,
    "end_line": 94,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnionTypeBuilder",
    "src_path": "com/google/javascript/rhino/jstype/UnionTypeBuilder.java",
    "signature": "com.google.javascript.rhino.jstype.UnionTypeBuilder.result",
    "snippet": "private JSType result \u003d null;",
    "begin_line": 97,
    "end_line": 97,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnknownType",
    "src_path": "com/google/javascript/rhino/jstype/UnknownType.java",
    "signature": "com.google.javascript.rhino.jstype.UnknownType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 51,
    "end_line": 51,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.UnknownType",
    "src_path": "com/google/javascript/rhino/jstype/UnknownType.java",
    "signature": "com.google.javascript.rhino.jstype.UnknownType.isChecked",
    "snippet": "private final boolean isChecked;",
    "begin_line": 54,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.google.javascript.rhino.jstype.VoidType",
    "src_path": "com/google/javascript/rhino/jstype/VoidType.java",
    "signature": "com.google.javascript.rhino.jstype.VoidType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 51,
    "end_line": 51,
    "comment": ""
  }
]