[
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.VERY_DARK_RED",
    "snippet": "public static final Color VERY_DARK_RED \u003d new Color(0x80, 0x00, 0x00);",
    "begin_line": 59,
    "end_line": 59,
    "comment": "/** \n * A very dark red color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.DARK_RED",
    "snippet": "public static final Color DARK_RED \u003d new Color(0xc0, 0x00, 0x00);",
    "begin_line": 62,
    "end_line": 62,
    "comment": "/** \n * A dark red color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.LIGHT_RED",
    "snippet": "public static final Color LIGHT_RED \u003d new Color(0xFF, 0x40, 0x40);",
    "begin_line": 65,
    "end_line": 65,
    "comment": "/** \n * A light red color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_RED",
    "snippet": "public static final Color VERY_LIGHT_RED \u003d new Color(0xFF, 0x80, 0x80);",
    "begin_line": 68,
    "end_line": 68,
    "comment": "/** \n * A very light red color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.VERY_DARK_YELLOW",
    "snippet": "public static final Color VERY_DARK_YELLOW \u003d new Color(0x80, 0x80, 0x00);",
    "begin_line": 71,
    "end_line": 71,
    "comment": "/** \n * A very dark yellow color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.DARK_YELLOW",
    "snippet": "public static final Color DARK_YELLOW \u003d new Color(0xC0, 0xC0, 0x00);",
    "begin_line": 74,
    "end_line": 74,
    "comment": "/** \n * A dark yellow color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.LIGHT_YELLOW",
    "snippet": "public static final Color LIGHT_YELLOW \u003d new Color(0xFF, 0xFF, 0x40);",
    "begin_line": 77,
    "end_line": 77,
    "comment": "/** \n * A light yellow color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_YELLOW",
    "snippet": "public static final Color VERY_LIGHT_YELLOW \u003d new Color(0xFF, 0xFF, 0x80);",
    "begin_line": 80,
    "end_line": 80,
    "comment": "/** \n * A very light yellow color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.VERY_DARK_GREEN",
    "snippet": "public static final Color VERY_DARK_GREEN \u003d new Color(0x00, 0x80, 0x00);",
    "begin_line": 83,
    "end_line": 83,
    "comment": "/** \n * A very dark green color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.DARK_GREEN",
    "snippet": "public static final Color DARK_GREEN \u003d new Color(0x00, 0xC0, 0x00);",
    "begin_line": 86,
    "end_line": 86,
    "comment": "/** \n * A dark green color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.LIGHT_GREEN",
    "snippet": "public static final Color LIGHT_GREEN \u003d new Color(0x40, 0xFF, 0x40);",
    "begin_line": 89,
    "end_line": 89,
    "comment": "/** \n * A light green color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_GREEN",
    "snippet": "public static final Color VERY_LIGHT_GREEN \u003d new Color(0x80, 0xFF, 0x80);",
    "begin_line": 92,
    "end_line": 92,
    "comment": "/** \n * A very light green color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.VERY_DARK_CYAN",
    "snippet": "public static final Color VERY_DARK_CYAN \u003d new Color(0x00, 0x80, 0x80);",
    "begin_line": 95,
    "end_line": 95,
    "comment": "/** \n * A very dark cyan color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.DARK_CYAN",
    "snippet": "public static final Color DARK_CYAN \u003d new Color(0x00, 0xC0, 0xC0);",
    "begin_line": 98,
    "end_line": 98,
    "comment": "/** \n * A dark cyan color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.LIGHT_CYAN",
    "snippet": "public static final Color LIGHT_CYAN \u003d new Color(0x40, 0xFF, 0xFF);",
    "begin_line": 101,
    "end_line": 101,
    "comment": "/** \n * A light cyan color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_CYAN",
    "snippet": "public static final Color VERY_LIGHT_CYAN \u003d new Color(0x80, 0xFF, 0xFF);",
    "begin_line": 104,
    "end_line": 104,
    "comment": "/** \n * Aa very light cyan color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.VERY_DARK_BLUE",
    "snippet": "public static final Color VERY_DARK_BLUE \u003d new Color(0x00, 0x00, 0x80);",
    "begin_line": 107,
    "end_line": 107,
    "comment": "/** \n * A very dark blue color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.DARK_BLUE",
    "snippet": "public static final Color DARK_BLUE \u003d new Color(0x00, 0x00, 0xC0);",
    "begin_line": 110,
    "end_line": 110,
    "comment": "/** \n * A dark blue color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.LIGHT_BLUE",
    "snippet": "public static final Color LIGHT_BLUE \u003d new Color(0x40, 0x40, 0xFF);",
    "begin_line": 113,
    "end_line": 113,
    "comment": "/** \n * A light blue color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_BLUE",
    "snippet": "public static final Color VERY_LIGHT_BLUE \u003d new Color(0x80, 0x80, 0xFF);",
    "begin_line": 116,
    "end_line": 116,
    "comment": "/** \n * A very light blue color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.VERY_DARK_MAGENTA",
    "snippet": "public static final Color VERY_DARK_MAGENTA \u003d new Color(0x80, 0x00, 0x80);",
    "begin_line": 119,
    "end_line": 119,
    "comment": "/** \n * A very dark magenta/purple color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.DARK_MAGENTA",
    "snippet": "public static final Color DARK_MAGENTA \u003d new Color(0xC0, 0x00, 0xC0);",
    "begin_line": 122,
    "end_line": 122,
    "comment": "/** \n * A dark magenta color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.LIGHT_MAGENTA",
    "snippet": "public static final Color LIGHT_MAGENTA \u003d new Color(0xFF, 0x40, 0xFF);",
    "begin_line": 125,
    "end_line": 125,
    "comment": "/** \n * A light magenta color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.ChartColor",
    "src_path": "org/jfree/chart/ChartColor.java",
    "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_MAGENTA",
    "snippet": "public static final Color VERY_LIGHT_MAGENTA \u003d new Color(0xFF, 0x80, 0xFF);",
    "begin_line": 128,
    "end_line": 128,
    "comment": "/** \n * A very light magenta color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.axis.AxisLocation",
    "src_path": "org/jfree/chart/axis/AxisLocation.java",
    "signature": "org.jfree.chart.axis.AxisLocation.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -3276922179323563410L;",
    "begin_line": 58,
    "end_line": 58,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.axis.AxisLocation",
    "src_path": "org/jfree/chart/axis/AxisLocation.java",
    "signature": "org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT",
    "snippet": "public static final AxisLocation TOP_OR_LEFT \u003d new AxisLocation(\r\n            \"AxisLocation.TOP_OR_LEFT\");",
    "begin_line": 61,
    "end_line": 62,
    "comment": "/** \n * Axis at the top or left. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.axis.AxisLocation",
    "src_path": "org/jfree/chart/axis/AxisLocation.java",
    "signature": "org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT",
    "snippet": "public static final AxisLocation TOP_OR_RIGHT \u003d new AxisLocation(\r\n            \"AxisLocation.TOP_OR_RIGHT\");",
    "begin_line": 65,
    "end_line": 66,
    "comment": "/** \n * Axis at the top or right. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.axis.AxisLocation",
    "src_path": "org/jfree/chart/axis/AxisLocation.java",
    "signature": "org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT",
    "snippet": "public static final AxisLocation BOTTOM_OR_LEFT \u003d new AxisLocation(\r\n            \"AxisLocation.BOTTOM_OR_LEFT\");",
    "begin_line": 69,
    "end_line": 70,
    "comment": "/** \n * Axis at the bottom or left. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.axis.AxisLocation",
    "src_path": "org/jfree/chart/axis/AxisLocation.java",
    "signature": "org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT",
    "snippet": "public static final AxisLocation BOTTOM_OR_RIGHT \u003d new AxisLocation(\r\n            \"AxisLocation.BOTTOM_OR_RIGHT\");",
    "begin_line": 73,
    "end_line": 74,
    "comment": "/** \n * Axis at the bottom or right. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.axis.AxisLocation",
    "src_path": "org/jfree/chart/axis/AxisLocation.java",
    "signature": "org.jfree.chart.axis.AxisLocation.name",
    "snippet": "private String name;",
    "begin_line": 77,
    "end_line": 77,
    "comment": "/** \n * The name. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.axis.CategoryAnchor",
    "src_path": "org/jfree/chart/axis/CategoryAnchor.java",
    "signature": "org.jfree.chart.axis.CategoryAnchor.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -2604142742210173810L;",
    "begin_line": 53,
    "end_line": 53,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.axis.CategoryAnchor",
    "src_path": "org/jfree/chart/axis/CategoryAnchor.java",
    "signature": "org.jfree.chart.axis.CategoryAnchor.START",
    "snippet": "public static final CategoryAnchor START \r\n        \u003d new CategoryAnchor(\"CategoryAnchor.START\");",
    "begin_line": 56,
    "end_line": 57,
    "comment": "/** \n * Start of period. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.axis.CategoryAnchor",
    "src_path": "org/jfree/chart/axis/CategoryAnchor.java",
    "signature": "org.jfree.chart.axis.CategoryAnchor.MIDDLE",
    "snippet": "public static final CategoryAnchor MIDDLE \r\n        \u003d new CategoryAnchor(\"CategoryAnchor.MIDDLE\");",
    "begin_line": 60,
    "end_line": 61,
    "comment": "/** \n * Middle of period. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.axis.CategoryAnchor",
    "src_path": "org/jfree/chart/axis/CategoryAnchor.java",
    "signature": "org.jfree.chart.axis.CategoryAnchor.END",
    "snippet": "public static final CategoryAnchor END \r\n        \u003d new CategoryAnchor(\"CategoryAnchor.END\");",
    "begin_line": 64,
    "end_line": 65,
    "comment": "/** \n * End of period. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.axis.CategoryAnchor",
    "src_path": "org/jfree/chart/axis/CategoryAnchor.java",
    "signature": "org.jfree.chart.axis.CategoryAnchor.name",
    "snippet": "private String name;",
    "begin_line": 68,
    "end_line": 68,
    "comment": "/** \n * The name. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.event.ChartChangeEvent",
    "src_path": "org/jfree/chart/event/ChartChangeEvent.java",
    "signature": "org.jfree.chart.event.ChartChangeEvent.type",
    "snippet": "private ChartChangeEventType type;",
    "begin_line": 57,
    "end_line": 57,
    "comment": "/** \n * The type of event. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.event.ChartChangeEvent",
    "src_path": "org/jfree/chart/event/ChartChangeEvent.java",
    "signature": "org.jfree.chart.event.ChartChangeEvent.chart",
    "snippet": "private JFreeChart chart;",
    "begin_line": 60,
    "end_line": 60,
    "comment": "/** \n * The chart that generated the event. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.event.ChartChangeEventType",
    "src_path": "org/jfree/chart/event/ChartChangeEventType.java",
    "signature": "org.jfree.chart.event.ChartChangeEventType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 5481917022435735602L;",
    "begin_line": 52,
    "end_line": 52,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.event.ChartChangeEventType",
    "src_path": "org/jfree/chart/event/ChartChangeEventType.java",
    "signature": "org.jfree.chart.event.ChartChangeEventType.GENERAL",
    "snippet": "public static final ChartChangeEventType GENERAL \r\n        \u003d new ChartChangeEventType(\"ChartChangeEventType.GENERAL\");",
    "begin_line": 55,
    "end_line": 56,
    "comment": "/** \n * GENERAL. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.event.ChartChangeEventType",
    "src_path": "org/jfree/chart/event/ChartChangeEventType.java",
    "signature": "org.jfree.chart.event.ChartChangeEventType.NEW_DATASET",
    "snippet": "public static final ChartChangeEventType NEW_DATASET \r\n        \u003d new ChartChangeEventType(\"ChartChangeEventType.NEW_DATASET\");",
    "begin_line": 59,
    "end_line": 60,
    "comment": "/** \n * NEW_DATASET. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.event.ChartChangeEventType",
    "src_path": "org/jfree/chart/event/ChartChangeEventType.java",
    "signature": "org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED",
    "snippet": "public static final ChartChangeEventType DATASET_UPDATED\r\n        \u003d new ChartChangeEventType(\"ChartChangeEventType.DATASET_UPDATED\");",
    "begin_line": 63,
    "end_line": 64,
    "comment": "/** \n * DATASET_UPDATED. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.event.ChartChangeEventType",
    "src_path": "org/jfree/chart/event/ChartChangeEventType.java",
    "signature": "org.jfree.chart.event.ChartChangeEventType.name",
    "snippet": "private String name;",
    "begin_line": 67,
    "end_line": 67,
    "comment": "/** \n * The name. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.event.MarkerChangeEvent",
    "src_path": "org/jfree/chart/event/MarkerChangeEvent.java",
    "signature": "org.jfree.chart.event.MarkerChangeEvent.marker",
    "snippet": "private Marker marker;",
    "begin_line": 54,
    "end_line": 54,
    "comment": "/** \n * The plot that generated the event. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.event.PlotChangeEvent",
    "src_path": "org/jfree/chart/event/PlotChangeEvent.java",
    "signature": "org.jfree.chart.event.PlotChangeEvent.plot",
    "snippet": "private Plot plot;",
    "begin_line": 56,
    "end_line": 56,
    "comment": "/** \n * The plot that generated the event. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryMarker",
    "src_path": "org/jfree/chart/plot/CategoryMarker.java",
    "signature": "org.jfree.chart.plot.CategoryMarker.key",
    "snippet": "private Comparable key;",
    "begin_line": 67,
    "end_line": 67,
    "comment": "/** \n * The category key. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryMarker",
    "src_path": "org/jfree/chart/plot/CategoryMarker.java",
    "signature": "org.jfree.chart.plot.CategoryMarker.drawAsLine",
    "snippet": "private boolean drawAsLine \u003d false;",
    "begin_line": 72,
    "end_line": 72,
    "comment": "/** \n * A hint that the marker should be drawn as a line rather than a region. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -3537691700434728188L;",
    "begin_line": 236,
    "end_line": 236,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE",
    "snippet": "public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE \u003d false;",
    "begin_line": 242,
    "end_line": 242,
    "comment": "/** \n * The default visibility of the grid lines plotted against the domain  axis. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE",
    "snippet": "public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE \u003d true;",
    "begin_line": 248,
    "end_line": 248,
    "comment": "/** \n * The default visibility of the grid lines plotted against the range  axis. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE",
    "snippet": "public static final Stroke DEFAULT_GRIDLINE_STROKE \u003d new BasicStroke(0.5f,\r\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] \r\n            {2.0f, 2.0f}, 0.0f);",
    "begin_line": 251,
    "end_line": 253,
    "comment": "/** \n * The default grid line stroke. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT",
    "snippet": "public static final Paint DEFAULT_GRIDLINE_PAINT \u003d Color.WHITE;",
    "begin_line": 256,
    "end_line": 256,
    "comment": "/** \n * The default grid line paint. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT",
    "snippet": "public static final Font DEFAULT_VALUE_LABEL_FONT \u003d new Font(\"SansSerif\", \r\n            Font.PLAIN, 10);",
    "begin_line": 259,
    "end_line": 260,
    "comment": "/** \n * The default value label font. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE",
    "snippet": "public static final boolean DEFAULT_CROSSHAIR_VISIBLE \u003d false;",
    "begin_line": 267,
    "end_line": 267,
    "comment": "/** \n * The default crosshair visibility. \n * @since 1.0.5\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE",
    "snippet": "public static final Stroke DEFAULT_CROSSHAIR_STROKE\r\n            \u003d DEFAULT_GRIDLINE_STROKE;",
    "begin_line": 274,
    "end_line": 275,
    "comment": "/** \n * The default crosshair stroke. \n * @since 1.0.5\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT",
    "snippet": "public static final Paint DEFAULT_CROSSHAIR_PAINT \u003d Color.blue;",
    "begin_line": 282,
    "end_line": 282,
    "comment": "/** \n * The default crosshair paint. \n * @since 1.0.5\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.localizationResources",
    "snippet": "protected static ResourceBundle localizationResources \r\n            \u003d ResourceBundle.getBundle(\r\n            \"org.jfree.chart.plot.LocalizationBundle\");",
    "begin_line": 285,
    "end_line": 287,
    "comment": "/** \n * The resourceBundle for the localization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.orientation",
    "snippet": "private PlotOrientation orientation;",
    "begin_line": 290,
    "end_line": 290,
    "comment": "/** \n * The plot orientation. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.axisOffset",
    "snippet": "private RectangleInsets axisOffset;",
    "begin_line": 293,
    "end_line": 293,
    "comment": "/** \n * The offset between the data area and the axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.domainAxes",
    "snippet": "private ObjectList domainAxes;",
    "begin_line": 296,
    "end_line": 296,
    "comment": "/** \n * Storage for the domain axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.domainAxisLocations",
    "snippet": "private ObjectList domainAxisLocations;",
    "begin_line": 299,
    "end_line": 299,
    "comment": "/** \n * Storage for the domain axis locations. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.drawSharedDomainAxis",
    "snippet": "private boolean drawSharedDomainAxis;",
    "begin_line": 305,
    "end_line": 305,
    "comment": "/** \n * A flag that controls whether or not the shared domain axis is drawn  (only relevant when the plot is being used as a subplot).\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.rangeAxes",
    "snippet": "private ObjectList rangeAxes;",
    "begin_line": 308,
    "end_line": 308,
    "comment": "/** \n * Storage for the range axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.rangeAxisLocations",
    "snippet": "private ObjectList rangeAxisLocations;",
    "begin_line": 311,
    "end_line": 311,
    "comment": "/** \n * Storage for the range axis locations. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.datasets",
    "snippet": "private ObjectList datasets;",
    "begin_line": 314,
    "end_line": 314,
    "comment": "/** \n * Storage for the datasets. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.datasetToDomainAxisMap",
    "snippet": "private ObjectList datasetToDomainAxisMap;",
    "begin_line": 317,
    "end_line": 317,
    "comment": "/** \n * Storage for keys that map datasets to domain axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.datasetToRangeAxisMap",
    "snippet": "private ObjectList datasetToRangeAxisMap;",
    "begin_line": 320,
    "end_line": 320,
    "comment": "/** \n * Storage for keys that map datasets to range axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.renderers",
    "snippet": "private ObjectList renderers;",
    "begin_line": 323,
    "end_line": 323,
    "comment": "/** \n * Storage for the renderers. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.renderingOrder",
    "snippet": "private DatasetRenderingOrder renderingOrder \r\n            \u003d DatasetRenderingOrder.REVERSE;",
    "begin_line": 326,
    "end_line": 327,
    "comment": "/** \n * The dataset rendering order. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.columnRenderingOrder",
    "snippet": "private SortOrder columnRenderingOrder \u003d SortOrder.ASCENDING;",
    "begin_line": 333,
    "end_line": 333,
    "comment": "/** \n * Controls the order in which the columns are traversed when rendering the  data items. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.rowRenderingOrder",
    "snippet": "private SortOrder rowRenderingOrder \u003d SortOrder.ASCENDING;",
    "begin_line": 339,
    "end_line": 339,
    "comment": "/** \n * Controls the order in which the rows are traversed when rendering the  data items. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.domainGridlinesVisible",
    "snippet": "private boolean domainGridlinesVisible;",
    "begin_line": 345,
    "end_line": 345,
    "comment": "/** \n * A flag that controls whether the grid-lines for the domain axis are  visible. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.domainGridlinePosition",
    "snippet": "private CategoryAnchor domainGridlinePosition;",
    "begin_line": 348,
    "end_line": 348,
    "comment": "/** \n * The position of the domain gridlines relative to the category. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.domainGridlineStroke",
    "snippet": "private transient Stroke domainGridlineStroke;",
    "begin_line": 351,
    "end_line": 351,
    "comment": "/** \n * The stroke used to draw the domain grid-lines. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.domainGridlinePaint",
    "snippet": "private transient Paint domainGridlinePaint;",
    "begin_line": 354,
    "end_line": 354,
    "comment": "/** \n * The paint used to draw the domain  grid-lines. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.rangeGridlinesVisible",
    "snippet": "private boolean rangeGridlinesVisible;",
    "begin_line": 360,
    "end_line": 360,
    "comment": "/** \n * A flag that controls whether the grid-lines for the range axis are  visible. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.rangeGridlineStroke",
    "snippet": "private transient Stroke rangeGridlineStroke;",
    "begin_line": 363,
    "end_line": 363,
    "comment": "/** \n * The stroke used to draw the range axis grid-lines. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.rangeGridlinePaint",
    "snippet": "private transient Paint rangeGridlinePaint;",
    "begin_line": 366,
    "end_line": 366,
    "comment": "/** \n * The paint used to draw the range axis grid-lines. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.anchorValue",
    "snippet": "private double anchorValue;",
    "begin_line": 369,
    "end_line": 369,
    "comment": "/** \n * The anchor value. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairVisible",
    "snippet": "private boolean rangeCrosshairVisible;",
    "begin_line": 372,
    "end_line": 372,
    "comment": "/** \n * A flag that controls whether or not a range crosshair is drawn. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairValue",
    "snippet": "private double rangeCrosshairValue;",
    "begin_line": 375,
    "end_line": 375,
    "comment": "/** \n * The range crosshair value. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairStroke",
    "snippet": "private transient Stroke rangeCrosshairStroke;",
    "begin_line": 378,
    "end_line": 378,
    "comment": "/** \n * The pen/brush used to draw the crosshair (if any). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairPaint",
    "snippet": "private transient Paint rangeCrosshairPaint;",
    "begin_line": 381,
    "end_line": 381,
    "comment": "/** \n * The color used to draw the crosshair (if any). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairLockedOnData",
    "snippet": "private boolean rangeCrosshairLockedOnData \u003d true;",
    "begin_line": 387,
    "end_line": 387,
    "comment": "/** \n * A flag that controls whether or not the crosshair locks onto actual  data points. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.foregroundDomainMarkers",
    "snippet": "private Map foregroundDomainMarkers;",
    "begin_line": 390,
    "end_line": 390,
    "comment": "/** \n * A map containing lists of markers for the domain axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.backgroundDomainMarkers",
    "snippet": "private Map backgroundDomainMarkers;",
    "begin_line": 393,
    "end_line": 393,
    "comment": "/** \n * A map containing lists of markers for the domain axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.foregroundRangeMarkers",
    "snippet": "private Map foregroundRangeMarkers;",
    "begin_line": 396,
    "end_line": 396,
    "comment": "/** \n * A map containing lists of markers for the range axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.backgroundRangeMarkers",
    "snippet": "private Map backgroundRangeMarkers;",
    "begin_line": 399,
    "end_line": 399,
    "comment": "/** \n * A map containing lists of markers for the range axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.annotations",
    "snippet": "private List annotations;",
    "begin_line": 406,
    "end_line": 406,
    "comment": "/** \n * A (possibly empty) list of annotations for the plot.  The list should be initialised in the constructor and never allowed to be  \u003ccode\u003enull\u003c/code\u003e.\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.weight",
    "snippet": "private int weight;",
    "begin_line": 412,
    "end_line": 412,
    "comment": "/** \n * The weight for the plot (only relevant when the plot is used as a subplot within a combined plot).\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.fixedDomainAxisSpace",
    "snippet": "private AxisSpace fixedDomainAxisSpace;",
    "begin_line": 415,
    "end_line": 415,
    "comment": "/** \n * The fixed space for the domain axis. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.fixedRangeAxisSpace",
    "snippet": "private AxisSpace fixedRangeAxisSpace;",
    "begin_line": 418,
    "end_line": 418,
    "comment": "/** \n * The fixed space for the range axis. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.CategoryPlot",
    "src_path": "org/jfree/chart/plot/CategoryPlot.java",
    "signature": "org.jfree.chart.plot.CategoryPlot.fixedLegendItems",
    "snippet": "private LegendItemCollection fixedLegendItems;",
    "begin_line": 424,
    "end_line": 424,
    "comment": "/** \n * An optional collection of legend items that can be returned by the  getLegendItems() method. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DatasetRenderingOrder",
    "src_path": "org/jfree/chart/plot/DatasetRenderingOrder.java",
    "signature": "org.jfree.chart.plot.DatasetRenderingOrder.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -600593412366385072L;",
    "begin_line": 56,
    "end_line": 56,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DatasetRenderingOrder",
    "src_path": "org/jfree/chart/plot/DatasetRenderingOrder.java",
    "signature": "org.jfree.chart.plot.DatasetRenderingOrder.FORWARD",
    "snippet": "public static final DatasetRenderingOrder FORWARD\r\n            \u003d new DatasetRenderingOrder(\"DatasetRenderingOrder.FORWARD\");",
    "begin_line": 62,
    "end_line": 63,
    "comment": "/** \n * Render datasets in the order 0, 1, 2, ..., N-1, where N is the number  of datasets. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DatasetRenderingOrder",
    "src_path": "org/jfree/chart/plot/DatasetRenderingOrder.java",
    "signature": "org.jfree.chart.plot.DatasetRenderingOrder.REVERSE",
    "snippet": "public static final DatasetRenderingOrder REVERSE\r\n            \u003d new DatasetRenderingOrder(\"DatasetRenderingOrder.REVERSE\");",
    "begin_line": 69,
    "end_line": 70,
    "comment": "/** \n * Render datasets in the order N-1, N-2, ..., 2, 1, 0, where N is the  number of datasets. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DatasetRenderingOrder",
    "src_path": "org/jfree/chart/plot/DatasetRenderingOrder.java",
    "signature": "org.jfree.chart.plot.DatasetRenderingOrder.name",
    "snippet": "private String name;",
    "begin_line": 73,
    "end_line": 73,
    "comment": "/** \n * The name. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -7339847061039422538L;",
    "begin_line": 80,
    "end_line": 80,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE",
    "snippet": "public static final Paint[] DEFAULT_PAINT_SEQUENCE \r\n            \u003d ChartColor.createDefaultPaintArray();",
    "begin_line": 83,
    "end_line": 84,
    "comment": "/** \n * The default fill paint sequence. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE",
    "snippet": "public static final Paint[] DEFAULT_OUTLINE_PAINT_SEQUENCE \u003d new Paint[] {\r\n            Color.lightGray};",
    "begin_line": 87,
    "end_line": 88,
    "comment": "/** \n * The default outline paint sequence. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE",
    "snippet": "public static final Paint[] DEFAULT_FILL_PAINT_SEQUENCE \u003d new Paint[] {\r\n            Color.white};",
    "begin_line": 91,
    "end_line": 92,
    "comment": "/** \n * The default fill paint sequence. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE",
    "snippet": "public static final Stroke[] DEFAULT_STROKE_SEQUENCE \u003d new Stroke[] {\r\n            new BasicStroke(1.0f, BasicStroke.CAP_SQUARE, \r\n                    BasicStroke.JOIN_BEVEL)};",
    "begin_line": 95,
    "end_line": 97,
    "comment": "/** \n * The default stroke sequence. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE",
    "snippet": "public static final Stroke[] DEFAULT_OUTLINE_STROKE_SEQUENCE \r\n            \u003d new Stroke[] {new BasicStroke(1.0f, BasicStroke.CAP_SQUARE, \r\n                    BasicStroke.JOIN_BEVEL)};",
    "begin_line": 100,
    "end_line": 102,
    "comment": "/** \n * The default outline stroke sequence. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE",
    "snippet": "public static final Shape[] DEFAULT_SHAPE_SEQUENCE \r\n            \u003d createStandardSeriesShapes();",
    "begin_line": 105,
    "end_line": 106,
    "comment": "/** \n * The default shape sequence. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.paintSequence",
    "snippet": "private transient Paint[] paintSequence;",
    "begin_line": 109,
    "end_line": 109,
    "comment": "/** \n * The paint sequence. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.paintIndex",
    "snippet": "private int paintIndex;",
    "begin_line": 112,
    "end_line": 112,
    "comment": "/** \n * The current paint index. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlinePaintSequence",
    "snippet": "private transient Paint[] outlinePaintSequence;",
    "begin_line": 115,
    "end_line": 115,
    "comment": "/** \n * The outline paint sequence. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlinePaintIndex",
    "snippet": "private int outlinePaintIndex;",
    "begin_line": 118,
    "end_line": 118,
    "comment": "/** \n * The current outline paint index. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.fillPaintSequence",
    "snippet": "private transient Paint[] fillPaintSequence;",
    "begin_line": 121,
    "end_line": 121,
    "comment": "/** \n * The fill paint sequence. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.fillPaintIndex",
    "snippet": "private int fillPaintIndex;",
    "begin_line": 124,
    "end_line": 124,
    "comment": "/** \n * The current fill paint index. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.strokeSequence",
    "snippet": "private transient Stroke[] strokeSequence;",
    "begin_line": 127,
    "end_line": 127,
    "comment": "/** \n * The stroke sequence. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.strokeIndex",
    "snippet": "private int strokeIndex;",
    "begin_line": 130,
    "end_line": 130,
    "comment": "/** \n * The current stroke index. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlineStrokeSequence",
    "snippet": "private transient Stroke[] outlineStrokeSequence;",
    "begin_line": 133,
    "end_line": 133,
    "comment": "/** \n * The outline stroke sequence. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlineStrokeIndex",
    "snippet": "private int outlineStrokeIndex;",
    "begin_line": 136,
    "end_line": 136,
    "comment": "/** \n * The current outline stroke index. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.shapeSequence",
    "snippet": "private transient Shape[] shapeSequence;",
    "begin_line": 139,
    "end_line": 139,
    "comment": "/** \n * The shape sequence. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
    "src_path": "org/jfree/chart/plot/DefaultDrawingSupplier.java",
    "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.shapeIndex",
    "snippet": "private int shapeIndex;",
    "begin_line": 142,
    "end_line": 142,
    "comment": "/** \n * The current shape index. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -734389651405327166L;",
    "begin_line": 97,
    "end_line": 97,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.paint",
    "snippet": "private transient Paint paint;",
    "begin_line": 100,
    "end_line": 100,
    "comment": "/** \n * The paint. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.stroke",
    "snippet": "private transient Stroke stroke;",
    "begin_line": 103,
    "end_line": 103,
    "comment": "/** \n * The stroke. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.outlinePaint",
    "snippet": "private transient Paint outlinePaint;",
    "begin_line": 106,
    "end_line": 106,
    "comment": "/** \n * The outline paint. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.outlineStroke",
    "snippet": "private transient Stroke outlineStroke;",
    "begin_line": 109,
    "end_line": 109,
    "comment": "/** \n * The outline stroke. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.alpha",
    "snippet": "private float alpha;",
    "begin_line": 112,
    "end_line": 112,
    "comment": "/** \n * The alpha transparency. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.label",
    "snippet": "private String label \u003d null;",
    "begin_line": 115,
    "end_line": 115,
    "comment": "/** \n * The label. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.labelFont",
    "snippet": "private Font labelFont;",
    "begin_line": 118,
    "end_line": 118,
    "comment": "/** \n * The label font. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.labelPaint",
    "snippet": "private transient Paint labelPaint;",
    "begin_line": 121,
    "end_line": 121,
    "comment": "/** \n * The label paint. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.labelAnchor",
    "snippet": "private RectangleAnchor labelAnchor;",
    "begin_line": 124,
    "end_line": 124,
    "comment": "/** \n * The label position. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.labelTextAnchor",
    "snippet": "private TextAnchor labelTextAnchor;",
    "begin_line": 127,
    "end_line": 127,
    "comment": "/** \n * The text anchor for the label. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.labelOffset",
    "snippet": "private RectangleInsets labelOffset;",
    "begin_line": 130,
    "end_line": 130,
    "comment": "/** \n * The label offset from the marker rectangle. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.labelOffsetType",
    "snippet": "private LengthAdjustmentType labelOffsetType;",
    "begin_line": 135,
    "end_line": 135,
    "comment": "/** \n * The offset type for the domain or range axis (never \u003ccode\u003enull\u003c/code\u003e). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Marker",
    "src_path": "org/jfree/chart/plot/Marker.java",
    "signature": "org.jfree.chart.plot.Marker.listenerList",
    "snippet": "private transient EventListenerList listenerList;",
    "begin_line": 138,
    "end_line": 138,
    "comment": "/** \n * Storage for registered change listeners. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -8831571430103671324L;",
    "begin_line": 188,
    "end_line": 188,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.ZERO",
    "snippet": "public static final Number ZERO \u003d new Integer(0);",
    "begin_line": 191,
    "end_line": 191,
    "comment": "/** \n * Useful constant representing zero. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.DEFAULT_INSETS",
    "snippet": "public static final RectangleInsets DEFAULT_INSETS \r\n            \u003d new RectangleInsets(4.0, 8.0, 4.0, 8.0);",
    "begin_line": 194,
    "end_line": 195,
    "comment": "/** \n * The default insets. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE",
    "snippet": "public static final Stroke DEFAULT_OUTLINE_STROKE \u003d new BasicStroke(0.5f);",
    "begin_line": 198,
    "end_line": 198,
    "comment": "/** \n * The default outline stroke. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT",
    "snippet": "public static final Paint DEFAULT_OUTLINE_PAINT \u003d Color.gray;",
    "begin_line": 201,
    "end_line": 201,
    "comment": "/** \n * The default outline color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.DEFAULT_FOREGROUND_ALPHA",
    "snippet": "public static final float DEFAULT_FOREGROUND_ALPHA \u003d 1.0f;",
    "begin_line": 204,
    "end_line": 204,
    "comment": "/** \n * The default foreground alpha transparency. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_ALPHA",
    "snippet": "public static final float DEFAULT_BACKGROUND_ALPHA \u003d 1.0f;",
    "begin_line": 207,
    "end_line": 207,
    "comment": "/** \n * The default background alpha transparency. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT",
    "snippet": "public static final Paint DEFAULT_BACKGROUND_PAINT \u003d Color.LIGHT_GRAY;",
    "begin_line": 210,
    "end_line": 210,
    "comment": "/** \n * The default background color. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.MINIMUM_WIDTH_TO_DRAW",
    "snippet": "public static final int MINIMUM_WIDTH_TO_DRAW \u003d 10;",
    "begin_line": 213,
    "end_line": 213,
    "comment": "/** \n * The minimum width at which the plot should be drawn. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.MINIMUM_HEIGHT_TO_DRAW",
    "snippet": "public static final int MINIMUM_HEIGHT_TO_DRAW \u003d 10;",
    "begin_line": 216,
    "end_line": 216,
    "comment": "/** \n * The minimum height at which the plot should be drawn. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX",
    "snippet": "public static final Shape DEFAULT_LEGEND_ITEM_BOX \r\n            \u003d new Rectangle2D.Double(-4.0, -4.0, 8.0, 8.0);",
    "begin_line": 219,
    "end_line": 220,
    "comment": "/** \n * A default box shape for legend items. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE",
    "snippet": "public static final Shape DEFAULT_LEGEND_ITEM_CIRCLE \r\n            \u003d new Ellipse2D.Double(-4.0, -4.0, 8.0, 8.0);",
    "begin_line": 223,
    "end_line": 224,
    "comment": "/** \n * A default circle shape for legend items. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.parent",
    "snippet": "private Plot parent;",
    "begin_line": 227,
    "end_line": 227,
    "comment": "/** \n * The parent plot (\u003ccode\u003enull\u003c/code\u003e if this is the root plot). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.datasetGroup",
    "snippet": "private DatasetGroup datasetGroup;",
    "begin_line": 230,
    "end_line": 230,
    "comment": "/** \n * The dataset group (to be used for thread synchronisation). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.noDataMessage",
    "snippet": "private String noDataMessage;",
    "begin_line": 233,
    "end_line": 233,
    "comment": "/** \n * The message to display if no data is available. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.noDataMessageFont",
    "snippet": "private Font noDataMessageFont;",
    "begin_line": 236,
    "end_line": 236,
    "comment": "/** \n * The font used to display the \u0027no data\u0027 message. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.noDataMessagePaint",
    "snippet": "private transient Paint noDataMessagePaint;",
    "begin_line": 239,
    "end_line": 239,
    "comment": "/** \n * The paint used to draw the \u0027no data\u0027 message. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.insets",
    "snippet": "private RectangleInsets insets;",
    "begin_line": 242,
    "end_line": 242,
    "comment": "/** \n * Amount of blank space around the plot area. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.outlineVisible",
    "snippet": "private boolean outlineVisible;",
    "begin_line": 249,
    "end_line": 249,
    "comment": "/** \n * A flag that controls whether or not the plot outline is drawn. \n * @since 1.0.6\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.outlineStroke",
    "snippet": "private transient Stroke outlineStroke;",
    "begin_line": 252,
    "end_line": 252,
    "comment": "/** \n * The Stroke used to draw an outline around the plot. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.outlinePaint",
    "snippet": "private transient Paint outlinePaint;",
    "begin_line": 255,
    "end_line": 255,
    "comment": "/** \n * The Paint used to draw an outline around the plot. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.backgroundPaint",
    "snippet": "private transient Paint backgroundPaint;",
    "begin_line": 258,
    "end_line": 258,
    "comment": "/** \n * An optional color used to fill the plot background. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.backgroundImage",
    "snippet": "private transient Image backgroundImage;",
    "begin_line": 261,
    "end_line": 261,
    "comment": "/** \n * An optional image for the plot background. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.backgroundImageAlignment",
    "snippet": "private int backgroundImageAlignment \u003d Align.FIT;",
    "begin_line": 264,
    "end_line": 264,
    "comment": "/** \n * The alignment for the background image. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.backgroundImageAlpha",
    "snippet": "private float backgroundImageAlpha \u003d 0.5f;",
    "begin_line": 267,
    "end_line": 267,
    "comment": "/** \n * The alpha value used to draw the background image. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.foregroundAlpha",
    "snippet": "private float foregroundAlpha;",
    "begin_line": 270,
    "end_line": 270,
    "comment": "/** \n * The alpha-transparency for the plot. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.backgroundAlpha",
    "snippet": "private float backgroundAlpha;",
    "begin_line": 273,
    "end_line": 273,
    "comment": "/** \n * The alpha transparency for the background paint. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.drawingSupplier",
    "snippet": "private DrawingSupplier drawingSupplier;",
    "begin_line": 276,
    "end_line": 276,
    "comment": "/** \n * The drawing supplier. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.Plot",
    "src_path": "org/jfree/chart/plot/Plot.java",
    "signature": "org.jfree.chart.plot.Plot.listenerList",
    "snippet": "private transient EventListenerList listenerList;",
    "begin_line": 279,
    "end_line": 279,
    "comment": "/** \n * Storage for registered change listeners. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.PlotOrientation",
    "src_path": "org/jfree/chart/plot/PlotOrientation.java",
    "signature": "org.jfree.chart.plot.PlotOrientation.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -2508771828190337782L;",
    "begin_line": 54,
    "end_line": 54,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.PlotOrientation",
    "src_path": "org/jfree/chart/plot/PlotOrientation.java",
    "signature": "org.jfree.chart.plot.PlotOrientation.HORIZONTAL",
    "snippet": "public static final PlotOrientation HORIZONTAL\r\n            \u003d new PlotOrientation(\"PlotOrientation.HORIZONTAL\");",
    "begin_line": 57,
    "end_line": 58,
    "comment": "/** \n * For a plot where the range axis is horizontal. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.PlotOrientation",
    "src_path": "org/jfree/chart/plot/PlotOrientation.java",
    "signature": "org.jfree.chart.plot.PlotOrientation.VERTICAL",
    "snippet": "public static final PlotOrientation VERTICAL\r\n            \u003d new PlotOrientation(\"PlotOrientation.VERTICAL\");",
    "begin_line": 61,
    "end_line": 62,
    "comment": "/** \n * For a plot where the range axis is vertical. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.PlotOrientation",
    "src_path": "org/jfree/chart/plot/PlotOrientation.java",
    "signature": "org.jfree.chart.plot.PlotOrientation.name",
    "snippet": "private String name;",
    "begin_line": 65,
    "end_line": 65,
    "comment": "/** \n * The name. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.SeriesRenderingOrder",
    "src_path": "org/jfree/chart/plot/SeriesRenderingOrder.java",
    "signature": "org.jfree.chart.plot.SeriesRenderingOrder.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 209336477448807735L;",
    "begin_line": 54,
    "end_line": 54,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.SeriesRenderingOrder",
    "src_path": "org/jfree/chart/plot/SeriesRenderingOrder.java",
    "signature": "org.jfree.chart.plot.SeriesRenderingOrder.FORWARD",
    "snippet": "public static final SeriesRenderingOrder FORWARD\r\n            \u003d new SeriesRenderingOrder(\"SeriesRenderingOrder.FORWARD\");",
    "begin_line": 60,
    "end_line": 61,
    "comment": "/** \n * Render series in the order 0, 1, 2, ..., N-1, where N is the number of series.\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.SeriesRenderingOrder",
    "src_path": "org/jfree/chart/plot/SeriesRenderingOrder.java",
    "signature": "org.jfree.chart.plot.SeriesRenderingOrder.REVERSE",
    "snippet": "public static final SeriesRenderingOrder REVERSE\r\n            \u003d new SeriesRenderingOrder(\"SeriesRenderingOrder.REVERSE\");",
    "begin_line": 67,
    "end_line": 68,
    "comment": "/** \n * Render series in the order N-1, N-2, ..., 2, 1, 0, where N is the number of series.\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.SeriesRenderingOrder",
    "src_path": "org/jfree/chart/plot/SeriesRenderingOrder.java",
    "signature": "org.jfree.chart.plot.SeriesRenderingOrder.name",
    "snippet": "private String name;",
    "begin_line": 71,
    "end_line": 71,
    "comment": "/** \n * The name. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.ValueMarker",
    "src_path": "org/jfree/chart/plot/ValueMarker.java",
    "signature": "org.jfree.chart.plot.ValueMarker.value",
    "snippet": "private double value;",
    "begin_line": 60,
    "end_line": 60,
    "comment": "/** \n * The value. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 7044148245716569264L;",
    "begin_line": 281,
    "end_line": 281,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE",
    "snippet": "public static final Stroke DEFAULT_GRIDLINE_STROKE \u003d new BasicStroke(0.5f,\r\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, \r\n            new float[] {2.0f, 2.0f}, 0.0f);",
    "begin_line": 284,
    "end_line": 286,
    "comment": "/** \n * The default grid line stroke. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT",
    "snippet": "public static final Paint DEFAULT_GRIDLINE_PAINT \u003d Color.WHITE;",
    "begin_line": 289,
    "end_line": 289,
    "comment": "/** \n * The default grid line paint. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_VISIBLE",
    "snippet": "public static final boolean DEFAULT_CROSSHAIR_VISIBLE \u003d false;",
    "begin_line": 292,
    "end_line": 292,
    "comment": "/** \n * The default crosshair visibility. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE",
    "snippet": "public static final Stroke DEFAULT_CROSSHAIR_STROKE\r\n            \u003d DEFAULT_GRIDLINE_STROKE;",
    "begin_line": 295,
    "end_line": 296,
    "comment": "/** \n * The default crosshair stroke. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT",
    "snippet": "public static final Paint DEFAULT_CROSSHAIR_PAINT \u003d Color.blue;",
    "begin_line": 299,
    "end_line": 299,
    "comment": "/** \n * The default crosshair paint. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.localizationResources",
    "snippet": "protected static ResourceBundle localizationResources \r\n            \u003d ResourceBundle.getBundle(\r\n                    \"org.jfree.chart.plot.LocalizationBundle\");",
    "begin_line": 302,
    "end_line": 304,
    "comment": "/** \n * The resourceBundle for the localization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.orientation",
    "snippet": "private PlotOrientation orientation;",
    "begin_line": 307,
    "end_line": 307,
    "comment": "/** \n * The plot orientation. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.axisOffset",
    "snippet": "private RectangleInsets axisOffset;",
    "begin_line": 310,
    "end_line": 310,
    "comment": "/** \n * The offset between the data area and the axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainAxes",
    "snippet": "private ObjectList domainAxes;",
    "begin_line": 313,
    "end_line": 313,
    "comment": "/** \n * The domain axis / axes (used for the x-values). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainAxisLocations",
    "snippet": "private ObjectList domainAxisLocations;",
    "begin_line": 316,
    "end_line": 316,
    "comment": "/** \n * The domain axis locations. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeAxes",
    "snippet": "private ObjectList rangeAxes;",
    "begin_line": 319,
    "end_line": 319,
    "comment": "/** \n * The range axis (used for the y-values). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeAxisLocations",
    "snippet": "private ObjectList rangeAxisLocations;",
    "begin_line": 322,
    "end_line": 322,
    "comment": "/** \n * The range axis location. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.datasets",
    "snippet": "private ObjectList datasets;",
    "begin_line": 325,
    "end_line": 325,
    "comment": "/** \n * Storage for the datasets. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.renderers",
    "snippet": "private ObjectList renderers;",
    "begin_line": 328,
    "end_line": 328,
    "comment": "/** \n * Storage for the renderers. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.datasetToDomainAxisMap",
    "snippet": "private Map datasetToDomainAxisMap;",
    "begin_line": 335,
    "end_line": 335,
    "comment": "/** \n * Storage for keys that map datasets/renderers to domain axes.  If the map contains no entry for a dataset, it is assumed to map to the primary domain axis (index \u003d 0).\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.datasetToRangeAxisMap",
    "snippet": "private Map datasetToRangeAxisMap;",
    "begin_line": 342,
    "end_line": 342,
    "comment": "/** \n * Storage for keys that map datasets/renderers to range axes. If the map contains no entry for a dataset, it is assumed to map to the primary domain axis (index \u003d 0).\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.quadrantOrigin",
    "snippet": "private transient Point2D quadrantOrigin \u003d new Point2D.Double(0.0, 0.0);",
    "begin_line": 345,
    "end_line": 345,
    "comment": "/** \n * The origin point for the quadrants (if drawn). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.quadrantPaint",
    "snippet": "private transient Paint[] quadrantPaint\r\n            \u003d new Paint[] {null, null, null, null};",
    "begin_line": 348,
    "end_line": 349,
    "comment": "/** \n * The paint used for each quadrant. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainGridlinesVisible",
    "snippet": "private boolean domainGridlinesVisible;",
    "begin_line": 352,
    "end_line": 352,
    "comment": "/** \n * A flag that controls whether the domain grid-lines are visible. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainGridlineStroke",
    "snippet": "private transient Stroke domainGridlineStroke;",
    "begin_line": 355,
    "end_line": 355,
    "comment": "/** \n * The stroke used to draw the domain grid-lines. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainGridlinePaint",
    "snippet": "private transient Paint domainGridlinePaint;",
    "begin_line": 358,
    "end_line": 358,
    "comment": "/** \n * The paint used to draw the domain grid-lines. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeGridlinesVisible",
    "snippet": "private boolean rangeGridlinesVisible;",
    "begin_line": 361,
    "end_line": 361,
    "comment": "/** \n * A flag that controls whether the range grid-lines are visible. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeGridlineStroke",
    "snippet": "private transient Stroke rangeGridlineStroke;",
    "begin_line": 364,
    "end_line": 364,
    "comment": "/** \n * The stroke used to draw the range grid-lines. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeGridlinePaint",
    "snippet": "private transient Paint rangeGridlinePaint;",
    "begin_line": 367,
    "end_line": 367,
    "comment": "/** \n * The paint used to draw the range grid-lines. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainZeroBaselineVisible",
    "snippet": "private boolean domainZeroBaselineVisible;",
    "begin_line": 375,
    "end_line": 375,
    "comment": "/** \n * A flag that controls whether or not the zero baseline against the domain axis is visible.\n * @since 1.0.5\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainZeroBaselineStroke",
    "snippet": "private transient Stroke domainZeroBaselineStroke;",
    "begin_line": 382,
    "end_line": 382,
    "comment": "/** \n * The stroke used for the zero baseline against the domain axis. \n * @since 1.0.5\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainZeroBaselinePaint",
    "snippet": "private transient Paint domainZeroBaselinePaint;",
    "begin_line": 389,
    "end_line": 389,
    "comment": "/** \n * The paint used for the zero baseline against the domain axis. \n * @since 1.0.5\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeZeroBaselineVisible",
    "snippet": "private boolean rangeZeroBaselineVisible;",
    "begin_line": 395,
    "end_line": 395,
    "comment": "/** \n * A flag that controls whether or not the zero baseline against the range axis is visible.\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeZeroBaselineStroke",
    "snippet": "private transient Stroke rangeZeroBaselineStroke;",
    "begin_line": 398,
    "end_line": 398,
    "comment": "/** \n * The stroke used for the zero baseline against the range axis. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeZeroBaselinePaint",
    "snippet": "private transient Paint rangeZeroBaselinePaint;",
    "begin_line": 401,
    "end_line": 401,
    "comment": "/** \n * The paint used for the zero baseline against the range axis. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainCrosshairVisible",
    "snippet": "private boolean domainCrosshairVisible;",
    "begin_line": 404,
    "end_line": 404,
    "comment": "/** \n * A flag that controls whether or not a domain crosshair is drawn..\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainCrosshairValue",
    "snippet": "private double domainCrosshairValue;",
    "begin_line": 407,
    "end_line": 407,
    "comment": "/** \n * The domain crosshair value. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainCrosshairStroke",
    "snippet": "private transient Stroke domainCrosshairStroke;",
    "begin_line": 410,
    "end_line": 410,
    "comment": "/** \n * The pen/brush used to draw the crosshair (if any). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainCrosshairPaint",
    "snippet": "private transient Paint domainCrosshairPaint;",
    "begin_line": 413,
    "end_line": 413,
    "comment": "/** \n * The color used to draw the crosshair (if any). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainCrosshairLockedOnData",
    "snippet": "private boolean domainCrosshairLockedOnData \u003d true;",
    "begin_line": 419,
    "end_line": 419,
    "comment": "/** \n * A flag that controls whether or not the crosshair locks onto actual data points.\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeCrosshairVisible",
    "snippet": "private boolean rangeCrosshairVisible;",
    "begin_line": 422,
    "end_line": 422,
    "comment": "/** \n * A flag that controls whether or not a range crosshair is drawn..\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeCrosshairValue",
    "snippet": "private double rangeCrosshairValue;",
    "begin_line": 425,
    "end_line": 425,
    "comment": "/** \n * The range crosshair value. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeCrosshairStroke",
    "snippet": "private transient Stroke rangeCrosshairStroke;",
    "begin_line": 428,
    "end_line": 428,
    "comment": "/** \n * The pen/brush used to draw the crosshair (if any). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeCrosshairPaint",
    "snippet": "private transient Paint rangeCrosshairPaint;",
    "begin_line": 431,
    "end_line": 431,
    "comment": "/** \n * The color used to draw the crosshair (if any). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeCrosshairLockedOnData",
    "snippet": "private boolean rangeCrosshairLockedOnData \u003d true;",
    "begin_line": 437,
    "end_line": 437,
    "comment": "/** \n * A flag that controls whether or not the crosshair locks onto actual data points.\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.foregroundDomainMarkers",
    "snippet": "private Map foregroundDomainMarkers;",
    "begin_line": 440,
    "end_line": 440,
    "comment": "/** \n * A map of lists of foreground markers (optional) for the domain axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.backgroundDomainMarkers",
    "snippet": "private Map backgroundDomainMarkers;",
    "begin_line": 443,
    "end_line": 443,
    "comment": "/** \n * A map of lists of background markers (optional) for the domain axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.foregroundRangeMarkers",
    "snippet": "private Map foregroundRangeMarkers;",
    "begin_line": 446,
    "end_line": 446,
    "comment": "/** \n * A map of lists of foreground markers (optional) for the range axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.backgroundRangeMarkers",
    "snippet": "private Map backgroundRangeMarkers;",
    "begin_line": 449,
    "end_line": 449,
    "comment": "/** \n * A map of lists of background markers (optional) for the range axes. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.annotations",
    "snippet": "private List annotations;",
    "begin_line": 456,
    "end_line": 456,
    "comment": "/** \n * A (possibly empty) list of annotations for the plot.  The list should be initialised in the constructor and never allowed to be  \u003ccode\u003enull\u003c/code\u003e.\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.domainTickBandPaint",
    "snippet": "private transient Paint domainTickBandPaint;",
    "begin_line": 459,
    "end_line": 459,
    "comment": "/** \n * The paint used for the domain tick bands (if any). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.rangeTickBandPaint",
    "snippet": "private transient Paint rangeTickBandPaint;",
    "begin_line": 462,
    "end_line": 462,
    "comment": "/** \n * The paint used for the range tick bands (if any). \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.fixedDomainAxisSpace",
    "snippet": "private AxisSpace fixedDomainAxisSpace;",
    "begin_line": 465,
    "end_line": 465,
    "comment": "/** \n * The fixed domain axis space. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.fixedRangeAxisSpace",
    "snippet": "private AxisSpace fixedRangeAxisSpace;",
    "begin_line": 468,
    "end_line": 468,
    "comment": "/** \n * The fixed range axis space. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.datasetRenderingOrder",
    "snippet": "private DatasetRenderingOrder datasetRenderingOrder\r\n            \u003d DatasetRenderingOrder.REVERSE;",
    "begin_line": 474,
    "end_line": 475,
    "comment": "/** \n * The order of the dataset rendering (REVERSE draws the primary dataset last so that it appears to be on top).\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.seriesRenderingOrder",
    "snippet": "private SeriesRenderingOrder seriesRenderingOrder\r\n            \u003d SeriesRenderingOrder.REVERSE;",
    "begin_line": 481,
    "end_line": 482,
    "comment": "/** \n * The order of the series rendering (REVERSE draws the primary series last so that it appears to be on top).\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.weight",
    "snippet": "private int weight;",
    "begin_line": 488,
    "end_line": 488,
    "comment": "/** \n * The weight for this plot (only relevant if this is a subplot in a combined plot).\n */\n"
  },
  {
    "class_name": "org.jfree.chart.plot.XYPlot",
    "src_path": "org/jfree/chart/plot/XYPlot.java",
    "signature": "org.jfree.chart.plot.XYPlot.fixedLegendItems",
    "snippet": "private LegendItemCollection fixedLegendItems;",
    "begin_line": 494,
    "end_line": 494,
    "comment": "/** \n * An optional collection of legend items that can be returned by the getLegendItems() method.\n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 8219158940496719660L;",
    "begin_line": 55,
    "end_line": 55,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.TOP_LEFT",
    "snippet": "public static final TextAnchor TOP_LEFT \u003d new TextAnchor(\n            \"TextAnchor.TOP_LEFT\");",
    "begin_line": 58,
    "end_line": 59,
    "comment": "/** \n * Top/left. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.TOP_CENTER",
    "snippet": "public static final TextAnchor TOP_CENTER \u003d new TextAnchor(\n            \"TextAnchor.TOP_CENTER\");",
    "begin_line": 62,
    "end_line": 63,
    "comment": "/** \n * Top/center. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.TOP_RIGHT",
    "snippet": "public static final TextAnchor TOP_RIGHT \u003d new TextAnchor(\n            \"TextAnchor.TOP_RIGHT\");",
    "begin_line": 66,
    "end_line": 67,
    "comment": "/** \n * Top/right. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT",
    "snippet": "public static final TextAnchor HALF_ASCENT_LEFT \u003d new TextAnchor(\n            \"TextAnchor.HALF_ASCENT_LEFT\");",
    "begin_line": 70,
    "end_line": 71,
    "comment": "/** \n * Half-ascent/left. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER",
    "snippet": "public static final TextAnchor HALF_ASCENT_CENTER \u003d new TextAnchor(\n            \"TextAnchor.HALF_ASCENT_CENTER\");",
    "begin_line": 74,
    "end_line": 75,
    "comment": "/** \n * Half-ascent/center. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT",
    "snippet": "public static final TextAnchor HALF_ASCENT_RIGHT \u003d new TextAnchor(\n            \"TextAnchor.HALF_ASCENT_RIGHT\");",
    "begin_line": 78,
    "end_line": 79,
    "comment": "/** \n * Half-ascent/right. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.CENTER_LEFT",
    "snippet": "public static final TextAnchor CENTER_LEFT \u003d new TextAnchor(\n            \"TextAnchor.CENTER_LEFT\");",
    "begin_line": 82,
    "end_line": 83,
    "comment": "/** \n * Middle/left. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.CENTER",
    "snippet": "public static final TextAnchor CENTER \u003d new TextAnchor(\"TextAnchor.CENTER\");",
    "begin_line": 86,
    "end_line": 86,
    "comment": "/** \n * Middle/center. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.CENTER_RIGHT",
    "snippet": "public static final TextAnchor CENTER_RIGHT \u003d new TextAnchor(\n            \"TextAnchor.CENTER_RIGHT\");",
    "begin_line": 89,
    "end_line": 90,
    "comment": "/** \n * Middle/right. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.BASELINE_LEFT",
    "snippet": "public static final TextAnchor BASELINE_LEFT \u003d new TextAnchor(\n            \"TextAnchor.BASELINE_LEFT\");",
    "begin_line": 93,
    "end_line": 94,
    "comment": "/** \n * Baseline/left. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.BASELINE_CENTER",
    "snippet": "public static final TextAnchor BASELINE_CENTER \u003d new TextAnchor(\n            \"TextAnchor.BASELINE_CENTER\");",
    "begin_line": 97,
    "end_line": 98,
    "comment": "/** \n * Baseline/center. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.BASELINE_RIGHT",
    "snippet": "public static final TextAnchor BASELINE_RIGHT \u003d new TextAnchor(\n            \"TextAnchor.BASELINE_RIGHT\");",
    "begin_line": 101,
    "end_line": 102,
    "comment": "/** \n * Baseline/right. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.BOTTOM_LEFT",
    "snippet": "public static final TextAnchor BOTTOM_LEFT \u003d new TextAnchor(\n            \"TextAnchor.BOTTOM_LEFT\");",
    "begin_line": 105,
    "end_line": 106,
    "comment": "/** \n * Bottom/left. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.BOTTOM_CENTER",
    "snippet": "public static final TextAnchor BOTTOM_CENTER \u003d new TextAnchor(\n            \"TextAnchor.BOTTOM_CENTER\");",
    "begin_line": 109,
    "end_line": 110,
    "comment": "/** \n * Bottom/center. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT",
    "snippet": "public static final TextAnchor BOTTOM_RIGHT \u003d new TextAnchor(\n            \"TextAnchor.BOTTOM_RIGHT\");",
    "begin_line": 113,
    "end_line": 114,
    "comment": "/** \n * Bottom/right. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.text.TextAnchor",
    "src_path": "org/jfree/chart/text/TextAnchor.java",
    "signature": "org.jfree.chart.text.TextAnchor.name",
    "snippet": "private String name;",
    "begin_line": 117,
    "end_line": 117,
    "comment": "/** \n * The name. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.AbstractObjectList",
    "src_path": "org/jfree/chart/util/AbstractObjectList.java",
    "signature": "org.jfree.chart.util.AbstractObjectList.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 7789833772597351595L;",
    "begin_line": 59,
    "end_line": 59,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.AbstractObjectList",
    "src_path": "org/jfree/chart/util/AbstractObjectList.java",
    "signature": "org.jfree.chart.util.AbstractObjectList.DEFAULT_INITIAL_CAPACITY",
    "snippet": "public static final int DEFAULT_INITIAL_CAPACITY \u003d 8;",
    "begin_line": 62,
    "end_line": 62,
    "comment": "/** \n * The default initial capacity of the list. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.AbstractObjectList",
    "src_path": "org/jfree/chart/util/AbstractObjectList.java",
    "signature": "org.jfree.chart.util.AbstractObjectList.objects",
    "snippet": "private transient Object[] objects;",
    "begin_line": 65,
    "end_line": 65,
    "comment": "/** \n * Storage for the objects. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.AbstractObjectList",
    "src_path": "org/jfree/chart/util/AbstractObjectList.java",
    "signature": "org.jfree.chart.util.AbstractObjectList.size",
    "snippet": "private int size \u003d 0;",
    "begin_line": 68,
    "end_line": 68,
    "comment": "/** \n * The current list size. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.AbstractObjectList",
    "src_path": "org/jfree/chart/util/AbstractObjectList.java",
    "signature": "org.jfree.chart.util.AbstractObjectList.increment",
    "snippet": "private int increment \u003d DEFAULT_INITIAL_CAPACITY;",
    "begin_line": 71,
    "end_line": 71,
    "comment": "/** \n * The default increment. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.Layer",
    "src_path": "org/jfree/chart/util/Layer.java",
    "signature": "org.jfree.chart.util.Layer.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -1470104570733183430L;",
    "begin_line": 53,
    "end_line": 53,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.Layer",
    "src_path": "org/jfree/chart/util/Layer.java",
    "signature": "org.jfree.chart.util.Layer.FOREGROUND",
    "snippet": "public static final Layer FOREGROUND \u003d new Layer(\"Layer.FOREGROUND\");",
    "begin_line": 56,
    "end_line": 56,
    "comment": "/** \n * Foreground. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.Layer",
    "src_path": "org/jfree/chart/util/Layer.java",
    "signature": "org.jfree.chart.util.Layer.BACKGROUND",
    "snippet": "public static final Layer BACKGROUND \u003d new Layer(\"Layer.BACKGROUND\");",
    "begin_line": 59,
    "end_line": 59,
    "comment": "/** \n * Background. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.Layer",
    "src_path": "org/jfree/chart/util/Layer.java",
    "signature": "org.jfree.chart.util.Layer.name",
    "snippet": "private String name;",
    "begin_line": 62,
    "end_line": 62,
    "comment": "/** \n * The name. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.LengthAdjustmentType",
    "src_path": "org/jfree/chart/util/LengthAdjustmentType.java",
    "signature": "org.jfree.chart.util.LengthAdjustmentType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -6097408511380545010L;",
    "begin_line": 54,
    "end_line": 54,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.LengthAdjustmentType",
    "src_path": "org/jfree/chart/util/LengthAdjustmentType.java",
    "signature": "org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE",
    "snippet": "public static final LengthAdjustmentType NO_CHANGE \n            \u003d new LengthAdjustmentType(\"NO_CHANGE\");",
    "begin_line": 57,
    "end_line": 58,
    "comment": "/** \n * NO_CHANGE. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.LengthAdjustmentType",
    "src_path": "org/jfree/chart/util/LengthAdjustmentType.java",
    "signature": "org.jfree.chart.util.LengthAdjustmentType.EXPAND",
    "snippet": "public static final LengthAdjustmentType EXPAND \n            \u003d new LengthAdjustmentType(\"EXPAND\");",
    "begin_line": 61,
    "end_line": 62,
    "comment": "/** \n * EXPAND. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.LengthAdjustmentType",
    "src_path": "org/jfree/chart/util/LengthAdjustmentType.java",
    "signature": "org.jfree.chart.util.LengthAdjustmentType.CONTRACT",
    "snippet": "public static final LengthAdjustmentType CONTRACT \n            \u003d new LengthAdjustmentType(\"CONTRACT\");",
    "begin_line": 65,
    "end_line": 66,
    "comment": "/** \n * CONTRACT. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.LengthAdjustmentType",
    "src_path": "org/jfree/chart/util/LengthAdjustmentType.java",
    "signature": "org.jfree.chart.util.LengthAdjustmentType.name",
    "snippet": "private String name;",
    "begin_line": 69,
    "end_line": 69,
    "comment": "/** \n * The name. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleAnchor",
    "src_path": "org/jfree/chart/util/RectangleAnchor.java",
    "signature": "org.jfree.chart.util.RectangleAnchor.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -2457494205644416327L;",
    "begin_line": 60,
    "end_line": 60,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleAnchor",
    "src_path": "org/jfree/chart/util/RectangleAnchor.java",
    "signature": "org.jfree.chart.util.RectangleAnchor.CENTER",
    "snippet": "public static final RectangleAnchor CENTER \n        \u003d new RectangleAnchor(\"RectangleAnchor.CENTER\");",
    "begin_line": 63,
    "end_line": 64,
    "comment": "/** \n * Center. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleAnchor",
    "src_path": "org/jfree/chart/util/RectangleAnchor.java",
    "signature": "org.jfree.chart.util.RectangleAnchor.TOP",
    "snippet": "public static final RectangleAnchor TOP \n        \u003d new RectangleAnchor(\"RectangleAnchor.TOP\");",
    "begin_line": 67,
    "end_line": 68,
    "comment": "/** \n * Top. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleAnchor",
    "src_path": "org/jfree/chart/util/RectangleAnchor.java",
    "signature": "org.jfree.chart.util.RectangleAnchor.TOP_LEFT",
    "snippet": "public static final RectangleAnchor TOP_LEFT \n        \u003d new RectangleAnchor(\"RectangleAnchor.TOP_LEFT\");",
    "begin_line": 71,
    "end_line": 72,
    "comment": "/** \n * Top-Left. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleAnchor",
    "src_path": "org/jfree/chart/util/RectangleAnchor.java",
    "signature": "org.jfree.chart.util.RectangleAnchor.TOP_RIGHT",
    "snippet": "public static final RectangleAnchor TOP_RIGHT \n        \u003d new RectangleAnchor(\"RectangleAnchor.TOP_RIGHT\");",
    "begin_line": 75,
    "end_line": 76,
    "comment": "/** \n * Top-Right. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleAnchor",
    "src_path": "org/jfree/chart/util/RectangleAnchor.java",
    "signature": "org.jfree.chart.util.RectangleAnchor.BOTTOM",
    "snippet": "public static final RectangleAnchor BOTTOM \n        \u003d new RectangleAnchor(\"RectangleAnchor.BOTTOM\");",
    "begin_line": 79,
    "end_line": 80,
    "comment": "/** \n * Bottom. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleAnchor",
    "src_path": "org/jfree/chart/util/RectangleAnchor.java",
    "signature": "org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT",
    "snippet": "public static final RectangleAnchor BOTTOM_LEFT \n        \u003d new RectangleAnchor(\"RectangleAnchor.BOTTOM_LEFT\");",
    "begin_line": 83,
    "end_line": 84,
    "comment": "/** \n * Bottom-Left. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleAnchor",
    "src_path": "org/jfree/chart/util/RectangleAnchor.java",
    "signature": "org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT",
    "snippet": "public static final RectangleAnchor BOTTOM_RIGHT \n        \u003d new RectangleAnchor(\"RectangleAnchor.BOTTOM_RIGHT\");",
    "begin_line": 87,
    "end_line": 88,
    "comment": "/** \n * Bottom-Right. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleAnchor",
    "src_path": "org/jfree/chart/util/RectangleAnchor.java",
    "signature": "org.jfree.chart.util.RectangleAnchor.LEFT",
    "snippet": "public static final RectangleAnchor LEFT \n        \u003d new RectangleAnchor(\"RectangleAnchor.LEFT\");",
    "begin_line": 91,
    "end_line": 92,
    "comment": "/** \n * Left. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleAnchor",
    "src_path": "org/jfree/chart/util/RectangleAnchor.java",
    "signature": "org.jfree.chart.util.RectangleAnchor.RIGHT",
    "snippet": "public static final RectangleAnchor RIGHT \n        \u003d new RectangleAnchor(\"RectangleAnchor.RIGHT\");",
    "begin_line": 95,
    "end_line": 96,
    "comment": "/** \n * Right. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleAnchor",
    "src_path": "org/jfree/chart/util/RectangleAnchor.java",
    "signature": "org.jfree.chart.util.RectangleAnchor.name",
    "snippet": "private String name;",
    "begin_line": 99,
    "end_line": 99,
    "comment": "/** \n * The name. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleInsets",
    "src_path": "org/jfree/chart/util/RectangleInsets.java",
    "signature": "org.jfree.chart.util.RectangleInsets.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1902273207559319996L;",
    "begin_line": 60,
    "end_line": 60,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleInsets",
    "src_path": "org/jfree/chart/util/RectangleInsets.java",
    "signature": "org.jfree.chart.util.RectangleInsets.ZERO_INSETS",
    "snippet": "public static final RectangleInsets ZERO_INSETS \u003d new RectangleInsets(\n            UnitType.ABSOLUTE, 0.0, 0.0, 0.0, 0.0);",
    "begin_line": 65,
    "end_line": 66,
    "comment": "/** \n * A useful constant representing zero insets.\n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleInsets",
    "src_path": "org/jfree/chart/util/RectangleInsets.java",
    "signature": "org.jfree.chart.util.RectangleInsets.unitType",
    "snippet": "private UnitType unitType;",
    "begin_line": 69,
    "end_line": 69,
    "comment": "/** \n * Absolute or relative units. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleInsets",
    "src_path": "org/jfree/chart/util/RectangleInsets.java",
    "signature": "org.jfree.chart.util.RectangleInsets.top",
    "snippet": "private double top;",
    "begin_line": 72,
    "end_line": 72,
    "comment": "/** \n * The top insets. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleInsets",
    "src_path": "org/jfree/chart/util/RectangleInsets.java",
    "signature": "org.jfree.chart.util.RectangleInsets.left",
    "snippet": "private double left;",
    "begin_line": 75,
    "end_line": 75,
    "comment": "/** \n * The left insets. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleInsets",
    "src_path": "org/jfree/chart/util/RectangleInsets.java",
    "signature": "org.jfree.chart.util.RectangleInsets.bottom",
    "snippet": "private double bottom;",
    "begin_line": 78,
    "end_line": 78,
    "comment": "/** \n * The bottom insets. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.RectangleInsets",
    "src_path": "org/jfree/chart/util/RectangleInsets.java",
    "signature": "org.jfree.chart.util.RectangleInsets.right",
    "snippet": "private double right;",
    "begin_line": 81,
    "end_line": 81,
    "comment": "/** \n * The right insets. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.SortOrder",
    "src_path": "org/jfree/chart/util/SortOrder.java",
    "signature": "org.jfree.chart.util.SortOrder.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -2124469847758108312L;",
    "begin_line": 56,
    "end_line": 56,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.SortOrder",
    "src_path": "org/jfree/chart/util/SortOrder.java",
    "signature": "org.jfree.chart.util.SortOrder.ASCENDING",
    "snippet": "public static final SortOrder ASCENDING \u003d new SortOrder(\n            \"SortOrder.ASCENDING\");",
    "begin_line": 59,
    "end_line": 60,
    "comment": "/** \n * Ascending order. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.SortOrder",
    "src_path": "org/jfree/chart/util/SortOrder.java",
    "signature": "org.jfree.chart.util.SortOrder.DESCENDING",
    "snippet": "public static final SortOrder DESCENDING \u003d new SortOrder(\n            \"SortOrder.DESCENDING\");",
    "begin_line": 63,
    "end_line": 64,
    "comment": "/** \n * Descending order. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.SortOrder",
    "src_path": "org/jfree/chart/util/SortOrder.java",
    "signature": "org.jfree.chart.util.SortOrder.name",
    "snippet": "private String name;",
    "begin_line": 67,
    "end_line": 67,
    "comment": "/** \n * The name. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.UnitType",
    "src_path": "org/jfree/chart/util/UnitType.java",
    "signature": "org.jfree.chart.util.UnitType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 6531925392288519884L;",
    "begin_line": 53,
    "end_line": 53,
    "comment": "/** \n * For serialization. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.UnitType",
    "src_path": "org/jfree/chart/util/UnitType.java",
    "signature": "org.jfree.chart.util.UnitType.ABSOLUTE",
    "snippet": "public static final UnitType ABSOLUTE \u003d new UnitType(\"UnitType.ABSOLUTE\");",
    "begin_line": 56,
    "end_line": 56,
    "comment": "/** \n * Absolute. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.UnitType",
    "src_path": "org/jfree/chart/util/UnitType.java",
    "signature": "org.jfree.chart.util.UnitType.RELATIVE",
    "snippet": "public static final UnitType RELATIVE \u003d new UnitType(\"UnitType.RELATIVE\");",
    "begin_line": 59,
    "end_line": 59,
    "comment": "/** \n * Relative. \n */\n"
  },
  {
    "class_name": "org.jfree.chart.util.UnitType",
    "src_path": "org/jfree/chart/util/UnitType.java",
    "signature": "org.jfree.chart.util.UnitType.name",
    "snippet": "private String name;",
    "begin_line": 62,
    "end_line": 62,
    "comment": "/** \n * The name. \n */\n"
  }
]