[
  {
    "class_name": "com.fasterxml.jackson.databind.AnnotationIntrospector",
    "src_path": "com/fasterxml/jackson/databind/AnnotationIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.AnnotationIntrospector._type",
    "snippet": "private final Type _type;",
    "begin_line": 76,
    "end_line": 76,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.AnnotationIntrospector",
    "src_path": "com/fasterxml/jackson/databind/AnnotationIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.AnnotationIntrospector._name",
    "snippet": "private final String _name;",
    "begin_line": 77,
    "end_line": 77,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.BeanDescription",
    "src_path": "com/fasterxml/jackson/databind/BeanDescription.java",
    "signature": "com.fasterxml.jackson.databind.BeanDescription._type",
    "snippet": "protected final JavaType _type;",
    "begin_line": 28,
    "end_line": 28,
    "comment": "/** \n * Bean type information, including raw class and possible generics information\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DatabindContext",
    "src_path": "com/fasterxml/jackson/databind/DatabindContext.java",
    "signature": "com.fasterxml.jackson.databind.DatabindContext.MAX_ERROR_STR_LEN",
    "snippet": "private final static int MAX_ERROR_STR_LEN \u003d 500;",
    "begin_line": 35,
    "end_line": 35,
    "comment": "/** \n * Let\u0027s limit length of error messages, for cases where underlying data may be very large -- no point in spamming logs with megabytes of meaningless data.\n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
    "src_path": "com/fasterxml/jackson/databind/DeserializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationConfig.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 2;",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
    "src_path": "com/fasterxml/jackson/databind/DeserializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationConfig._problemHandlers",
    "snippet": "protected final LinkedNode\u003cDeserializationProblemHandler\u003e _problemHandlers;",
    "begin_line": 42,
    "end_line": 42,
    "comment": "/** \n * Linked list that contains all registered problem handlers. Implementation as front-added linked list allows for sharing of the list (tail) without copying the list.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
    "src_path": "com/fasterxml/jackson/databind/DeserializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationConfig._nodeFactory",
    "snippet": "protected final JsonNodeFactory _nodeFactory;",
    "begin_line": 47,
    "end_line": 47,
    "comment": "/** \n * Factory used for constructing  {@link com.fasterxml.jackson.databind.JsonNode} instances.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
    "src_path": "com/fasterxml/jackson/databind/DeserializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationConfig._deserFeatures",
    "snippet": "protected final int _deserFeatures;",
    "begin_line": 58,
    "end_line": 58,
    "comment": "/** \n * Set of  {@link DeserializationFeature}s enabled.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
    "src_path": "com/fasterxml/jackson/databind/DeserializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationConfig._parserFeatures",
    "snippet": "protected final int _parserFeatures;",
    "begin_line": 69,
    "end_line": 69,
    "comment": "/** \n * States of  {@link com.fasterxml.jackson.core.JsonParser.Feature}s to enable/disable.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
    "src_path": "com/fasterxml/jackson/databind/DeserializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationConfig._parserFeaturesToChange",
    "snippet": "protected final int _parserFeaturesToChange;",
    "begin_line": 74,
    "end_line": 74,
    "comment": "/** \n * Bitflag of  {@link com.fasterxml.jackson.core.JsonParser.Feature}s to enable/disable\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
    "src_path": "com/fasterxml/jackson/databind/DeserializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationConfig._formatReadFeatures",
    "snippet": "protected final int _formatReadFeatures;",
    "begin_line": 81,
    "end_line": 81,
    "comment": "/** \n * States of  {@link com.fasterxml.jackson.core.FormatFeature}s to enable/disable.\n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
    "src_path": "com/fasterxml/jackson/databind/DeserializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationConfig._formatReadFeaturesToChange",
    "snippet": "protected final int _formatReadFeaturesToChange;",
    "begin_line": 88,
    "end_line": 88,
    "comment": "/** \n * Bitflag of  {@link com.fasterxml.jackson.core.FormatFeature}s to enable/disable\n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 54,
    "end_line": 54,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext._cache",
    "snippet": "protected final DeserializerCache _cache;",
    "begin_line": 65,
    "end_line": 65,
    "comment": "/** \n * Object that handle details of  {@link JsonDeserializer} caching.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext._factory",
    "snippet": "protected final DeserializerFactory _factory;",
    "begin_line": 78,
    "end_line": 78,
    "comment": "/** \n * Read-only factory instance; exposed to let owners (\u003ccode\u003eObjectMapper\u003c/code\u003e, \u003ccode\u003eObjectReader\u003c/code\u003e) access it.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext._config",
    "snippet": "protected final DeserializationConfig _config;",
    "begin_line": 90,
    "end_line": 90,
    "comment": "/** \n * Generic deserialization processing configuration\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext._featureFlags",
    "snippet": "protected final int _featureFlags;",
    "begin_line": 95,
    "end_line": 95,
    "comment": "/** \n * Bitmap of  {@link DeserializationFeature}s that are enabled\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext._view",
    "snippet": "protected final Class\u003c?\u003e _view;",
    "begin_line": 100,
    "end_line": 100,
    "comment": "/** \n * Currently active view, if any.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext._parser",
    "snippet": "protected transient JsonParser _parser;",
    "begin_line": 107,
    "end_line": 107,
    "comment": "/** \n * Currently active parser used for deserialization. May be different from the outermost parser when content is buffered.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext._injectableValues",
    "snippet": "protected final InjectableValues _injectableValues;",
    "begin_line": 113,
    "end_line": 113,
    "comment": "/** \n * Object used for resolving references to injectable values.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext._arrayBuilders",
    "snippet": "protected transient ArrayBuilders _arrayBuilders;",
    "begin_line": 121,
    "end_line": 121,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext._objectBuffer",
    "snippet": "protected transient ObjectBuffer _objectBuffer;",
    "begin_line": 123,
    "end_line": 123,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext._dateFormat",
    "snippet": "protected transient DateFormat _dateFormat;",
    "begin_line": 125,
    "end_line": 125,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext._attributes",
    "snippet": "protected transient ContextAttributes _attributes;",
    "begin_line": 132,
    "end_line": 132,
    "comment": "/** \n * Lazily-constructed holder for per-call attributes.\n * @since 2.3\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/DeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationContext._currentType",
    "snippet": "protected LinkedNode\u003cJavaType\u003e _currentType;",
    "begin_line": 141,
    "end_line": 141,
    "comment": "/** \n * Type of  {@link JsonDeserializer} (or, more specifically,{@link ContextualDeserializer}) that is being contextualized currently.\n * @since 2.5\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
    "src_path": "com/fasterxml/jackson/databind/DeserializationFeature.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationFeature._defaultState",
    "snippet": "private final boolean _defaultState;",
    "begin_line": 466,
    "end_line": 466,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
    "src_path": "com/fasterxml/jackson/databind/DeserializationFeature.java",
    "signature": "com.fasterxml.jackson.databind.DeserializationFeature._mask",
    "snippet": "private final int _mask;",
    "begin_line": 467,
    "end_line": 467,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.JavaType",
    "src_path": "com/fasterxml/jackson/databind/JavaType.java",
    "signature": "com.fasterxml.jackson.databind.JavaType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1;",
    "begin_line": 25,
    "end_line": 25,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.JavaType",
    "src_path": "com/fasterxml/jackson/databind/JavaType.java",
    "signature": "com.fasterxml.jackson.databind.JavaType._class",
    "snippet": "protected final Class\u003c?\u003e _class;",
    "begin_line": 34,
    "end_line": 34,
    "comment": "/** \n * This is the nominal type-erased Class that would be close to the type represented (but not exactly type, due to type erasure: type instance may have more information on this). May be an interface or abstract class, so instantiation may not be possible.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.JavaType",
    "src_path": "com/fasterxml/jackson/databind/JavaType.java",
    "signature": "com.fasterxml.jackson.databind.JavaType._hash",
    "snippet": "protected final int _hash;",
    "begin_line": 36,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.JavaType",
    "src_path": "com/fasterxml/jackson/databind/JavaType.java",
    "signature": "com.fasterxml.jackson.databind.JavaType._valueHandler",
    "snippet": "protected final Object _valueHandler;",
    "begin_line": 46,
    "end_line": 46,
    "comment": "/** \n * Optional handler (codec) that can be attached to indicate  what to use for handling (serializing, deserializing) values of this specific type. \u003cp\u003e Note: untyped (i.e. caller has to cast) because it is used for different kinds of handlers, with unrelated types.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.JavaType",
    "src_path": "com/fasterxml/jackson/databind/JavaType.java",
    "signature": "com.fasterxml.jackson.databind.JavaType._typeHandler",
    "snippet": "protected final Object _typeHandler;",
    "begin_line": 55,
    "end_line": 55,
    "comment": "/** \n * Optional handler that can be attached to indicate how to handle additional type metadata associated with this type. \u003cp\u003e Note: untyped (i.e. caller has to cast) because it is used for different kinds of handlers, with unrelated types.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.JavaType",
    "src_path": "com/fasterxml/jackson/databind/JavaType.java",
    "signature": "com.fasterxml.jackson.databind.JavaType._asStatic",
    "snippet": "protected final boolean _asStatic;",
    "begin_line": 63,
    "end_line": 63,
    "comment": "/** \n * Whether entities defined with this type should be handled using static typing (as opposed to dynamic runtime type) or not.\n * @since 2.2\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.MapperFeature",
    "src_path": "com/fasterxml/jackson/databind/MapperFeature.java",
    "signature": "com.fasterxml.jackson.databind.MapperFeature._defaultState",
    "snippet": "private final boolean _defaultState;",
    "begin_line": 481,
    "end_line": 481,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.MapperFeature",
    "src_path": "com/fasterxml/jackson/databind/MapperFeature.java",
    "signature": "com.fasterxml.jackson.databind.MapperFeature._mask",
    "snippet": "private final int _mask;",
    "begin_line": 482,
    "end_line": 482,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.MappingJsonFactory",
    "src_path": "com/fasterxml/jackson/databind/MappingJsonFactory.java",
    "signature": "com.fasterxml.jackson.databind.MappingJsonFactory.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d -1;",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 2L;",
    "begin_line": 123,
    "end_line": 123,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 203,
    "end_line": 203,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._appliesFor",
    "snippet": "protected final DefaultTyping _appliesFor;",
    "begin_line": 208,
    "end_line": 208,
    "comment": "/** \n * Definition of what types is this default typer valid for.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper.JSON_NODE_TYPE",
    "snippet": "private final static JavaType JSON_NODE_TYPE \u003d\n            SimpleType.constructUnsafe(JsonNode.class);",
    "begin_line": 286,
    "end_line": 287,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper.DEFAULT_ANNOTATION_INTROSPECTOR",
    "snippet": "protected final static AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR \u003d new JacksonAnnotationIntrospector();",
    "begin_line": 291,
    "end_line": 291,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper.DEFAULT_BASE",
    "snippet": "protected final static BaseSettings DEFAULT_BASE \u003d new BaseSettings(\n            null, // can not share global ClassIntrospector any more (2.5+)\n            DEFAULT_ANNOTATION_INTROSPECTOR,\n             null, TypeFactory.defaultInstance(),\n            null, StdDateFormat.instance, null,\n            Locale.getDefault(),\n            null, // to indicate \"use Jackson default TimeZone\" (UTC since Jackson 2.7)\n            Base64Variants.getDefaultVariant() // 2.1\n    );",
    "begin_line": 297,
    "end_line": 305,
    "comment": "/** \n * Base settings contain defaults used for all  {@link ObjectMapper}instances.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._jsonFactory",
    "snippet": "protected final JsonFactory _jsonFactory;",
    "begin_line": 317,
    "end_line": 317,
    "comment": "/** \n * Factory used to create  {@link JsonParser} and {@link JsonGenerator}instances as necessary.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._typeFactory",
    "snippet": "protected TypeFactory _typeFactory;",
    "begin_line": 324,
    "end_line": 324,
    "comment": "/** \n * Specific factory used for creating  {@link JavaType} instances;needed to allow modules to add more custom type handling (mostly to support types of non-Java JVM languages)\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._injectableValues",
    "snippet": "protected InjectableValues _injectableValues;",
    "begin_line": 329,
    "end_line": 329,
    "comment": "/** \n * Provider for values to inject in deserialized POJOs.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._subtypeResolver",
    "snippet": "protected SubtypeResolver _subtypeResolver;",
    "begin_line": 335,
    "end_line": 335,
    "comment": "/** \n * Thing used for registering sub-types, resolving them to super/sub-types as needed.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._configOverrides",
    "snippet": "protected final ConfigOverrides _configOverrides;",
    "begin_line": 343,
    "end_line": 343,
    "comment": "/** \n * Currently active per-type configuration overrides, accessed by declared type of property.\n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._mixIns",
    "snippet": "protected SimpleMixInResolver _mixIns;",
    "begin_line": 364,
    "end_line": 364,
    "comment": "/** \n * Mapping that defines how to apply mix-in annotations: key is the type to received additional annotations, and value is the type that has annotations to \"mix in\". \u003cp\u003e Annotations associated with the value classes will be used to override annotations of the key class, associated with the same field or method. They can be further masked by sub-classes: you can think of it as injecting annotations between the target class and its sub-classes (or interfaces)\n * @since 2.6 (earlier was a simple {@link java.util.Map}\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._serializationConfig",
    "snippet": "protected SerializationConfig _serializationConfig;",
    "begin_line": 376,
    "end_line": 376,
    "comment": "/** \n * Configuration object that defines basic global settings for the serialization process\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._serializerProvider",
    "snippet": "protected DefaultSerializerProvider _serializerProvider;",
    "begin_line": 388,
    "end_line": 388,
    "comment": "/** \n * Object that manages access to serializers used for serialization, including caching. It is configured with  {@link #_serializerFactory} to allowfor constructing custom serializers. \u003cp\u003e Note: while serializers are only exposed  {@link SerializerProvider}, mappers and readers need to access additional API defined by {@link DefaultSerializerProvider}\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._serializerFactory",
    "snippet": "protected SerializerFactory _serializerFactory;",
    "begin_line": 393,
    "end_line": 393,
    "comment": "/** \n * Serializer factory used for constructing serializers.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._deserializationConfig",
    "snippet": "protected DeserializationConfig _deserializationConfig;",
    "begin_line": 405,
    "end_line": 405,
    "comment": "/** \n * Configuration object that defines basic global settings for the serialization process\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._deserializationContext",
    "snippet": "protected DefaultDeserializationContext _deserializationContext;",
    "begin_line": 412,
    "end_line": 412,
    "comment": "/** \n * Blueprint context object; stored here to allow custom sub-classes. Contains references to objects needed for deserialization construction (cache, factory).\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._registeredModuleTypes",
    "snippet": "protected Set\u003cObject\u003e _registeredModuleTypes;",
    "begin_line": 428,
    "end_line": 428,
    "comment": "/** \n * Set of module types (as per  {@link Module#getTypeId()} that have beenregistered; kept track of iff  {@link MapperFeature#IGNORE_DUPLICATE_MODULE_REGISTRATIONS}is enabled, so that duplicate registration calls can be ignored (to avoid adding same handlers multiple times, mostly).\n * @since 2.5\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
    "src_path": "com/fasterxml/jackson/databind/ObjectMapper.java",
    "signature": "com.fasterxml.jackson.databind.ObjectMapper._rootDeserializers",
    "snippet": "final protected ConcurrentHashMap\u003cJavaType, JsonDeserializer\u003cObject\u003e\u003e _rootDeserializers\n        \u003d new ConcurrentHashMap\u003cJavaType, JsonDeserializer\u003cObject\u003e\u003e(64, 0.6f, 2);",
    "begin_line": 458,
    "end_line": 459,
    "comment": "/** \n * We will use a separate main-level Map for keeping track of root-level deserializers. This is where most successful cache lookups get resolved. Map will contain resolvers for all kinds of types, including container types: this is different from the component cache which will only cache bean deserializers. \u003cp\u003e Given that we don\u0027t expect much concurrency for additions (should very quickly converge to zero after startup), let\u0027s explicitly define a low concurrency setting. \u003cp\u003e Since version 1.5, these may are either \"raw\" deserializers (when no type information is needed for base type), or type-wrapped deserializers (if it is needed)\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.PropertyName",
    "src_path": "com/fasterxml/jackson/databind/PropertyName.java",
    "signature": "com.fasterxml.jackson.databind.PropertyName.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 18,
    "end_line": 18,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.PropertyName",
    "src_path": "com/fasterxml/jackson/databind/PropertyName.java",
    "signature": "com.fasterxml.jackson.databind.PropertyName._USE_DEFAULT",
    "snippet": "private final static String _USE_DEFAULT \u003d \"\";",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.PropertyName",
    "src_path": "com/fasterxml/jackson/databind/PropertyName.java",
    "signature": "com.fasterxml.jackson.databind.PropertyName._NO_NAME",
    "snippet": "private final static String _NO_NAME \u003d \"\";",
    "begin_line": 21,
    "end_line": 21,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.PropertyName",
    "src_path": "com/fasterxml/jackson/databind/PropertyName.java",
    "signature": "com.fasterxml.jackson.databind.PropertyName.USE_DEFAULT",
    "snippet": "public final static PropertyName USE_DEFAULT \u003d new PropertyName(_USE_DEFAULT, null);",
    "begin_line": 29,
    "end_line": 29,
    "comment": "/** \n * Special placeholder value that indicates that name to use should be based on the standard heuristics. This can be different from returning null, as null means \"no information available, whereas this value indicates explicit defaulting.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.PropertyName",
    "src_path": "com/fasterxml/jackson/databind/PropertyName.java",
    "signature": "com.fasterxml.jackson.databind.PropertyName.NO_NAME",
    "snippet": "public final static PropertyName NO_NAME \u003d new PropertyName(new String(_NO_NAME), null);",
    "begin_line": 36,
    "end_line": 36,
    "comment": "/** \n * Special placeholder value that indicates that there is no name associated. Exact semantics to use (if any) depend on actual annotation in use, but commonly this value disables behavior for which name would be needed.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.PropertyName",
    "src_path": "com/fasterxml/jackson/databind/PropertyName.java",
    "signature": "com.fasterxml.jackson.databind.PropertyName._simpleName",
    "snippet": "protected final String _simpleName;",
    "begin_line": 41,
    "end_line": 41,
    "comment": "/** \n * Basic name of the property.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.PropertyName",
    "src_path": "com/fasterxml/jackson/databind/PropertyName.java",
    "signature": "com.fasterxml.jackson.databind.PropertyName._namespace",
    "snippet": "protected final String _namespace;",
    "begin_line": 47,
    "end_line": 47,
    "comment": "/** \n * Additional namespace, for formats that have such concept (JSON does not, XML does, for example).\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.PropertyName",
    "src_path": "com/fasterxml/jackson/databind/PropertyName.java",
    "signature": "com.fasterxml.jackson.databind.PropertyName._encodedSimple",
    "snippet": "protected SerializableString _encodedSimple;",
    "begin_line": 58,
    "end_line": 58,
    "comment": "/** \n * Lazily-constructed efficient representation of the simple name. \u003cp\u003e NOTE: not defined as volatile to avoid performance problem with concurrent access in multi-core environments; due to statelessness of  {@link SerializedString} at most leads to multiple instantiations.\n * @since 2.4\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
    "src_path": "com/fasterxml/jackson/databind/SerializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.SerializationConfig.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1;",
    "begin_line": 34,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
    "src_path": "com/fasterxml/jackson/databind/SerializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.SerializationConfig.DEFAULT_PRETTY_PRINTER",
    "snippet": "protected final static PrettyPrinter DEFAULT_PRETTY_PRINTER \u003d new DefaultPrettyPrinter();",
    "begin_line": 37,
    "end_line": 37,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
    "src_path": "com/fasterxml/jackson/databind/SerializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.SerializationConfig._filterProvider",
    "snippet": "protected final FilterProvider _filterProvider;",
    "begin_line": 49,
    "end_line": 49,
    "comment": "/** \n * Object used for resolving filter ids to filter instances. Non-null if explicitly defined; null by default.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
    "src_path": "com/fasterxml/jackson/databind/SerializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.SerializationConfig._defaultPrettyPrinter",
    "snippet": "protected final PrettyPrinter _defaultPrettyPrinter;",
    "begin_line": 57,
    "end_line": 57,
    "comment": "/** \n * If \"default pretty-printing\" is enabled, it will create the instance from this blueprint object.\n * @since 2.6\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
    "src_path": "com/fasterxml/jackson/databind/SerializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.SerializationConfig._serFeatures",
    "snippet": "protected final int _serFeatures;",
    "begin_line": 68,
    "end_line": 68,
    "comment": "/** \n * Set of  {@link SerializationFeature}s enabled.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
    "src_path": "com/fasterxml/jackson/databind/SerializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.SerializationConfig._generatorFeatures",
    "snippet": "protected final int _generatorFeatures;",
    "begin_line": 78,
    "end_line": 78,
    "comment": "/** \n * States of  {@link com.fasterxml.jackson.core.JsonGenerator.Feature}s to enable/disable.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
    "src_path": "com/fasterxml/jackson/databind/SerializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.SerializationConfig._generatorFeaturesToChange",
    "snippet": "protected final int _generatorFeaturesToChange;",
    "begin_line": 83,
    "end_line": 83,
    "comment": "/** \n * Bitflag of  {@link com.fasterxml.jackson.core.JsonGenerator.Feature}s to enable/disable\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
    "src_path": "com/fasterxml/jackson/databind/SerializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.SerializationConfig._formatWriteFeatures",
    "snippet": "protected final int _formatWriteFeatures;",
    "begin_line": 90,
    "end_line": 90,
    "comment": "/** \n * States of  {@link com.fasterxml.jackson.core.FormatFeature}s to enable/disable.\n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
    "src_path": "com/fasterxml/jackson/databind/SerializationConfig.java",
    "signature": "com.fasterxml.jackson.databind.SerializationConfig._formatWriteFeaturesToChange",
    "snippet": "protected final int _formatWriteFeaturesToChange;",
    "begin_line": 97,
    "end_line": 97,
    "comment": "/** \n * Bitflag of  {@link com.fasterxml.jackson.core.FormatFeature}s to enable/disable\n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
    "src_path": "com/fasterxml/jackson/databind/SerializationFeature.java",
    "signature": "com.fasterxml.jackson.databind.SerializationFeature._defaultState",
    "snippet": "private final boolean _defaultState;",
    "begin_line": 425,
    "end_line": 425,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
    "src_path": "com/fasterxml/jackson/databind/SerializationFeature.java",
    "signature": "com.fasterxml.jackson.databind.SerializationFeature._mask",
    "snippet": "private final int _mask;",
    "begin_line": 426,
    "end_line": 426,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider.CACHE_UNKNOWN_MAPPINGS",
    "snippet": "protected final static boolean CACHE_UNKNOWN_MAPPINGS \u003d false;",
    "begin_line": 54,
    "end_line": 54,
    "comment": "/** \n * Setting for determining whether mappings for \"unknown classes\" should be cached for faster resolution. Usually this isn\u0027t needed, but maybe it is in some cases?\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER",
    "snippet": "public final static JsonSerializer\u003cObject\u003e DEFAULT_NULL_KEY_SERIALIZER \u003d\n        new FailingSerializer(\"Null key for a Map not allowed in JSON (use a converting NullKeySerializer?)\");",
    "begin_line": 56,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_UNKNOWN_SERIALIZER",
    "snippet": "protected final static JsonSerializer\u003cObject\u003e DEFAULT_UNKNOWN_SERIALIZER \u003d new UnknownSerializer();",
    "begin_line": 68,
    "end_line": 68,
    "comment": "/** \n * Placeholder serializer used when \u003ccode\u003ejava.lang.Object\u003c/code\u003e typed property is marked to be serialized. \u003cbr\u003e NOTE: starting with 2.6, this instance is NOT used for any other types, and separate instances are constructed for \"empty\" Beans. \u003cp\u003e NOTE: changed to \u003ccode\u003eprotected\u003c/code\u003e for 2.3; no need to be publicly available.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider._config",
    "snippet": "final protected SerializationConfig _config;",
    "begin_line": 79,
    "end_line": 79,
    "comment": "/** \n * Serialization configuration to use for serialization processing.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider._serializationView",
    "snippet": "final protected Class\u003c?\u003e _serializationView;",
    "begin_line": 85,
    "end_line": 85,
    "comment": "/** \n * View used for currently active serialization, if any. Only set for non-blueprint instances.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider._serializerFactory",
    "snippet": "final protected SerializerFactory _serializerFactory;",
    "begin_line": 97,
    "end_line": 97,
    "comment": "/** \n * Factory used for constructing actual serializer instances. Only set for non-blueprint instances.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider._serializerCache",
    "snippet": "final protected SerializerCache _serializerCache;",
    "begin_line": 108,
    "end_line": 108,
    "comment": "/** \n * Cache for doing type-to-value-serializer lookups.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider._attributes",
    "snippet": "protected transient ContextAttributes _attributes;",
    "begin_line": 116,
    "end_line": 116,
    "comment": "/** \n * Lazily-constructed holder for per-call attributes. Only set for non-blueprint instances.\n * @since 2.3\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider._unknownTypeSerializer",
    "snippet": "protected JsonSerializer\u003cObject\u003e _unknownTypeSerializer \u003d DEFAULT_UNKNOWN_SERIALIZER;",
    "begin_line": 130,
    "end_line": 130,
    "comment": "/** \n * Serializer that gets called for values of types for which no serializers can be constructed. \u003cp\u003e The default serializer will simply thrown an exception.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider._keySerializer",
    "snippet": "protected JsonSerializer\u003cObject\u003e _keySerializer;",
    "begin_line": 137,
    "end_line": 137,
    "comment": "/** \n * Serializer used to output non-null keys of Maps (which will get output as JSON Objects), if not null; if null, us the standard default key serializer.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider._nullValueSerializer",
    "snippet": "protected JsonSerializer\u003cObject\u003e _nullValueSerializer \u003d NullSerializer.instance;",
    "begin_line": 143,
    "end_line": 143,
    "comment": "/** \n * Serializer used to output a null value. Default implementation writes nulls using  {@link JsonGenerator#writeNull}.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider._nullKeySerializer",
    "snippet": "protected JsonSerializer\u003cObject\u003e _nullKeySerializer \u003d DEFAULT_NULL_KEY_SERIALIZER;",
    "begin_line": 152,
    "end_line": 152,
    "comment": "/** \n * Serializer used to (try to) output a null key, due to an entry of {@link java.util.Map} having null key.The default implementation will throw an exception if this happens; alternative implementation (like one that would write an Empty String) can be defined.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider._knownSerializers",
    "snippet": "protected final ReadOnlyClassToSerializerMap _knownSerializers;",
    "begin_line": 164,
    "end_line": 164,
    "comment": "/** \n * For fast lookups, we will have a local non-shared read-only map that contains serializers previously fetched.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider._dateFormat",
    "snippet": "protected DateFormat _dateFormat;",
    "begin_line": 171,
    "end_line": 171,
    "comment": "/** \n * Lazily acquired and instantiated formatter object: initialized first time it is needed, reused afterwards. Used via instances (not blueprints), so that access need not be thread-safe.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/SerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.SerializerProvider._stdNullValueSerializer",
    "snippet": "protected final boolean _stdNullValueSerializer;",
    "begin_line": 178,
    "end_line": 178,
    "comment": "/** \n * Flag set to indicate that we are using vanilla null value serialization\n * @since 2.3\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
    "src_path": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
    "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 24,
    "end_line": 24,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
    "src_path": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
    "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.DEFAULT_TIMEZONE",
    "snippet": "private static final TimeZone DEFAULT_TIMEZONE \u003d \n            //  TimeZone.getDefault()\n            /* [databind#915] 05-Nov-2015, tatu: Changed to UTC, from earlier\n             * baseline of GMT (up to 2.6)\n             */\n            TimeZone.getTimeZone(\"UTC\");",
    "begin_line": 29,
    "end_line": 34,
    "comment": "/** \n * We will use a default TimeZone as the baseline.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
    "src_path": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
    "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings._classIntrospector",
    "snippet": "protected final ClassIntrospector _classIntrospector;",
    "begin_line": 47,
    "end_line": 47,
    "comment": "/** \n * Introspector used to figure out Bean properties needed for bean serialization and deserialization. Overridable so that it is possible to change low-level details of introspection, like adding new annotation types.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
    "src_path": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
    "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings._annotationIntrospector",
    "snippet": "protected final AnnotationIntrospector _annotationIntrospector;",
    "begin_line": 52,
    "end_line": 52,
    "comment": "/** \n * Introspector used for accessing annotation value based configuration.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
    "src_path": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
    "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings._propertyNamingStrategy",
    "snippet": "protected final PropertyNamingStrategy _propertyNamingStrategy;",
    "begin_line": 57,
    "end_line": 57,
    "comment": "/** \n * Custom property naming strategy in use, if any.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
    "src_path": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
    "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings._typeFactory",
    "snippet": "protected final TypeFactory _typeFactory;",
    "begin_line": 64,
    "end_line": 64,
    "comment": "/** \n * Specific factory used for creating  {@link JavaType} instances;needed to allow modules to add more custom type handling (mostly to support types of non-Java JVM languages)\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
    "src_path": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
    "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings._typeResolverBuilder",
    "snippet": "protected final TypeResolverBuilder\u003c?\u003e _typeResolverBuilder;",
    "begin_line": 76,
    "end_line": 76,
    "comment": "/** \n * Type information handler used for \"untyped\" values (ones declared to have type \u003ccode\u003eObject.class\u003c/code\u003e)\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
    "src_path": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
    "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings._dateFormat",
    "snippet": "protected final DateFormat _dateFormat;",
    "begin_line": 91,
    "end_line": 91,
    "comment": "/** \n * Custom date format to use for de-serialization. If specified, will be used instead of  {@link com.fasterxml.jackson.databind.util.StdDateFormat}. \u003cp\u003e Note that the configured format object will be cloned once per deserialization process (first time it is needed)\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
    "src_path": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
    "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings._handlerInstantiator",
    "snippet": "protected final HandlerInstantiator _handlerInstantiator;",
    "begin_line": 99,
    "end_line": 99,
    "comment": "/** \n * Object used for creating instances of handlers (serializers, deserializers, type and type id resolvers), given class to instantiate. This is typically used to do additional configuration (with dependency injection, for example) beyond simply construction of instances; or to use alternative constructors.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
    "src_path": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
    "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings._locale",
    "snippet": "protected final Locale _locale;",
    "begin_line": 105,
    "end_line": 105,
    "comment": "/** \n * Default  {@link java.util.Locale} used with serialization formats.Default value is  {@link Locale#getDefault()}.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
    "src_path": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
    "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings._timeZone",
    "snippet": "protected final TimeZone _timeZone;",
    "begin_line": 116,
    "end_line": 116,
    "comment": "/** \n * Default  {@link java.util.TimeZone} used with serialization formats,if (and only if!) explicitly set by use; otherwise `null` to indicate \"use default\", which means \"UTC\" (from Jackson 2.7); earlier versions (up to 2.6) used \"GMT\". \u003cp\u003e Note that if a new value is set, timezone is also assigned to {@link #_dateFormat} of this object.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
    "src_path": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
    "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings._defaultBase64",
    "snippet": "protected final Base64Variant _defaultBase64;",
    "begin_line": 125,
    "end_line": 125,
    "comment": "/** \n * Explicitly default  {@link Base64Variant} to use for handlingbinary data (\u003ccode\u003ebyte[]\u003c/code\u003e), used with data formats that use base64 encoding (like JSON, CSV).\n * @since 2.1\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverride",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverride.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverride._format",
    "snippet": "protected JsonFormat.Value _format;",
    "begin_line": 23,
    "end_line": 23,
    "comment": "/** \n * Definitions of format overrides, if any.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverride",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverride.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverride._include",
    "snippet": "protected JsonInclude.Value _include;",
    "begin_line": 28,
    "end_line": 28,
    "comment": "/** \n * Definitions of inclusion overrides, if any.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverride",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverride.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverride._ignorals",
    "snippet": "protected JsonIgnoreProperties.Value _ignorals;",
    "begin_line": 34,
    "end_line": 34,
    "comment": "/** \n * Definitions of property ignoral (whether to serialize, deserialize given logical property) overrides, if any.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverride",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverride.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverride._setterInfo",
    "snippet": "protected JsonSetter.Value _setterInfo;",
    "begin_line": 41,
    "end_line": 41,
    "comment": "/** \n * Definitions of setter overrides regarding null handling\n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverride",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverride.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverride._visibility",
    "snippet": "protected JsonAutoDetect.Value _visibility;",
    "begin_line": 48,
    "end_line": 48,
    "comment": "/** \n * Overrides for auto-detection visibility rules for this type.\n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverride",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverride.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverride._isIgnoredType",
    "snippet": "protected Boolean _isIgnoredType;",
    "begin_line": 56,
    "end_line": 56,
    "comment": "/** \n * Flag that indicates whether \"is ignorable type\" is specified for this type; and if so, is it to be ignored (true) or not ignored (false); `null` is used to indicate \"not specified\", in which case other configuration (class annotation) is used.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverride",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverride.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverride._mergeable",
    "snippet": "protected Boolean _mergeable;",
    "begin_line": 62,
    "end_line": 62,
    "comment": "/** \n * Flag that indicates whether properties of this type default to being merged or not.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverride",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverride.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverride.INSTANCE",
    "snippet": "final static Empty INSTANCE \u003d new Empty();",
    "begin_line": 113,
    "end_line": 113,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverrides.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverrides.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 17,
    "end_line": 17,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverrides.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverrides._overrides",
    "snippet": "protected Map\u003cClass\u003c?\u003e, MutableConfigOverride\u003e _overrides;",
    "begin_line": 22,
    "end_line": 22,
    "comment": "/** \n * Per-type override definitions\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverrides.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverrides._defaultInclusion",
    "snippet": "protected JsonInclude.Value _defaultInclusion;",
    "begin_line": 29,
    "end_line": 29,
    "comment": "/** \n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverrides.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverrides._defaultSetterInfo",
    "snippet": "protected JsonSetter.Value _defaultSetterInfo;",
    "begin_line": 34,
    "end_line": 34,
    "comment": "/** \n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverrides.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverrides._visibilityChecker",
    "snippet": "protected VisibilityChecker\u003c?\u003e _visibilityChecker;",
    "begin_line": 39,
    "end_line": 39,
    "comment": "/** \n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
    "src_path": "com/fasterxml/jackson/databind/cfg/ConfigOverrides.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ConfigOverrides._defaultMergeable",
    "snippet": "protected Boolean _defaultMergeable;",
    "begin_line": 44,
    "end_line": 44,
    "comment": "/** \n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
    "src_path": "com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 65,
    "end_line": 65,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
    "src_path": "com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.EMPTY",
    "snippet": "protected final static Impl EMPTY \u003d new Impl(Collections.emptyMap());",
    "begin_line": 67,
    "end_line": 67,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
    "src_path": "com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.NULL_SURROGATE",
    "snippet": "protected final static Object NULL_SURROGATE \u003d new Object();",
    "begin_line": 69,
    "end_line": 69,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
    "src_path": "com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes._shared",
    "snippet": "protected final Map\u003c?,?\u003e _shared;",
    "begin_line": 74,
    "end_line": 74,
    "comment": "/** \n * Shared attributes that we can not modify in-place.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
    "src_path": "com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
    "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes._nonShared",
    "snippet": "protected transient Map\u003cObject,Object\u003e _nonShared;",
    "begin_line": 84,
    "end_line": 84,
    "comment": "/** \n * Per-call attributes that we can directly modify, since they are not shared between threads. \u003cp\u003e NOTE: typed as Object-to-Object, unlike  {@link #_shared}, because we need to be able to modify contents, and wildcard type would complicate that access.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 15,
    "end_line": 15,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.NO_DESERIALIZERS",
    "snippet": "protected final static Deserializers[] NO_DESERIALIZERS \u003d new Deserializers[0];",
    "begin_line": 17,
    "end_line": 17,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.NO_MODIFIERS",
    "snippet": "protected final static BeanDeserializerModifier[] NO_MODIFIERS \u003d new BeanDeserializerModifier[0];",
    "begin_line": 18,
    "end_line": 18,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.NO_ABSTRACT_TYPE_RESOLVERS",
    "snippet": "protected final static AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS \u003d new AbstractTypeResolver[0];",
    "begin_line": 19,
    "end_line": 19,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.NO_VALUE_INSTANTIATORS",
    "snippet": "protected final static ValueInstantiators[] NO_VALUE_INSTANTIATORS \u003d new ValueInstantiators[0];",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.DEFAULT_KEY_DESERIALIZERS",
    "snippet": "protected final static KeyDeserializers[] DEFAULT_KEY_DESERIALIZERS \u003d new KeyDeserializers[] {\n        new StdKeyDeserializers()\n    };",
    "begin_line": 28,
    "end_line": 30,
    "comment": "/** \n * By default we plug default key deserializers using as \"just another\" set of of key deserializers.\n * @since 2.2\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig._additionalDeserializers",
    "snippet": "protected final Deserializers[] _additionalDeserializers;",
    "begin_line": 36,
    "end_line": 36,
    "comment": "/** \n * List of providers for additional deserializers, checked before considering default basic or bean deserializers.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig._additionalKeyDeserializers",
    "snippet": "protected final KeyDeserializers[] _additionalKeyDeserializers;",
    "begin_line": 42,
    "end_line": 42,
    "comment": "/** \n * List of providers for additional key deserializers, checked before considering standard key deserializers.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig._modifiers",
    "snippet": "protected final BeanDeserializerModifier[] _modifiers;",
    "begin_line": 48,
    "end_line": 48,
    "comment": "/** \n * List of modifiers that can change the way  {@link BeanDeserializer} instancesare configured and constructed.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig._abstractTypeResolvers",
    "snippet": "protected final AbstractTypeResolver[] _abstractTypeResolvers;",
    "begin_line": 55,
    "end_line": 55,
    "comment": "/** \n * List of objects that may be able to resolve abstract types to concrete types. Used by functionality like \"mr Bean\" to materialize types as needed.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig._valueInstantiators",
    "snippet": "protected final ValueInstantiators[] _valueInstantiators;",
    "begin_line": 64,
    "end_line": 64,
    "comment": "/** \n * List of objects that know how to create instances of POJO types; possibly using custom construction (non-annoted constructors; factory methods external to value type etc). Used to support objects that are created using non-standard methods; or to support post-constructor functionality.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 2L;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.EMPTY_INCLUDE",
    "snippet": "protected final static JsonInclude.Value EMPTY_INCLUDE \u003d JsonInclude.Value.empty();",
    "begin_line": 45,
    "end_line": 45,
    "comment": "/** \n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.EMPTY_FORMAT",
    "snippet": "protected final static JsonFormat.Value EMPTY_FORMAT \u003d JsonFormat.Value.empty();",
    "begin_line": 50,
    "end_line": 50,
    "comment": "/** \n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig._mapperFeatures",
    "snippet": "protected final int _mapperFeatures;",
    "begin_line": 55,
    "end_line": 55,
    "comment": "/** \n * Set of shared mapper features enabled.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig._base",
    "snippet": "protected final BaseSettings _base;",
    "begin_line": 60,
    "end_line": 60,
    "comment": "/** \n * Immutable container object for simple configuration settings.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.EMPTY_OVERRIDE",
    "snippet": "protected final static ConfigOverride EMPTY_OVERRIDE \u003d ConfigOverride.empty();",
    "begin_line": 30,
    "end_line": 30,
    "comment": "/** \n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.DEFAULT_MAPPER_FEATURES",
    "snippet": "private final static int DEFAULT_MAPPER_FEATURES \u003d collectFeatureDefaults(MapperFeature.class);",
    "begin_line": 32,
    "end_line": 32,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.AUTO_DETECT_MASK",
    "snippet": "private final static int AUTO_DETECT_MASK \u003d\n            MapperFeature.AUTO_DETECT_FIELDS.getMask()\n            | MapperFeature.AUTO_DETECT_GETTERS.getMask()\n            | MapperFeature.AUTO_DETECT_IS_GETTERS.getMask()\n            | MapperFeature.AUTO_DETECT_SETTERS.getMask()\n            | MapperFeature.AUTO_DETECT_CREATORS.getMask()\n            ;",
    "begin_line": 37,
    "end_line": 43,
    "comment": "/** \n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase._mixIns",
    "snippet": "protected final SimpleMixInResolver _mixIns;",
    "begin_line": 57,
    "end_line": 57,
    "comment": "/** \n * Mix-in annotation mappings to use, if any: immutable, can not be changed once defined.\n * @since 2.6\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase._subtypeResolver",
    "snippet": "protected final SubtypeResolver _subtypeResolver;",
    "begin_line": 66,
    "end_line": 66,
    "comment": "/** \n * Registered concrete subtypes that can be used instead of (or in addition to) ones declared using annotations. \u003cp\u003e Note that instances are stateful and as such may need to be copied, and may NOT be demoted down to  {@link BaseSettings}.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase._rootName",
    "snippet": "protected final PropertyName _rootName;",
    "begin_line": 73,
    "end_line": 73,
    "comment": "/** \n * Explicitly defined root name to use, if any; if empty String, will disable root-name wrapping; if null, will use defaults\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase._view",
    "snippet": "protected final Class\u003c?\u003e _view;",
    "begin_line": 81,
    "end_line": 81,
    "comment": "/** \n * View to use for filtering out properties to serialize or deserialize. Null if none (will also be assigned null if \u003ccode\u003eObject.class\u003c/code\u003e is defined), meaning that all properties are to be included.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase._attributes",
    "snippet": "protected final ContextAttributes _attributes;",
    "begin_line": 89,
    "end_line": 89,
    "comment": "/** \n * Contextual attributes accessible (get and set) during processing, on per-call basis.\n * @since 2.3\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase._rootNames",
    "snippet": "protected final RootNameLookup _rootNames;",
    "begin_line": 100,
    "end_line": 100,
    "comment": "/** \n * Simple cache used for finding out possible root name for root name wrapping. \u003cp\u003e Note that instances are stateful (for caching) and as such may need to be copied, and may NOT be demoted down to  {@link BaseSettings}.\n * @since 2.6\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
    "src_path": "com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
    "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase._configOverrides",
    "snippet": "protected final ConfigOverrides _configOverrides;",
    "begin_line": 107,
    "end_line": 107,
    "comment": "/** \n * Configuration overrides to apply, keyed by type of property.\n * @since 2.8\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 14,
    "end_line": 14,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.NO_SERIALIZERS",
    "snippet": "protected final static Serializers[] NO_SERIALIZERS \u003d new Serializers[0];",
    "begin_line": 19,
    "end_line": 19,
    "comment": "/** \n * Constant for empty \u003ccode\u003eSerializers\u003c/code\u003e array (which by definition is stateless and reusable)\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.NO_MODIFIERS",
    "snippet": "protected final static BeanSerializerModifier[] NO_MODIFIERS \u003d new BeanSerializerModifier[0];",
    "begin_line": 21,
    "end_line": 21,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig._additionalSerializers",
    "snippet": "protected final Serializers[] _additionalSerializers;",
    "begin_line": 27,
    "end_line": 27,
    "comment": "/** \n * List of providers for additional serializers, checked before considering default basic or bean serialializers.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig._additionalKeySerializers",
    "snippet": "protected final Serializers[] _additionalKeySerializers;",
    "begin_line": 33,
    "end_line": 33,
    "comment": "/** \n * List of providers for additional key serializers, checked before considering default key serialializers.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
    "src_path": "com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
    "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig._modifiers",
    "snippet": "protected final BeanSerializerModifier[] _modifiers;",
    "begin_line": 39,
    "end_line": 39,
    "comment": "/** \n * List of modifiers that can change the way  {@link BeanSerializer} instancesare configured and constructed.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.CLASS_OBJECT",
    "snippet": "private final static Class\u003c?\u003e CLASS_OBJECT \u003d Object.class;",
    "begin_line": 39,
    "end_line": 39,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.CLASS_STRING",
    "snippet": "private final static Class\u003c?\u003e CLASS_STRING \u003d String.class;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.CLASS_CHAR_BUFFER",
    "snippet": "private final static Class\u003c?\u003e CLASS_CHAR_BUFFER \u003d CharSequence.class;",
    "begin_line": 41,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.CLASS_ITERABLE",
    "snippet": "private final static Class\u003c?\u003e CLASS_ITERABLE \u003d Iterable.class;",
    "begin_line": 42,
    "end_line": 42,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.CLASS_MAP_ENTRY",
    "snippet": "private final static Class\u003c?\u003e CLASS_MAP_ENTRY \u003d Map.Entry.class;",
    "begin_line": 43,
    "end_line": 43,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.UNWRAPPED_CREATOR_PARAM_NAME",
    "snippet": "protected final static PropertyName UNWRAPPED_CREATOR_PARAM_NAME \u003d new PropertyName(\"@JsonUnwrapped\");",
    "begin_line": 49,
    "end_line": 49,
    "comment": "/** \n * We need a placeholder for creator properties that don\u0027t have name but are marked with `@JsonWrapped` annotation.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._mapFallbacks",
    "snippet": "@SuppressWarnings(\"rawtypes\")\n    final static HashMap\u003cString, Class\u003c? extends Map\u003e\u003e _mapFallbacks \u003d\n        new HashMap\u003cString, Class\u003c? extends Map\u003e\u003e();",
    "begin_line": 56,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._collectionFallbacks",
    "snippet": "@SuppressWarnings(\"rawtypes\")\n    final static HashMap\u003cString, Class\u003c? extends Collection\u003e\u003e _collectionFallbacks \u003d\n        new HashMap\u003cString, Class\u003c? extends Collection\u003e\u003e();",
    "begin_line": 73,
    "end_line": 74,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._factoryConfig",
    "snippet": "protected final DeserializerFactoryConfig _factoryConfig;",
    "begin_line": 101,
    "end_line": 101,
    "comment": "/** \n * Configuration settings for this factory; immutable instance (just like this factory), new version created via copy-constructor (fluent-style)\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1;",
    "begin_line": 32,
    "end_line": 32,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.INIT_CAUSE_PARAMS",
    "snippet": "private final static Class\u003c?\u003e[] INIT_CAUSE_PARAMS \u003d new Class\u003c?\u003e[] { Throwable.class };",
    "begin_line": 37,
    "end_line": 37,
    "comment": "/** \n * Signature of \u003cb\u003eThrowable.initCause\u003c/b\u003e method.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.DEFAULT_NO_DESER_CLASS_NAMES",
    "snippet": "protected final static Set\u003cString\u003e DEFAULT_NO_DESER_CLASS_NAMES;",
    "begin_line": 45,
    "end_line": 45,
    "comment": "/** \n * Set of well-known \"nasty classes\", deserialization of which is considered dangerous and should (and is) prevented by default.\n * @since 2.8.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory._cfgIllegalClassNames",
    "snippet": "protected Set\u003cString\u003e _cfgIllegalClassNames \u003d DEFAULT_NO_DESER_CLASS_NAMES;",
    "begin_line": 67,
    "end_line": 67,
    "comment": "/** \n * Set of class names of types that are never to be deserialized.\n * @since 2.8.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.instance",
    "snippet": "public final static BeanDeserializerFactory instance \u003d new BeanDeserializerFactory(\n            new DeserializerFactoryConfig());",
    "begin_line": 79,
    "end_line": 80,
    "comment": "/** \n * Globally shareable thread-safe instance which has no additional custom deserializers registered\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 32,
    "end_line": 32,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext._objectIds",
    "snippet": "protected transient LinkedHashMap\u003cObjectIdGenerator.IdKey, ReadableObjectId\u003e _objectIds;",
    "begin_line": 34,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext._objectIdResolvers",
    "snippet": "private List\u003cObjectIdResolver\u003e _objectIdResolvers;",
    "begin_line": 36,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
    "src_path": "com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
    "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 311,
    "end_line": 311,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "src_path": "com/fasterxml/jackson/databind/deser/DeserializerCache.java",
    "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 24,
    "end_line": 24,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "src_path": "com/fasterxml/jackson/databind/deser/DeserializerCache.java",
    "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache._cachedDeserializers",
    "snippet": "final protected ConcurrentHashMap\u003cJavaType, JsonDeserializer\u003cObject\u003e\u003e _cachedDeserializers\n        \u003d new ConcurrentHashMap\u003cJavaType, JsonDeserializer\u003cObject\u003e\u003e(64, 0.75f, 4);",
    "begin_line": 42,
    "end_line": 43,
    "comment": "/** \n * We will also cache some dynamically constructed deserializers; specifically, ones that are expensive to construct. This currently means bean and Enum deserializers; starting with 2.5, container deserializers will also be cached. \u003cp\u003e Given that we don\u0027t expect much concurrency for additions (should very quickly converge to zero after startup), let\u0027s define a relatively low concurrency setting.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "src_path": "com/fasterxml/jackson/databind/deser/DeserializerCache.java",
    "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache._incompleteDeserializers",
    "snippet": "final protected HashMap\u003cJavaType, JsonDeserializer\u003cObject\u003e\u003e _incompleteDeserializers\n        \u003d new HashMap\u003cJavaType, JsonDeserializer\u003cObject\u003e\u003e(8);",
    "begin_line": 50,
    "end_line": 51,
    "comment": "/** \n * During deserializer construction process we may need to keep track of partially completed deserializers, to resolve cyclic dependencies. This is the map used for storing deserializers before they are fully complete.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.DeserializerFactory",
    "src_path": "com/fasterxml/jackson/databind/deser/DeserializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.deser.DeserializerFactory.NO_DESERIALIZERS",
    "snippet": "protected final static Deserializers[] NO_DESERIALIZERS \u003d new Deserializers[0];",
    "begin_line": 43,
    "end_line": 43,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
    "src_path": "com/fasterxml/jackson/databind/deser/std/StdKeyDeserializers.java",
    "signature": "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 31,
    "end_line": 31,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ext.Java7Support",
    "src_path": "com/fasterxml/jackson/databind/ext/Java7Support.java",
    "signature": "com.fasterxml.jackson.databind.ext.Java7Support.IMPL",
    "snippet": "private final static Java7Support IMPL;",
    "begin_line": 19,
    "end_line": 19,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "src_path": "com/fasterxml/jackson/databind/ext/Java7SupportImpl.java",
    "signature": "com.fasterxml.jackson.databind.ext.Java7SupportImpl._bogus",
    "snippet": "@SuppressWarnings(\"unused\") Class\u003c?\u003e _bogus;",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._type",
    "snippet": "final protected JavaType _type;",
    "begin_line": 29,
    "end_line": 29,
    "comment": "/** \n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._class",
    "snippet": "final protected Class\u003c?\u003e _class;",
    "begin_line": 35,
    "end_line": 35,
    "comment": "/** \n * Class for which annotations apply, and that owns other components (constructors, methods)\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._bindings",
    "snippet": "final protected TypeBindings _bindings;",
    "begin_line": 42,
    "end_line": 42,
    "comment": "/** \n * Type bindings to use for members of  {@link #_class}.\n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._superTypes",
    "snippet": "final protected List\u003cJavaType\u003e _superTypes;",
    "begin_line": 48,
    "end_line": 48,
    "comment": "/** \n * Ordered set of super classes and interfaces of the class itself: included in order of precedence\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._annotationIntrospector",
    "snippet": "final protected AnnotationIntrospector _annotationIntrospector;",
    "begin_line": 55,
    "end_line": 55,
    "comment": "/** \n * Filter used to determine which annotations to gather; used to optimize things so that unnecessary annotations are ignored.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._typeFactory",
    "snippet": "final protected TypeFactory _typeFactory;",
    "begin_line": 60,
    "end_line": 60,
    "comment": "/** \n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._mixInResolver",
    "snippet": "final protected MixInResolver _mixInResolver;",
    "begin_line": 67,
    "end_line": 67,
    "comment": "/** \n * Object that knows mapping of mix-in classes (ones that contain annotations to add) with their target classes (ones that get these additional annotations \"mixed in\").\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._primaryMixIn",
    "snippet": "final protected Class\u003c?\u003e _primaryMixIn;",
    "begin_line": 73,
    "end_line": 73,
    "comment": "/** \n * Primary mix-in class; one to use for the annotated class itself. Can be null.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._classAnnotations",
    "snippet": "final protected Annotations _classAnnotations;",
    "begin_line": 85,
    "end_line": 85,
    "comment": "/** \n * Combined list of Jackson annotations that the class has, including inheritable ones from super classes and interfaces\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._creators",
    "snippet": "protected Creators _creators;",
    "begin_line": 90,
    "end_line": 90,
    "comment": "/** \n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._memberMethods",
    "snippet": "protected AnnotatedMethodMap _memberMethods;",
    "begin_line": 96,
    "end_line": 96,
    "comment": "/** \n * Member methods of interest; for now ones with 0 or 1 arguments (just optimization, since others won\u0027t be used now)\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._fields",
    "snippet": "protected List\u003cAnnotatedField\u003e _fields;",
    "begin_line": 102,
    "end_line": 102,
    "comment": "/** \n * Member fields of interest: ones that are either public, or have at least one annotation.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._nonStaticInnerClass",
    "snippet": "protected transient Boolean _nonStaticInnerClass;",
    "begin_line": 110,
    "end_line": 110,
    "comment": "/** \n * Lazily determined property to see if this is a non-static inner class.\n * @since 2.8.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.defaultConstructor",
    "snippet": "public final AnnotatedConstructor defaultConstructor;",
    "begin_line": 366,
    "end_line": 366,
    "comment": "/** \n * Default constructor of the annotated class, if it has one.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.constructors",
    "snippet": "public final List\u003cAnnotatedConstructor\u003e constructors;",
    "begin_line": 371,
    "end_line": 371,
    "comment": "/** \n * Single argument constructors the class has, if any.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.creatorMethods",
    "snippet": "public final List\u003cAnnotatedMethod\u003e creatorMethods;",
    "begin_line": 377,
    "end_line": 377,
    "comment": "/** \n * Single argument static methods that might be usable as factory methods\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver.NO_ANNOTATIONS",
    "snippet": "private final static Annotations NO_ANNOTATIONS \u003d AnnotationCollector.emptyAnnotations();",
    "begin_line": 25,
    "end_line": 25,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._config",
    "snippet": "private final MapperConfig\u003c?\u003e _config;",
    "begin_line": 27,
    "end_line": 27,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._intr",
    "snippet": "private final AnnotationIntrospector _intr;",
    "begin_line": 28,
    "end_line": 28,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._mixInResolver",
    "snippet": "private final MixInResolver _mixInResolver;",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._bindings",
    "snippet": "private final TypeBindings _bindings;",
    "begin_line": 30,
    "end_line": 30,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._type",
    "snippet": "private final JavaType _type;",
    "begin_line": 32,
    "end_line": 32,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._class",
    "snippet": "private final Class\u003c?\u003e _class;",
    "begin_line": 33,
    "end_line": 33,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._primaryMixin",
    "snippet": "private final Class\u003c?\u003e _primaryMixin;",
    "begin_line": 34,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector.NO_ANNOTATIONS",
    "snippet": "protected final static Annotations NO_ANNOTATIONS \u003d new NoAnnotations();",
    "begin_line": 18,
    "end_line": 18,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector._data",
    "snippet": "protected final Object _data;",
    "begin_line": 23,
    "end_line": 23,
    "comment": "/** \n * Optional data to carry along\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector.instance",
    "snippet": "public final static EmptyCollector instance \u003d new EmptyCollector(null);",
    "begin_line": 64,
    "end_line": 64,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector._type",
    "snippet": "private Class\u003c?\u003e _type;",
    "begin_line": 89,
    "end_line": 89,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector._value",
    "snippet": "private Annotation _value;",
    "begin_line": 90,
    "end_line": 90,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector._annotations",
    "snippet": "protected final HashMap\u003cClass\u003c?\u003e,Annotation\u003e _annotations;",
    "begin_line": 128,
    "end_line": 128,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 186,
    "end_line": 186,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 214,
    "end_line": 214,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector._type",
    "snippet": "private final Class\u003c?\u003e _type;",
    "begin_line": 216,
    "end_line": 216,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector._value",
    "snippet": "private final Annotation _value;",
    "begin_line": 217,
    "end_line": 217,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 257,
    "end_line": 257,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector._type1",
    "snippet": "private final Class\u003c?\u003e _type1, _type2;",
    "begin_line": 259,
    "end_line": 259,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector._type2",
    "snippet": "private final Class\u003c?\u003e _type1, _type2;",
    "begin_line": 259,
    "end_line": 259,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector._value1",
    "snippet": "private final Annotation _value1, _value2;",
    "begin_line": 260,
    "end_line": 260,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationCollector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationCollector._value2",
    "snippet": "private final Annotation _value1, _value2;",
    "begin_line": 260,
    "end_line": 260,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationMap",
    "src_path": "com/fasterxml/jackson/databind/introspect/AnnotationMap.java",
    "signature": "com.fasterxml.jackson.databind.introspect.AnnotationMap._annotations",
    "snippet": "protected HashMap\u003cClass\u003c?\u003e,Annotation\u003e _annotations;",
    "begin_line": 16,
    "end_line": 16,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.NO_VIEWS",
    "snippet": "private final static Class\u003c?\u003e[] NO_VIEWS \u003d new Class\u003c?\u003e[0];",
    "begin_line": 31,
    "end_line": 31,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription._propCollector",
    "snippet": "final protected POJOPropertiesCollector _propCollector;",
    "begin_line": 44,
    "end_line": 44,
    "comment": "/** \n * We will hold a reference to the collector in cases where information is lazily accessed and constructed; properties are only accessed when they are actually needed.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription._config",
    "snippet": "final protected MapperConfig\u003c?\u003e _config;",
    "begin_line": 46,
    "end_line": 46,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription._annotationIntrospector",
    "snippet": "final protected AnnotationIntrospector _annotationIntrospector;",
    "begin_line": 48,
    "end_line": 48,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription._classInfo",
    "snippet": "final protected AnnotatedClass _classInfo;",
    "begin_line": 59,
    "end_line": 59,
    "comment": "/** \n * Information collected about the class introspected.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription._defaultViews",
    "snippet": "protected Class\u003c?\u003e[] _defaultViews;",
    "begin_line": 64,
    "end_line": 64,
    "comment": "/** \n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription._defaultViewsResolved",
    "snippet": "protected boolean _defaultViewsResolved;",
    "begin_line": 69,
    "end_line": 69,
    "comment": "/** \n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription._properties",
    "snippet": "protected List\u003cBeanPropertyDefinition\u003e _properties;",
    "begin_line": 80,
    "end_line": 80,
    "comment": "/** \n * Properties collected for the POJO; initialized as needed.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription._objectIdInfo",
    "snippet": "protected ObjectIdInfo _objectIdInfo;",
    "begin_line": 85,
    "end_line": 85,
    "comment": "/** \n * Details of Object Id to include, if any\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.STRING_DESC",
    "snippet": "protected final static BasicBeanDescription STRING_DESC;",
    "begin_line": 30,
    "end_line": 30,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.BOOLEAN_DESC",
    "snippet": "protected final static BasicBeanDescription BOOLEAN_DESC;",
    "begin_line": 35,
    "end_line": 35,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.INT_DESC",
    "snippet": "protected final static BasicBeanDescription INT_DESC;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.LONG_DESC",
    "snippet": "protected final static BasicBeanDescription LONG_DESC;",
    "begin_line": 45,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
    "src_path": "com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector._cachedFCA",
    "snippet": "protected final LRUMap\u003cJavaType,BasicBeanDescription\u003e _cachedFCA;",
    "begin_line": 63,
    "end_line": 63,
    "comment": "/** \n * Looks like \u0027forClassAnnotations()\u0027 gets called so frequently that we should consider caching to avoid some of the lookups.\n * @since 2.5\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "src_path": "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 34,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "src_path": "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.ANNOTATIONS_TO_INFER_SER",
    "snippet": "@SuppressWarnings(\"unchecked\")\n    private final static Class\u003c? extends Annotation\u003e[] ANNOTATIONS_TO_INFER_SER \u003d (Class\u003c? extends Annotation\u003e[])\n            new Class\u003c?\u003e[] {\n        JsonSerialize.class,\n        JsonView.class,\n        JsonFormat.class,\n        JsonTypeInfo.class,\n        JsonRawValue.class,\n        JsonUnwrapped.class,\n        JsonBackReference.class,\n        JsonManagedReference.class\n    };",
    "begin_line": 37,
    "end_line": 47,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "src_path": "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.ANNOTATIONS_TO_INFER_DESER",
    "snippet": "@SuppressWarnings(\"unchecked\")\n    private final static Class\u003c? extends Annotation\u003e[] ANNOTATIONS_TO_INFER_DESER \u003d (Class\u003c? extends Annotation\u003e[])\n            new Class\u003c?\u003e[] {\n        JsonDeserialize.class,\n        JsonView.class,\n        JsonFormat.class,\n        JsonTypeInfo.class,\n        JsonUnwrapped.class,\n        JsonBackReference.class,\n        JsonManagedReference.class,\n        JsonMerge.class // since 2.9\n    };",
    "begin_line": 50,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "src_path": "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._java7Helper",
    "snippet": "private static final Java7Support _java7Helper;",
    "begin_line": 64,
    "end_line": 64,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "src_path": "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._annotationsInside",
    "snippet": "protected transient LRUMap\u003cClass\u003c?\u003e,Boolean\u003e _annotationsInside \u003d new LRUMap\u003cClass\u003c?\u003e,Boolean\u003e(48, 48);",
    "begin_line": 82,
    "end_line": 82,
    "comment": "/** \n * Since introspection of annotation types is a performance issue in some use cases (rare, but do exist), let\u0027s try a simple cache to reduce need for actual meta-annotation introspection. \u003cp\u003e Non-final only because it needs to be re-created after deserialization.\n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "src_path": "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
    "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._cfgConstructorPropertiesImpliesCreator",
    "snippet": "protected boolean _cfgConstructorPropertiesImpliesCreator \u003d true;",
    "begin_line": 98,
    "end_line": 98,
    "comment": "/** \n * See  {@link #setConstructorPropertiesImpliesCreator(boolean)} forexplanation. \u003cp\u003e Defaults to true.\n * @since 2.7.4\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
    "src_path": "com/fasterxml/jackson/databind/introspect/SimpleMixInResolver.java",
    "signature": "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 22,
    "end_line": 22,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
    "src_path": "com/fasterxml/jackson/databind/introspect/SimpleMixInResolver.java",
    "signature": "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver._overrides",
    "snippet": "protected final ClassIntrospector.MixInResolver _overrides;",
    "begin_line": 28,
    "end_line": 28,
    "comment": "/** \n * External resolver that gets called before looking at any locally defined mix-in target classes.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
    "src_path": "com/fasterxml/jackson/databind/introspect/SimpleMixInResolver.java",
    "signature": "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver._localMixIns",
    "snippet": "protected Map\u003cClassKey,Class\u003c?\u003e\u003e _localMixIns;",
    "begin_line": 33,
    "end_line": 33,
    "comment": "/** \n * Simple mix-in targets defined locally.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
    "src_path": "com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
    "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1;",
    "begin_line": 158,
    "end_line": 158,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
    "src_path": "com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
    "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.DEFAULT",
    "snippet": "protected final static Std DEFAULT \u003d new Std(\n                Visibility.PUBLIC_ONLY, // getter\n                Visibility.PUBLIC_ONLY, // is-getter\n                Visibility.ANY, // setter\n                Visibility.ANY, // creator -- legacy, to support single-arg ctors\n                Visibility.PUBLIC_ONLY // field\n                );",
    "begin_line": 164,
    "end_line": 170,
    "comment": "/** \n * This is the canonical base instance, configured with default visibility values\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
    "src_path": "com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
    "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker._getterMinLevel",
    "snippet": "protected final Visibility _getterMinLevel;",
    "begin_line": 172,
    "end_line": 172,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
    "src_path": "com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
    "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker._isGetterMinLevel",
    "snippet": "protected final Visibility _isGetterMinLevel;",
    "begin_line": 173,
    "end_line": 173,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
    "src_path": "com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
    "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker._setterMinLevel",
    "snippet": "protected final Visibility _setterMinLevel;",
    "begin_line": 174,
    "end_line": 174,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
    "src_path": "com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
    "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker._creatorMinLevel",
    "snippet": "protected final Visibility _creatorMinLevel;",
    "begin_line": 175,
    "end_line": 175,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
    "src_path": "com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
    "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker._fieldMinLevel",
    "snippet": "protected final Visibility _fieldMinLevel;",
    "begin_line": 176,
    "end_line": 176,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.jsontype.NamedType",
    "src_path": "com/fasterxml/jackson/databind/jsontype/NamedType.java",
    "signature": "com.fasterxml.jackson.databind.jsontype.NamedType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 9,
    "end_line": 9,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.jsontype.NamedType",
    "src_path": "com/fasterxml/jackson/databind/jsontype/NamedType.java",
    "signature": "com.fasterxml.jackson.databind.jsontype.NamedType._class",
    "snippet": "protected final Class\u003c?\u003e _class;",
    "begin_line": 11,
    "end_line": 11,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.jsontype.NamedType",
    "src_path": "com/fasterxml/jackson/databind/jsontype/NamedType.java",
    "signature": "com.fasterxml.jackson.databind.jsontype.NamedType._hashCode",
    "snippet": "protected final int _hashCode;",
    "begin_line": 12,
    "end_line": 12,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.jsontype.NamedType",
    "src_path": "com/fasterxml/jackson/databind/jsontype/NamedType.java",
    "signature": "com.fasterxml.jackson.databind.jsontype.NamedType._name",
    "snippet": "protected String _name;",
    "begin_line": 14,
    "end_line": 14,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
    "src_path": "com/fasterxml/jackson/databind/jsontype/impl/StdSubtypeResolver.java",
    "signature": "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
    "src_path": "com/fasterxml/jackson/databind/jsontype/impl/StdSubtypeResolver.java",
    "signature": "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver._registeredSubtypes",
    "snippet": "protected LinkedHashSet\u003cNamedType\u003e _registeredSubtypes;",
    "begin_line": 22,
    "end_line": 22,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.node.JsonNodeFactory",
    "src_path": "com/fasterxml/jackson/databind/node/JsonNodeFactory.java",
    "signature": "com.fasterxml.jackson.databind.node.JsonNodeFactory.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.node.JsonNodeFactory",
    "src_path": "com/fasterxml/jackson/databind/node/JsonNodeFactory.java",
    "signature": "com.fasterxml.jackson.databind.node.JsonNodeFactory._cfgBigDecimalExact",
    "snippet": "private final boolean _cfgBigDecimalExact;",
    "begin_line": 22,
    "end_line": 22,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.node.JsonNodeFactory",
    "src_path": "com/fasterxml/jackson/databind/node/JsonNodeFactory.java",
    "signature": "com.fasterxml.jackson.databind.node.JsonNodeFactory.decimalsNormalized",
    "snippet": "private static final JsonNodeFactory decimalsNormalized\n        \u003d new JsonNodeFactory(false);",
    "begin_line": 24,
    "end_line": 25,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.node.JsonNodeFactory",
    "src_path": "com/fasterxml/jackson/databind/node/JsonNodeFactory.java",
    "signature": "com.fasterxml.jackson.databind.node.JsonNodeFactory.decimalsAsIs",
    "snippet": "private static final JsonNodeFactory decimalsAsIs\n        \u003d new JsonNodeFactory(true);",
    "begin_line": 26,
    "end_line": 27,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.node.JsonNodeFactory",
    "src_path": "com/fasterxml/jackson/databind/node/JsonNodeFactory.java",
    "signature": "com.fasterxml.jackson.databind.node.JsonNodeFactory.instance",
    "snippet": "public final static JsonNodeFactory instance \u003d decimalsNormalized;",
    "begin_line": 34,
    "end_line": 34,
    "comment": "/** \n * Default singleton instance that construct \"standard\" node instances: given that this class is stateless, a globally shared singleton can be used.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
    "src_path": "com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory._concrete",
    "snippet": "protected final static HashMap\u003cString, JsonSerializer\u003c?\u003e\u003e _concrete;",
    "begin_line": 51,
    "end_line": 51,
    "comment": "/** \n * Since these are all JDK classes, we shouldn\u0027t have to worry about ClassLoader used to load them. Rather, we can just use the class name, and keep things simple and efficient.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
    "src_path": "com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory._concreteLazy",
    "snippet": "protected final static HashMap\u003cString, Class\u003c? extends JsonSerializer\u003c?\u003e\u003e\u003e _concreteLazy;",
    "begin_line": 58,
    "end_line": 58,
    "comment": "/** \n * Actually it may not make much sense to eagerly instantiate all kinds of serializers: so this Map actually contains class references, not instances\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
    "src_path": "com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory._factoryConfig",
    "snippet": "protected final SerializerFactoryConfig _factoryConfig;",
    "begin_line": 121,
    "end_line": 121,
    "comment": "/** \n * Configuration settings for this factory; immutable instance (just like this factory), new version created via copy-constructor (fluent-style)\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "src_path": "com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1;",
    "begin_line": 62,
    "end_line": 62,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "src_path": "com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
    "signature": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.instance",
    "snippet": "public final static BeanSerializerFactory instance \u003d new BeanSerializerFactory(null);",
    "begin_line": 69,
    "end_line": 69,
    "comment": "/** \n * Like  {@link BasicSerializerFactory}, this factory is stateless, and thus a single shared global (\u003d\u003d singleton) instance can be used without thread-safety issues.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 36,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._seenObjectIds",
    "snippet": "protected transient Map\u003cObject, WritableObjectId\u003e _seenObjectIds;",
    "begin_line": 48,
    "end_line": 48,
    "comment": "/** \n * Per-serialization map Object Ids that have seen so far, iff Object Id handling is enabled.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._objectIdGenerators",
    "snippet": "protected transient ArrayList\u003cObjectIdGenerator\u003c?\u003e\u003e _objectIdGenerators;",
    "begin_line": 50,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._generator",
    "snippet": "protected transient JsonGenerator _generator;",
    "begin_line": 58,
    "end_line": 58,
    "comment": "/** \n * Generator used for serialization. Needed mostly for error reporting purposes.\n * @since 2.8\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
    "src_path": "com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java",
    "signature": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 608,
    "end_line": 608,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.SerializerCache",
    "src_path": "com/fasterxml/jackson/databind/ser/SerializerCache.java",
    "signature": "com.fasterxml.jackson.databind.ser.SerializerCache._sharedMap",
    "snippet": "private final HashMap\u003cTypeKey, JsonSerializer\u003cObject\u003e\u003e _sharedMap\n        \u003d new HashMap\u003cTypeKey, JsonSerializer\u003cObject\u003e\u003e(64);",
    "begin_line": 33,
    "end_line": 34,
    "comment": "/** \n * Shared, modifiable map; all access needs to be through synchronized blocks. \u003cp\u003e NOTE: keys are of various types (see below for key types), in addition to basic  {@link JavaType} used for \"untyped\" serializers.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.SerializerCache",
    "src_path": "com/fasterxml/jackson/databind/ser/SerializerCache.java",
    "signature": "com.fasterxml.jackson.databind.ser.SerializerCache._readOnlyMap",
    "snippet": "private final AtomicReference\u003cReadOnlyClassToSerializerMap\u003e _readOnlyMap\n        \u003d new AtomicReference\u003cReadOnlyClassToSerializerMap\u003e();",
    "begin_line": 39,
    "end_line": 40,
    "comment": "/** \n * Most recent read-only instance, created from _sharedMap, if any.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/impl/FailingSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.impl.FailingSerializer._msg",
    "snippet": "protected final String _msg;",
    "begin_line": 25,
    "end_line": 25,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/BooleanSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 33,
    "end_line": 33,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/BooleanSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer._forPrimitive",
    "snippet": "protected final boolean _forPrimitive;",
    "begin_line": 39,
    "end_line": 39,
    "comment": "/** \n * Whether type serialized is primitive (boolean) or wrapper (java.lang.Boolean); if true, former, if false, latter.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/BooleanSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 93,
    "end_line": 93,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/BooleanSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer._forPrimitive",
    "snippet": "protected final boolean _forPrimitive;",
    "begin_line": 99,
    "end_line": 99,
    "comment": "/** \n * Whether type serialized is primitive (boolean) or wrapper (java.lang.Boolean); if true, former, if false, latter.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/CalendarSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer.instance",
    "snippet": "public static final CalendarSerializer instance \u003d new CalendarSerializer();",
    "begin_line": 21,
    "end_line": 21,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.DateSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/DateSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.DateSerializer.instance",
    "snippet": "public static final DateSerializer instance \u003d new DateSerializer();",
    "begin_line": 24,
    "end_line": 24,
    "comment": "/** \n * Default instance that is used when no contextual configuration is needed.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
    "src_path": "com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._useTimestamp",
    "snippet": "protected final Boolean _useTimestamp;",
    "begin_line": 29,
    "end_line": 29,
    "comment": "/** \n * Flag that indicates that serialization must be done as the Java timestamp, regardless of other settings.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
    "src_path": "com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._customFormat",
    "snippet": "protected final DateFormat _customFormat;",
    "begin_line": 36,
    "end_line": 36,
    "comment": "/** \n * Specific format to use, if not default format: non null value also indicates that serialization is to be done as JSON String, not numeric timestamp, unless  {@link #_useTimestamp} is true.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.NullSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/NullSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.NullSerializer.instance",
    "snippet": "public final static NullSerializer instance \u003d new NullSerializer();",
    "begin_line": 24,
    "end_line": 24,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/NumberSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializer.instance",
    "snippet": "public final static NumberSerializer instance \u003d new NumberSerializer(Number.class);",
    "begin_line": 27,
    "end_line": 27,
    "comment": "/** \n * Static instance that is only to be used for  {@link java.lang.Number}.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/NumberSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializer._isInt",
    "snippet": "protected final boolean _isInt;",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "src_path": "com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers._numberType",
    "snippet": "protected final JsonParser.NumberType _numberType;",
    "begin_line": 51,
    "end_line": 51,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "src_path": "com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers._schemaType",
    "snippet": "protected final String _schemaType;",
    "begin_line": 52,
    "end_line": 52,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "src_path": "com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers._isInt",
    "snippet": "protected final boolean _isInt;",
    "begin_line": 53,
    "end_line": 53,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "src_path": "com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.instance",
    "snippet": "final static ShortSerializer instance \u003d new ShortSerializer();",
    "begin_line": 105,
    "end_line": 105,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "src_path": "com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.instance",
    "snippet": "final static IntLikeSerializer instance \u003d new IntLikeSerializer();",
    "begin_line": 157,
    "end_line": 157,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "src_path": "com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.instance",
    "snippet": "final static FloatSerializer instance \u003d new FloatSerializer();",
    "begin_line": 185,
    "end_line": 185,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.StdSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/StdSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.StdSerializer.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 36,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.StdSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/StdSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.StdSerializer.KEY_CONTENT_CONVERTER_LOCK",
    "snippet": "private final static Object KEY_CONTENT_CONVERTER_LOCK \u003d new Object();",
    "begin_line": 44,
    "end_line": 44,
    "comment": "/** \n * Key used for storing a lock object to prevent infinite recursion when constructing converting serializers.\n * @since 2.9\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.StdSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/StdSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.StdSerializer._handledType",
    "snippet": "protected final Class\u003cT\u003e _handledType;",
    "begin_line": 50,
    "end_line": 50,
    "comment": "/** \n * Nominal type supported, usually declared type of property for which serializer is used.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.StringSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/StringSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.StringSerializer.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/ToStringSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.ToStringSerializer.instance",
    "snippet": "public final static ToStringSerializer instance \u003d new ToStringSerializer();",
    "begin_line": 28,
    "end_line": 28,
    "comment": "/** \n * Singleton instance to use.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
    "src_path": "com/fasterxml/jackson/databind/ser/std/UUIDSerializer.java",
    "signature": "com.fasterxml.jackson.databind.ser.std.UUIDSerializer.HEX_CHARS",
    "snippet": "final static char[] HEX_CHARS \u003d \"0123456789abcdef\".toCharArray();",
    "begin_line": 21,
    "end_line": 21,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.ClassStack",
    "src_path": "com/fasterxml/jackson/databind/type/ClassStack.java",
    "signature": "com.fasterxml.jackson.databind.type.ClassStack._parent",
    "snippet": "protected final ClassStack _parent;",
    "begin_line": 15,
    "end_line": 15,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.ClassStack",
    "src_path": "com/fasterxml/jackson/databind/type/ClassStack.java",
    "signature": "com.fasterxml.jackson.databind.type.ClassStack._current",
    "snippet": "protected final Class\u003c?\u003e _current;",
    "begin_line": 16,
    "end_line": 16,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.ClassStack",
    "src_path": "com/fasterxml/jackson/databind/type/ClassStack.java",
    "signature": "com.fasterxml.jackson.databind.type.ClassStack._selfRefs",
    "snippet": "private ArrayList\u003cResolvedRecursiveType\u003e _selfRefs;",
    "begin_line": 18,
    "end_line": 18,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.SimpleType",
    "src_path": "com/fasterxml/jackson/databind/type/SimpleType.java",
    "signature": "com.fasterxml.jackson.databind.type.SimpleType.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 16,
    "end_line": 16,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBase",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBase.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBase.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1;",
    "begin_line": 15,
    "end_line": 15,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBase",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBase.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBase.NO_BINDINGS",
    "snippet": "private final static TypeBindings NO_BINDINGS \u003d TypeBindings.emptyBindings();",
    "begin_line": 17,
    "end_line": 17,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBase",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBase.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBase.NO_TYPES",
    "snippet": "private final static JavaType[] NO_TYPES \u003d new JavaType[0];",
    "begin_line": 18,
    "end_line": 18,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBase",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBase.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBase._superClass",
    "snippet": "protected final JavaType _superClass;",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBase",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBase.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBase._superInterfaces",
    "snippet": "protected final JavaType[] _superInterfaces;",
    "begin_line": 22,
    "end_line": 22,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBase",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBase.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBase._bindings",
    "snippet": "protected final TypeBindings _bindings;",
    "begin_line": 31,
    "end_line": 31,
    "comment": "/** \n * Bindings in effect for this type instance; possibly empty. Needed when resolving types declared in members of this type (if any).\n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBase",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBase.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBase._canonicalName",
    "snippet": "volatile transient String _canonicalName;",
    "begin_line": 36,
    "end_line": 36,
    "comment": "/** \n * Lazily initialized external representation of the type\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 15,
    "end_line": 15,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings.NO_STRINGS",
    "snippet": "private final static String[] NO_STRINGS \u003d new String[0];",
    "begin_line": 17,
    "end_line": 17,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings.NO_TYPES",
    "snippet": "private final static JavaType[] NO_TYPES \u003d new JavaType[0];",
    "begin_line": 19,
    "end_line": 19,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings.EMPTY",
    "snippet": "private final static TypeBindings EMPTY \u003d new TypeBindings(NO_STRINGS, NO_TYPES, null);",
    "begin_line": 21,
    "end_line": 21,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings._names",
    "snippet": "private final String[] _names;",
    "begin_line": 30,
    "end_line": 30,
    "comment": "/** \n * Array of type (type variable) names.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings._types",
    "snippet": "private final JavaType[] _types;",
    "begin_line": 35,
    "end_line": 35,
    "comment": "/** \n * Types matching names\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings._unboundVariables",
    "snippet": "private final String[] _unboundVariables;",
    "begin_line": 42,
    "end_line": 42,
    "comment": "/** \n * Names of potentially unresolved type variables.\n * @since 2.3\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings._hashCode",
    "snippet": "private final int _hashCode;",
    "begin_line": 44,
    "end_line": 44,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings.VARS_ABSTRACT_LIST",
    "snippet": "private final static TypeVariable\u003c?\u003e[] VARS_ABSTRACT_LIST \u003d AbstractList.class.getTypeParameters();",
    "begin_line": 384,
    "end_line": 384,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings.VARS_COLLECTION",
    "snippet": "private final static TypeVariable\u003c?\u003e[] VARS_COLLECTION \u003d Collection.class.getTypeParameters();",
    "begin_line": 385,
    "end_line": 385,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings.VARS_ITERABLE",
    "snippet": "private final static TypeVariable\u003c?\u003e[] VARS_ITERABLE \u003d Iterable.class.getTypeParameters();",
    "begin_line": 386,
    "end_line": 386,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings.VARS_LIST",
    "snippet": "private final static TypeVariable\u003c?\u003e[] VARS_LIST \u003d List.class.getTypeParameters();",
    "begin_line": 387,
    "end_line": 387,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings.VARS_ARRAY_LIST",
    "snippet": "private final static TypeVariable\u003c?\u003e[] VARS_ARRAY_LIST \u003d ArrayList.class.getTypeParameters();",
    "begin_line": 388,
    "end_line": 388,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings.VARS_MAP",
    "snippet": "private final static TypeVariable\u003c?\u003e[] VARS_MAP \u003d Map.class.getTypeParameters();",
    "begin_line": 390,
    "end_line": 390,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings.VARS_HASH_MAP",
    "snippet": "private final static TypeVariable\u003c?\u003e[] VARS_HASH_MAP \u003d HashMap.class.getTypeParameters();",
    "begin_line": 391,
    "end_line": 391,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings.VARS_LINKED_HASH_MAP",
    "snippet": "private final static TypeVariable\u003c?\u003e[] VARS_LINKED_HASH_MAP \u003d LinkedHashMap.class.getTypeParameters();",
    "begin_line": 392,
    "end_line": 392,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings._raw",
    "snippet": "private final Class\u003c?\u003e _raw;",
    "begin_line": 435,
    "end_line": 435,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings._params",
    "snippet": "private final JavaType[] _params;",
    "begin_line": 436,
    "end_line": 436,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
    "src_path": "com/fasterxml/jackson/databind/type/TypeBindings.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeBindings._hash",
    "snippet": "private final int _hash;",
    "begin_line": 437,
    "end_line": 437,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 37,
    "end_line": 37,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.NO_TYPES",
    "snippet": "private final static JavaType[] NO_TYPES \u003d new JavaType[0];",
    "begin_line": 39,
    "end_line": 39,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.instance",
    "snippet": "protected final static TypeFactory instance \u003d new TypeFactory();",
    "begin_line": 46,
    "end_line": 46,
    "comment": "/** \n * Globally shared singleton. Not accessed directly; non-core code should use per-ObjectMapper instance (via configuration objects). Core Jackson code uses  {@link #defaultInstance} for accessing it.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS",
    "snippet": "protected final static TypeBindings EMPTY_BINDINGS \u003d TypeBindings.emptyBindings();",
    "begin_line": 48,
    "end_line": 48,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CLS_STRING",
    "snippet": "private final static Class\u003c?\u003e CLS_STRING \u003d String.class;",
    "begin_line": 60,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CLS_OBJECT",
    "snippet": "private final static Class\u003c?\u003e CLS_OBJECT \u003d Object.class;",
    "begin_line": 61,
    "end_line": 61,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CLS_COMPARABLE",
    "snippet": "private final static Class\u003c?\u003e CLS_COMPARABLE \u003d Comparable.class;",
    "begin_line": 63,
    "end_line": 63,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CLS_CLASS",
    "snippet": "private final static Class\u003c?\u003e CLS_CLASS \u003d Class.class;",
    "begin_line": 64,
    "end_line": 64,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CLS_ENUM",
    "snippet": "private final static Class\u003c?\u003e CLS_ENUM \u003d Enum.class;",
    "begin_line": 65,
    "end_line": 65,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CLS_BOOL",
    "snippet": "private final static Class\u003c?\u003e CLS_BOOL \u003d Boolean.TYPE;",
    "begin_line": 67,
    "end_line": 67,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CLS_INT",
    "snippet": "private final static Class\u003c?\u003e CLS_INT \u003d Integer.TYPE;",
    "begin_line": 68,
    "end_line": 68,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CLS_LONG",
    "snippet": "private final static Class\u003c?\u003e CLS_LONG \u003d Long.TYPE;",
    "begin_line": 69,
    "end_line": 69,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_BOOL",
    "snippet": "protected final static SimpleType CORE_TYPE_BOOL \u003d new SimpleType(CLS_BOOL);",
    "begin_line": 78,
    "end_line": 78,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_INT",
    "snippet": "protected final static SimpleType CORE_TYPE_INT \u003d new SimpleType(CLS_INT);",
    "begin_line": 79,
    "end_line": 79,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_LONG",
    "snippet": "protected final static SimpleType CORE_TYPE_LONG \u003d new SimpleType(CLS_LONG);",
    "begin_line": 80,
    "end_line": 80,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_STRING",
    "snippet": "protected final static SimpleType CORE_TYPE_STRING \u003d new SimpleType(CLS_STRING);",
    "begin_line": 83,
    "end_line": 83,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_OBJECT",
    "snippet": "protected final static SimpleType CORE_TYPE_OBJECT \u003d new SimpleType(CLS_OBJECT);",
    "begin_line": 86,
    "end_line": 86,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_COMPARABLE",
    "snippet": "protected final static SimpleType CORE_TYPE_COMPARABLE \u003d new SimpleType(CLS_COMPARABLE);",
    "begin_line": 94,
    "end_line": 94,
    "comment": "/** \n * Cache  {@link Comparable} because it is both parameteric (relatively costly toresolve) and mostly useless (no special handling), better handle directly\n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_ENUM",
    "snippet": "protected final static SimpleType CORE_TYPE_ENUM \u003d new SimpleType(CLS_ENUM);",
    "begin_line": 102,
    "end_line": 102,
    "comment": "/** \n * Cache  {@link Enum} because it is parametric AND self-referential (costly toresolve) and useless in itself (no special handling).\n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_CLASS",
    "snippet": "protected final static SimpleType CORE_TYPE_CLASS \u003d new SimpleType(CLS_CLASS);",
    "begin_line": 110,
    "end_line": 110,
    "comment": "/** \n * Cache  {@link Class} because it is nominally parametric, but has no reallyuseful information.\n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory._typeCache",
    "snippet": "protected final LRUMap\u003cObject,JavaType\u003e _typeCache;",
    "begin_line": 117,
    "end_line": 117,
    "comment": "/** \n * Since type resolution can be expensive (specifically when resolving actual generic types), we will use small cache to avoid repetitive resolution of core types\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory._modifiers",
    "snippet": "protected final TypeModifier[] _modifiers;",
    "begin_line": 129,
    "end_line": 129,
    "comment": "/** \n * Registered  {@link TypeModifier}s: objects that can change details of  {@link JavaType} instances factory constructs.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory._parser",
    "snippet": "protected final TypeParser _parser;",
    "begin_line": 131,
    "end_line": 131,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src_path": "com/fasterxml/jackson/databind/type/TypeFactory.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeFactory._classLoader",
    "snippet": "protected final ClassLoader _classLoader;",
    "begin_line": 136,
    "end_line": 136,
    "comment": "/** \n * ClassLoader used by this factory [databind#624].\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeParser",
    "src_path": "com/fasterxml/jackson/databind/type/TypeParser.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeParser.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 15,
    "end_line": 15,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeParser",
    "src_path": "com/fasterxml/jackson/databind/type/TypeParser.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeParser._factory",
    "snippet": "protected final TypeFactory _factory;",
    "begin_line": 17,
    "end_line": 17,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeParser",
    "src_path": "com/fasterxml/jackson/databind/type/TypeParser.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeParser._input",
    "snippet": "protected final String _input;",
    "begin_line": 99,
    "end_line": 99,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeParser",
    "src_path": "com/fasterxml/jackson/databind/type/TypeParser.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeParser._index",
    "snippet": "protected int _index;",
    "begin_line": 101,
    "end_line": 101,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.type.TypeParser",
    "src_path": "com/fasterxml/jackson/databind/type/TypeParser.java",
    "signature": "com.fasterxml.jackson.databind.type.TypeParser._pushbackToken",
    "snippet": "protected String _pushbackToken;",
    "begin_line": 103,
    "end_line": 103,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
    "src_path": "com/fasterxml/jackson/databind/util/ClassUtil.java",
    "signature": "com.fasterxml.jackson.databind.util.ClassUtil.CLS_OBJECT",
    "snippet": "private final static Class\u003c?\u003e CLS_OBJECT \u003d Object.class;",
    "begin_line": 17,
    "end_line": 17,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
    "src_path": "com/fasterxml/jackson/databind/util/ClassUtil.java",
    "signature": "com.fasterxml.jackson.databind.util.ClassUtil.NO_ANNOTATIONS",
    "snippet": "private final static Annotation[] NO_ANNOTATIONS \u003d new Annotation[0];",
    "begin_line": 19,
    "end_line": 19,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
    "src_path": "com/fasterxml/jackson/databind/util/ClassUtil.java",
    "signature": "com.fasterxml.jackson.databind.util.ClassUtil.NO_CTORS",
    "snippet": "private final static Ctor[] NO_CTORS \u003d new Ctor[0];",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
    "src_path": "com/fasterxml/jackson/databind/util/ClassUtil.java",
    "signature": "com.fasterxml.jackson.databind.util.ClassUtil.EMPTY_ITERATOR",
    "snippet": "private final static Iterator\u003c?\u003e EMPTY_ITERATOR \u003d Collections.emptyIterator();",
    "begin_line": 22,
    "end_line": 22,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
    "src_path": "com/fasterxml/jackson/databind/util/ClassUtil.java",
    "signature": "com.fasterxml.jackson.databind.util.ClassUtil.instance",
    "snippet": "final static EnumTypeLocator instance \u003d new EnumTypeLocator();",
    "begin_line": 1138,
    "end_line": 1138,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
    "src_path": "com/fasterxml/jackson/databind/util/ClassUtil.java",
    "signature": "com.fasterxml.jackson.databind.util.ClassUtil.enumSetTypeField",
    "snippet": "private final Field enumSetTypeField;",
    "begin_line": 1140,
    "end_line": 1140,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
    "src_path": "com/fasterxml/jackson/databind/util/ClassUtil.java",
    "signature": "com.fasterxml.jackson.databind.util.ClassUtil.enumMapTypeField",
    "snippet": "private final Field enumMapTypeField;",
    "begin_line": 1141,
    "end_line": 1141,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
    "src_path": "com/fasterxml/jackson/databind/util/ClassUtil.java",
    "signature": "com.fasterxml.jackson.databind.util.ClassUtil._ctor",
    "snippet": "public final Constructor\u003c?\u003e _ctor;",
    "begin_line": 1221,
    "end_line": 1221,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
    "src_path": "com/fasterxml/jackson/databind/util/ClassUtil.java",
    "signature": "com.fasterxml.jackson.databind.util.ClassUtil._annotations",
    "snippet": "private Annotation[] _annotations;",
    "begin_line": 1223,
    "end_line": 1223,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
    "src_path": "com/fasterxml/jackson/databind/util/ClassUtil.java",
    "signature": "com.fasterxml.jackson.databind.util.ClassUtil._paramAnnotations",
    "snippet": "private Annotation[][] _paramAnnotations;",
    "begin_line": 1225,
    "end_line": 1225,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
    "src_path": "com/fasterxml/jackson/databind/util/ClassUtil.java",
    "signature": "com.fasterxml.jackson.databind.util.ClassUtil._paramCount",
    "snippet": "private int _paramCount \u003d -1;",
    "begin_line": 1227,
    "end_line": 1227,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
    "src_path": "com/fasterxml/jackson/databind/util/LRUMap.java",
    "signature": "com.fasterxml.jackson.databind.util.LRUMap.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 26,
    "end_line": 26,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
    "src_path": "com/fasterxml/jackson/databind/util/LRUMap.java",
    "signature": "com.fasterxml.jackson.databind.util.LRUMap._maxEntries",
    "snippet": "protected final transient int _maxEntries;",
    "begin_line": 28,
    "end_line": 28,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
    "src_path": "com/fasterxml/jackson/databind/util/LRUMap.java",
    "signature": "com.fasterxml.jackson.databind.util.LRUMap._map",
    "snippet": "protected final transient ConcurrentHashMap\u003cK,V\u003e _map;",
    "begin_line": 30,
    "end_line": 30,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
    "src_path": "com/fasterxml/jackson/databind/util/LRUMap.java",
    "signature": "com.fasterxml.jackson.databind.util.LRUMap._jdkSerializeMaxEntries",
    "snippet": "protected transient int _jdkSerializeMaxEntries;",
    "begin_line": 85,
    "end_line": 85,
    "comment": "/** \n * Ugly hack, to work through the requirement that _value is indeed final, and that JDK serialization won\u0027t call ctor(s) if Serializable is implemented.\n * @since 2.1\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.RootNameLookup",
    "src_path": "com/fasterxml/jackson/databind/util/RootNameLookup.java",
    "signature": "com.fasterxml.jackson.databind.util.RootNameLookup.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 1L;",
    "begin_line": 13,
    "end_line": 13,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.RootNameLookup",
    "src_path": "com/fasterxml/jackson/databind/util/RootNameLookup.java",
    "signature": "com.fasterxml.jackson.databind.util.RootNameLookup._rootNames",
    "snippet": "protected transient LRUMap\u003cClassKey,PropertyName\u003e _rootNames;",
    "begin_line": 19,
    "end_line": 19,
    "comment": "/** \n * For efficient operation, let\u0027s try to minimize number of times we need to introspect root element name to use.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_ISO8601",
    "snippet": "public final static String DATE_FORMAT_STR_ISO8601 \u003d \"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSSZ\";",
    "begin_line": 34,
    "end_line": 34,
    "comment": "/** \n * Defines a commonly used date format that conforms to ISO-8601 date formatting standard, when it includes basic undecorated timezone definition\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_ISO8601_Z",
    "snippet": "protected final static String DATE_FORMAT_STR_ISO8601_Z \u003d \"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\u0027Z\u0027\";",
    "begin_line": 40,
    "end_line": 40,
    "comment": "/** \n * Same as \u0027regular\u0027 8601, but handles \u0027Z\u0027 as an alias for \"+0000\" (or \"UTC\")\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_PLAIN",
    "snippet": "protected final static String DATE_FORMAT_STR_PLAIN \u003d \"yyyy-MM-dd\";",
    "begin_line": 45,
    "end_line": 45,
    "comment": "/** \n * ISO-8601 with just the Date part, no time\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_RFC1123",
    "snippet": "protected final static String DATE_FORMAT_STR_RFC1123 \u003d \"EEE, dd MMM yyyy HH:mm:ss zzz\";",
    "begin_line": 51,
    "end_line": 51,
    "comment": "/** \n * This constant defines the date format specified by RFC 1123 / RFC 822.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.ALL_FORMATS",
    "snippet": "protected final static String[] ALL_FORMATS \u003d new String[] {\n        DATE_FORMAT_STR_ISO8601,\n        DATE_FORMAT_STR_ISO8601_Z,\n        DATE_FORMAT_STR_RFC1123,\n        DATE_FORMAT_STR_PLAIN\n    };",
    "begin_line": 56,
    "end_line": 61,
    "comment": "/** \n * For error messages we\u0027ll also need a list of all formats.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.DEFAULT_TIMEZONE",
    "snippet": "private final static TimeZone DEFAULT_TIMEZONE;",
    "begin_line": 67,
    "end_line": 67,
    "comment": "/** \n * By default we use UTC for everything, with Jackson 2.7 and later (2.6 and earlier relied on GMT)\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.DEFAULT_LOCALE",
    "snippet": "private final static Locale DEFAULT_LOCALE \u003d Locale.US;",
    "begin_line": 72,
    "end_line": 72,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_RFC1123",
    "snippet": "protected final static DateFormat DATE_FORMAT_RFC1123;",
    "begin_line": 74,
    "end_line": 74,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_ISO8601",
    "snippet": "protected final static DateFormat DATE_FORMAT_ISO8601;",
    "begin_line": 76,
    "end_line": 76,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_ISO8601_Z",
    "snippet": "protected final static DateFormat DATE_FORMAT_ISO8601_Z;",
    "begin_line": 77,
    "end_line": 77,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_PLAIN",
    "snippet": "protected final static DateFormat DATE_FORMAT_PLAIN;",
    "begin_line": 79,
    "end_line": 79,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.instance",
    "snippet": "public final static StdDateFormat instance \u003d new StdDateFormat();",
    "begin_line": 103,
    "end_line": 103,
    "comment": "/** \n * A singleton instance can be used for cloning purposes, as a blueprint of sorts.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat._timezone",
    "snippet": "protected transient TimeZone _timezone;",
    "begin_line": 109,
    "end_line": 109,
    "comment": "/** \n * Caller may want to explicitly override timezone to use; if so, we will have non-null value here.\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat._locale",
    "snippet": "protected final Locale _locale;",
    "begin_line": 111,
    "end_line": 111,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat._lenient",
    "snippet": "protected Boolean _lenient;",
    "begin_line": 121,
    "end_line": 121,
    "comment": "/** \n * Explicit override for leniency, if specified. \u003cp\u003e Can not be `final` because  {@link #setLenient(boolean)} returns`void`.\n * @since 2.7\n */\n"
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat._formatRFC1123",
    "snippet": "protected transient DateFormat _formatRFC1123;",
    "begin_line": 123,
    "end_line": 123,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat._formatISO8601",
    "snippet": "protected transient DateFormat _formatISO8601;",
    "begin_line": 124,
    "end_line": 124,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat._formatISO8601_z",
    "snippet": "protected transient DateFormat _formatISO8601_z;",
    "begin_line": 125,
    "end_line": 125,
    "comment": ""
  },
  {
    "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
    "src_path": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
    "signature": "com.fasterxml.jackson.databind.util.StdDateFormat._formatPlain",
    "snippet": "protected transient DateFormat _formatPlain;",
    "begin_line": 126,
    "end_line": 126,
    "comment": ""
  }
]