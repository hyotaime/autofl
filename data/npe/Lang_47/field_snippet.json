[
  {
    "class_name": "org.apache.commons.lang.text.StrBuilder",
    "src_path": "org/apache/commons/lang/text/StrBuilder.java",
    "signature": "org.apache.commons.lang.text.StrBuilder.CAPACITY",
    "snippet": "static final int CAPACITY \u003d 32;",
    "begin_line": 75,
    "end_line": 75,
    "comment": "/** \n * The extra capacity for new builders.\n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrBuilder",
    "src_path": "org/apache/commons/lang/text/StrBuilder.java",
    "signature": "org.apache.commons.lang.text.StrBuilder.serialVersionUID",
    "snippet": "private static final long serialVersionUID \u003d 7628716375283629643L;",
    "begin_line": 82,
    "end_line": 82,
    "comment": "/** \n * Required for serialization support.\n * @see java.io.Serializable\n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrBuilder",
    "src_path": "org/apache/commons/lang/text/StrBuilder.java",
    "signature": "org.apache.commons.lang.text.StrBuilder.buffer",
    "snippet": "protected char[] buffer;",
    "begin_line": 85,
    "end_line": 85,
    "comment": "/** \n * Internal data storage. \n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrBuilder",
    "src_path": "org/apache/commons/lang/text/StrBuilder.java",
    "signature": "org.apache.commons.lang.text.StrBuilder.size",
    "snippet": "protected int size;",
    "begin_line": 87,
    "end_line": 87,
    "comment": "/** \n * Current size of the buffer. \n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrBuilder",
    "src_path": "org/apache/commons/lang/text/StrBuilder.java",
    "signature": "org.apache.commons.lang.text.StrBuilder.newLine",
    "snippet": "private String newLine;",
    "begin_line": 89,
    "end_line": 89,
    "comment": "/** \n * The new line. \n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrBuilder",
    "src_path": "org/apache/commons/lang/text/StrBuilder.java",
    "signature": "org.apache.commons.lang.text.StrBuilder.nullText",
    "snippet": "private String nullText;",
    "begin_line": 91,
    "end_line": 91,
    "comment": "/** \n * The null text. \n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrBuilder",
    "src_path": "org/apache/commons/lang/text/StrBuilder.java",
    "signature": "org.apache.commons.lang.text.StrBuilder.pos",
    "snippet": "private int pos;",
    "begin_line": 2590,
    "end_line": 2590,
    "comment": "/** \n * The current stream position. \n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrBuilder",
    "src_path": "org/apache/commons/lang/text/StrBuilder.java",
    "signature": "org.apache.commons.lang.text.StrBuilder.mark",
    "snippet": "private int mark;",
    "begin_line": 2592,
    "end_line": 2592,
    "comment": "/** \n * The last mark position. \n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrMatcher",
    "src_path": "org/apache/commons/lang/text/StrMatcher.java",
    "signature": "org.apache.commons.lang.text.StrMatcher.COMMA_MATCHER",
    "snippet": "private static final StrMatcher COMMA_MATCHER \u003d new CharMatcher(\u0027,\u0027);",
    "begin_line": 37,
    "end_line": 37,
    "comment": "/** \n * Matches the comma character.\n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrMatcher",
    "src_path": "org/apache/commons/lang/text/StrMatcher.java",
    "signature": "org.apache.commons.lang.text.StrMatcher.TAB_MATCHER",
    "snippet": "private static final StrMatcher TAB_MATCHER \u003d new CharMatcher(\u0027\\t\u0027);",
    "begin_line": 41,
    "end_line": 41,
    "comment": "/** \n * Matches the tab character.\n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrMatcher",
    "src_path": "org/apache/commons/lang/text/StrMatcher.java",
    "signature": "org.apache.commons.lang.text.StrMatcher.SPACE_MATCHER",
    "snippet": "private static final StrMatcher SPACE_MATCHER \u003d new CharMatcher(\u0027 \u0027);",
    "begin_line": 45,
    "end_line": 45,
    "comment": "/** \n * Matches the space character.\n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrMatcher",
    "src_path": "org/apache/commons/lang/text/StrMatcher.java",
    "signature": "org.apache.commons.lang.text.StrMatcher.SPLIT_MATCHER",
    "snippet": "private static final StrMatcher SPLIT_MATCHER \u003d new CharSetMatcher(\" \\t\\n\\r\\f\".toCharArray());",
    "begin_line": 50,
    "end_line": 50,
    "comment": "/** \n * Matches the same characters as StringTokenizer, namely space, tab, newline, formfeed.\n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrMatcher",
    "src_path": "org/apache/commons/lang/text/StrMatcher.java",
    "signature": "org.apache.commons.lang.text.StrMatcher.TRIM_MATCHER",
    "snippet": "private static final StrMatcher TRIM_MATCHER \u003d new TrimMatcher();",
    "begin_line": 54,
    "end_line": 54,
    "comment": "/** \n * Matches the String trim() whitespace characters.\n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrMatcher",
    "src_path": "org/apache/commons/lang/text/StrMatcher.java",
    "signature": "org.apache.commons.lang.text.StrMatcher.SINGLE_QUOTE_MATCHER",
    "snippet": "private static final StrMatcher SINGLE_QUOTE_MATCHER \u003d new CharMatcher(\u0027\\\u0027\u0027);",
    "begin_line": 58,
    "end_line": 58,
    "comment": "/** \n * Matches the double quote character.\n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrMatcher",
    "src_path": "org/apache/commons/lang/text/StrMatcher.java",
    "signature": "org.apache.commons.lang.text.StrMatcher.DOUBLE_QUOTE_MATCHER",
    "snippet": "private static final StrMatcher DOUBLE_QUOTE_MATCHER \u003d new CharMatcher(\u0027\"\u0027);",
    "begin_line": 62,
    "end_line": 62,
    "comment": "/** \n * Matches the double quote character.\n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrMatcher",
    "src_path": "org/apache/commons/lang/text/StrMatcher.java",
    "signature": "org.apache.commons.lang.text.StrMatcher.QUOTE_MATCHER",
    "snippet": "private static final StrMatcher QUOTE_MATCHER \u003d new CharSetMatcher(\"\u0027\\\"\".toCharArray());",
    "begin_line": 66,
    "end_line": 66,
    "comment": "/** \n * Matches the single or double quote character.\n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrMatcher",
    "src_path": "org/apache/commons/lang/text/StrMatcher.java",
    "signature": "org.apache.commons.lang.text.StrMatcher.NONE_MATCHER",
    "snippet": "private static final StrMatcher NONE_MATCHER \u003d new NoMatcher();",
    "begin_line": 70,
    "end_line": 70,
    "comment": "/** \n * Matches no characters.\n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrMatcher",
    "src_path": "org/apache/commons/lang/text/StrMatcher.java",
    "signature": "org.apache.commons.lang.text.StrMatcher.chars",
    "snippet": "private char[] chars;",
    "begin_line": 276,
    "end_line": 276,
    "comment": "/** \n * The set of characters to match. \n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrMatcher",
    "src_path": "org/apache/commons/lang/text/StrMatcher.java",
    "signature": "org.apache.commons.lang.text.StrMatcher.ch",
    "snippet": "private char ch;",
    "begin_line": 309,
    "end_line": 309,
    "comment": "/** \n * The character to match. \n */\n"
  },
  {
    "class_name": "org.apache.commons.lang.text.StrMatcher",
    "src_path": "org/apache/commons/lang/text/StrMatcher.java",
    "signature": "org.apache.commons.lang.text.StrMatcher.chars",
    "snippet": "private char[] chars;",
    "begin_line": 341,
    "end_line": 341,
    "comment": "/** \n * The string to match, as a character array. \n */\n"
  }
]